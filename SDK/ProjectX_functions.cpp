// LEAP (1.X) SDK

#ifdef _MSC_VER
	#pragma pack(push, 0x8)
#endif

#include "ProjectX_classes.hpp"

namespace SDK
{
//---------------------------------------------------------------------------
//Functions
//---------------------------------------------------------------------------

// Function ProjectX.ActorPruningSystem.Multicast_ShowActors
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_NetMulticast, FUNC_Public)
// Parameters:
// TArray<class AActor*>          ActorsToShow                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)

void AActorPruningSystem::Multicast_ShowActors(TArray<class AActor*> ActorsToShow)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ActorPruningSystem.Multicast_ShowActors"));

	struct
	{
		TArray<class AActor*>          ActorsToShow;
	} params = {};

	params.ActorsToShow = ActorsToShow;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ActorSpawningVolume.SpawningCompleted
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)

void AActorSpawningVolume::SpawningCompleted()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ActorSpawningVolume.SpawningCompleted"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ActorSpawningVolume.OnChildFinishedSpawning
// (FUNC_Final, FUNC_Native, FUNC_Private)
// Parameters:
// class UObject*                 Spawner                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AActorSpawningVolume::OnChildFinishedSpawning(class UObject* Spawner)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ActorSpawningVolume.OnChildFinishedSpawning"));

	struct
	{
		class UObject*                 Spawner;
	} params = {};

	params.Spawner = Spawner;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ActorStateManager.Server_SetState
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetServer, FUNC_NetValidate)
// Parameters:
// class AController*             Sender                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AManagedStateActor*      Actor                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// unsigned char                  State                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AActorStateManager::Server_SetState(class AController* Sender, class AManagedStateActor* Actor, unsigned char State)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ActorStateManager.Server_SetState"));

	struct
	{
		class AController*             Sender;
		class AManagedStateActor*      Actor;
		unsigned char                  State;
	} params = {};

	params.Sender = Sender;
	params.Actor = Actor;
	params.State = State;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ActorStateManager.Multicast_SetState
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_NetMulticast, FUNC_Public)
// Parameters:
// class AController*             Sender                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AManagedStateActor*      Actor                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// unsigned char                  State                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AActorStateManager::Multicast_SetState(class AController* Sender, class AManagedStateActor* Actor, unsigned char State)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ActorStateManager.Multicast_SetState"));

	struct
	{
		class AController*             Sender;
		class AManagedStateActor*      Actor;
		unsigned char                  State;
	} params = {};

	params.Sender = Sender;
	params.Actor = Actor;
	params.State = State;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AdvancedCharacterMovement.GetProxyMovementComponents
// (FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// TArray<class UProxyMovementComponent*> ProxyMovementComponents        (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

void UAdvancedCharacterMovement::GetProxyMovementComponents(TArray<class UProxyMovementComponent*>* ProxyMovementComponents)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AdvancedCharacterMovement.GetProxyMovementComponents"));

	struct
	{
		TArray<class UProxyMovementComponent*> ProxyMovementComponents;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	if (ProxyMovementComponents != nullptr)
		*ProxyMovementComponents = params.ProxyMovementComponents;
}


// Function ProjectX.ProxyMovementComponent.IsReplay
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UProxyMovementComponent::IsReplay()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProxyMovementComponent.IsReplay"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.BasicUserWidget.OnWorldReady
// (FUNC_BlueprintCosmetic, FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)

void UBasicUserWidget::OnWorldReady()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.BasicUserWidget.OnWorldReady"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AdvancedUserWidget.ToggleWidget
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// TEnumAsByte<EWindowToggleCommand> ToggleCommand                  (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UAdvancedUserWidget::ToggleWidget(TEnumAsByte<EWindowToggleCommand> ToggleCommand)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AdvancedUserWidget.ToggleWidget"));

	struct
	{
		TEnumAsByte<EWindowToggleCommand> ToggleCommand;
	} params = {};

	params.ToggleCommand = ToggleCommand;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AdvancedUserWidget.SetWidgetVisible
// (FUNC_Native, FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)

void UAdvancedUserWidget::SetWidgetVisible()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AdvancedUserWidget.SetWidgetVisible"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AdvancedUserWidget.OnWidgetVisible
// (FUNC_Native, FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)
// Parameters:
// class UObject*                 ContextObject                  (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UAdvancedUserWidget::OnWidgetVisible(class UObject* ContextObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AdvancedUserWidget.OnWidgetVisible"));

	struct
	{
		class UObject*                 ContextObject;
	} params = {};

	params.ContextObject = ContextObject;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AdvancedUserWidget.OnWidgetDelayedCollapseStart
// (FUNC_Native, FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)
// Parameters:
// class UObject*                 ContextObject                  (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UAdvancedUserWidget::OnWidgetDelayedCollapseStart(class UObject* ContextObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AdvancedUserWidget.OnWidgetDelayedCollapseStart"));

	struct
	{
		class UObject*                 ContextObject;
	} params = {};

	params.ContextObject = ContextObject;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AdvancedUserWidget.OnTopFaceButton
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)

void UAdvancedUserWidget::OnTopFaceButton()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AdvancedUserWidget.OnTopFaceButton"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AdvancedUserWidget.OnRightFaceButton
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)

void UAdvancedUserWidget::OnRightFaceButton()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AdvancedUserWidget.OnRightFaceButton"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AdvancedUserWidget.OnRightBumper
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)

void UAdvancedUserWidget::OnRightBumper()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AdvancedUserWidget.OnRightBumper"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AdvancedUserWidget.OnMenuBack
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)

void UAdvancedUserWidget::OnMenuBack()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AdvancedUserWidget.OnMenuBack"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AdvancedUserWidget.OnLevelTravel
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)

void UAdvancedUserWidget::OnLevelTravel()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AdvancedUserWidget.OnLevelTravel"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AdvancedUserWidget.OnLeftFaceButton
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)

void UAdvancedUserWidget::OnLeftFaceButton()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AdvancedUserWidget.OnLeftFaceButton"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AdvancedUserWidget.OnLeftBumper
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)

void UAdvancedUserWidget::OnLeftBumper()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AdvancedUserWidget.OnLeftBumper"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AdvancedUserWidget.OnGamepadButtonPressed
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)
// Parameters:
// struct FInputEvent             InputEvent                     (CPF_ConstParm, CPF_Parm, CPF_NativeAccessSpecifierPublic)
// int                            ControllerId                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UAdvancedUserWidget::OnGamepadButtonPressed(const struct FInputEvent& InputEvent, int ControllerId)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AdvancedUserWidget.OnGamepadButtonPressed"));

	struct
	{
		struct FInputEvent             InputEvent;
		int                            ControllerId;
	} params = {};

	params.InputEvent = InputEvent;
	params.ControllerId = ControllerId;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AdvancedUserWidget.OnGamepadAxisMoved
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)
// Parameters:
// struct FName                   AxisName                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            ControllerId                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          Delta                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UAdvancedUserWidget::OnGamepadAxisMoved(const struct FName& AxisName, int ControllerId, float Delta)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AdvancedUserWidget.OnGamepadAxisMoved"));

	struct
	{
		struct FName                   AxisName;
		int                            ControllerId;
		float                          Delta;
	} params = {};

	params.AxisName = AxisName;
	params.ControllerId = ControllerId;
	params.Delta = Delta;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AdvancedUserWidget.OnBottomFaceButton
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)

void UAdvancedUserWidget::OnBottomFaceButton()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AdvancedUserWidget.OnBottomFaceButton"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AdvancedUserWidget.LevelTravel
// (FUNC_Final, FUNC_Native, FUNC_Public)

void UAdvancedUserWidget::LevelTravel()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AdvancedUserWidget.LevelTravel"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AdvancedUserWidget.IsWidgetActive
// (FUNC_Native, FUNC_Event, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UAdvancedUserWidget::IsWidgetActive()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AdvancedUserWidget.IsWidgetActive"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.AdvancedUserWidget.IsDismissable
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UAdvancedUserWidget::IsDismissable()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AdvancedUserWidget.IsDismissable"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.AdvancedUserWidget.CollapseWidget
// (FUNC_Native, FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)

void UAdvancedUserWidget::CollapseWidget()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AdvancedUserWidget.CollapseWidget"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AdvancedUserWidget.Close
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void UAdvancedUserWidget::Close()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AdvancedUserWidget.Close"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AdvancedUserWidget.CanDisplayWidget
// (FUNC_Native, FUNC_Event, FUNC_Public, FUNC_BlueprintEvent, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UAdvancedUserWidget::CanDisplayWidget()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AdvancedUserWidget.CanDisplayWidget"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.AdvancedUserWidget.CanDismissWidget
// (FUNC_Native, FUNC_Public, FUNC_Const)
// Parameters:
// EWidgetDismissType             Type                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UAdvancedUserWidget::CanDismissWidget(EWidgetDismissType Type)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AdvancedUserWidget.CanDismissWidget"));

	struct
	{
		EWidgetDismissType             Type;
		bool                           ReturnValue;
	} params = {};

	params.Type = Type;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.AdvancedVerticalBox.SortChildWidgets
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// TArray<class UWidget*>         NewOrder                       (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

void UAdvancedVerticalBox::SortChildWidgets(TArray<class UWidget*> NewOrder)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AdvancedVerticalBox.SortChildWidgets"));

	struct
	{
		TArray<class UWidget*>         NewOrder;
	} params = {};

	params.NewOrder = NewOrder;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AdvancedVerticalBox.InsertChildAtIndex
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// int                            Index                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UWidget*                 Content                        (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UVerticalBoxSlot*        ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UVerticalBoxSlot* UAdvancedVerticalBox::InsertChildAtIndex(int Index, class UWidget* Content)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AdvancedVerticalBox.InsertChildAtIndex"));

	struct
	{
		int                            Index;
		class UWidget*                 Content;
		class UVerticalBoxSlot*        ReturnValue;
	} params = {};

	params.Index = Index;
	params.Content = Content;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.AdvancedVerticalBox.GetAllChildWidgets
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// TArray<class UWidget*>         ChildWidgets                   (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

void UAdvancedVerticalBox::GetAllChildWidgets(TArray<class UWidget*>* ChildWidgets)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AdvancedVerticalBox.GetAllChildWidgets"));

	struct
	{
		TArray<class UWidget*>         ChildWidgets;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	if (ChildWidgets != nullptr)
		*ChildWidgets = params.ChildWidgets;
}


// Function ProjectX.AdvancedWidgetComponent.SetScreenPositionOverride
// (FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_BlueprintCallable)
// Parameters:
// struct FVector2D               NewScreenPosition              (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          OverrideStrength               (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UAdvancedWidgetComponent::SetScreenPositionOverride(const struct FVector2D& NewScreenPosition, float OverrideStrength)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AdvancedWidgetComponent.SetScreenPositionOverride"));

	struct
	{
		struct FVector2D               NewScreenPosition;
		float                          OverrideStrength;
	} params = {};

	params.NewScreenPosition = NewScreenPosition;
	params.OverrideStrength = OverrideStrength;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AdvancedWidgetComponent.OnWidgetClamped
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)
// Parameters:
// bool                           bIsClamped                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UAdvancedWidgetComponent::OnWidgetClamped(bool bIsClamped)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AdvancedWidgetComponent.OnWidgetClamped"));

	struct
	{
		bool                           bIsClamped;
	} params = {};

	params.bIsClamped = bIsClamped;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AdvancedWidgetComponent.MenuToggled
// (FUNC_Native, FUNC_Public)
// Parameters:
// class UAdvancedUserWidget*     OpenedWidget                   (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bToggle                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UAdvancedWidgetComponent::MenuToggled(class UAdvancedUserWidget* OpenedWidget, bool bToggle)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AdvancedWidgetComponent.MenuToggled"));

	struct
	{
		class UAdvancedUserWidget*     OpenedWidget;
		bool                           bToggle;
	} params = {};

	params.OpenedWidget = OpenedWidget;
	params.bToggle = bToggle;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AdvancedWidgetComponent.IsUsingScreenPositionOverride
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UAdvancedWidgetComponent::IsUsingScreenPositionOverride()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AdvancedWidgetComponent.IsUsingScreenPositionOverride"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.AdvancedWidgetComponent.GetClampType
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// EClampType                     ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

EClampType UAdvancedWidgetComponent::GetClampType()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AdvancedWidgetComponent.GetClampType"));

	struct
	{
		EClampType                     ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.AdvancedWidgetComponent.GetClampRadius
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UAdvancedWidgetComponent::GetClampRadius()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AdvancedWidgetComponent.GetClampRadius"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.AdvancedWidgetComponent.GetAllWidgetComponentsOfClass
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UClass* /*UAdvancedWidgetComponent*/ WidgetComponentClass           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TArray<class UAdvancedWidgetComponent*> OutWidgetComponents            (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

void UAdvancedWidgetComponent::GetAllWidgetComponentsOfClass(class UObject* WorldContextObject, class UClass* /*UAdvancedWidgetComponent*/ WidgetComponentClass, TArray<class UAdvancedWidgetComponent*>* OutWidgetComponents)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AdvancedWidgetComponent.GetAllWidgetComponentsOfClass"));

	struct
	{
		class UObject*                 WorldContextObject;
		class UClass* /*UAdvancedWidgetComponent*/ WidgetComponentClass;
		TArray<class UAdvancedWidgetComponent*> OutWidgetComponents;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.WidgetComponentClass = WidgetComponentClass;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	if (OutWidgetComponents != nullptr)
		*OutWidgetComponents = params.OutWidgetComponents;
}


// Function ProjectX.AdvancedWidgetComponent.CreateWidgetComponent
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_BlueprintCallable)
// Parameters:
// class AActor*                  Owner                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FTransform              Transform                      (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
// class UClass* /*UWidgetComponent*/ WidgetComponentClass           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UWidgetComponent*        WidgetComponent                (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UAdvancedWidgetComponent::CreateWidgetComponent(class AActor* Owner, const struct FTransform& Transform, class UClass* /*UWidgetComponent*/ WidgetComponentClass, class UWidgetComponent** WidgetComponent)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AdvancedWidgetComponent.CreateWidgetComponent"));

	struct
	{
		class AActor*                  Owner;
		struct FTransform              Transform;
		class UClass* /*UWidgetComponent*/ WidgetComponentClass;
		class UWidgetComponent*        WidgetComponent;
	} params = {};

	params.Owner = Owner;
	params.Transform = Transform;
	params.WidgetComponentClass = WidgetComponentClass;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	if (WidgetComponent != nullptr)
		*WidgetComponent = params.WidgetComponent;
}


// Function ProjectX.AfflictionInstance.TakeDamage
// (FUNC_Native, FUNC_Event, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintEvent)
// Parameters:
// float                          Damage                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FDamageEvent            DamageEvent                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// class AController*             EventInstigator                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UAfflictionInstance::TakeDamage(float Damage, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AfflictionInstance.TakeDamage"));

	struct
	{
		float                          Damage;
		struct FDamageEvent            DamageEvent;
		class AController*             EventInstigator;
		class AActor*                  DamageCauser;
		float                          ReturnValue;
	} params = {};

	params.Damage = Damage;
	params.DamageEvent = DamageEvent;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.AfflictionInstance.Start
// (FUNC_Native, FUNC_Public)

void UAfflictionInstance::Start()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AfflictionInstance.Start"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AfflictionInstance.OnRep_InitializationHitInfo
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void UAfflictionInstance::OnRep_InitializationHitInfo()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AfflictionInstance.OnRep_InitializationHitInfo"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AfflictionInstance.OnInitialization
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)

void UAfflictionInstance::OnInitialization()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AfflictionInstance.OnInitialization"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AfflictionInstance.K2_Start
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)

void UAfflictionInstance::K2_Start()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AfflictionInstance.K2_Start"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AfflictionInstance.K2_HitInfoInitialized
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)

void UAfflictionInstance::K2_HitInfoInitialized()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AfflictionInstance.K2_HitInfoInitialized"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AfflictionInstance.K2_End
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)

void UAfflictionInstance::K2_End()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AfflictionInstance.K2_End"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AfflictionInstance.K2_ApplyModifier
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)

void UAfflictionInstance::K2_ApplyModifier()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AfflictionInstance.K2_ApplyModifier"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AfflictionInstance.IsVisible
// (FUNC_Native, FUNC_Event, FUNC_Public, FUNC_BlueprintEvent, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UAfflictionInstance::IsVisible()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AfflictionInstance.IsVisible"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.AfflictionInstance.Initialize
// (FUNC_Native, FUNC_Public)
// Parameters:
// class UAfflictionComponent*    OwningComponent                (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  AfflictionInstigator           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UAfflictionInstance::Initialize(class UAfflictionComponent* OwningComponent, class AActor* AfflictionInstigator)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AfflictionInstance.Initialize"));

	struct
	{
		class UAfflictionComponent*    OwningComponent;
		class AActor*                  AfflictionInstigator;
		bool                           ReturnValue;
	} params = {};

	params.OwningComponent = OwningComponent;
	params.AfflictionInstigator = AfflictionInstigator;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.AfflictionInstance.GetTimeStamp
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UAfflictionInstance::GetTimeStamp()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AfflictionInstance.GetTimeStamp"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.AfflictionInstance.GetPriority
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int UAfflictionInstance::GetPriority()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AfflictionInstance.GetPriority"));

	struct
	{
		int                            ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.AfflictionInstance.GetOwningVehicle
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AProjectXVehicle*        ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class AProjectXVehicle* UAfflictionInstance::GetOwningVehicle()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AfflictionInstance.GetOwningVehicle"));

	struct
	{
		class AProjectXVehicle*        ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.AfflictionInstance.GetOwningCharacter
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AProjectXCharacter*      ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class AProjectXCharacter* UAfflictionInstance::GetOwningCharacter()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AfflictionInstance.GetOwningCharacter"));

	struct
	{
		class AProjectXCharacter*      ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.AfflictionInstance.GetIsEffectActive
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UAfflictionInstance::GetIsEffectActive()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AfflictionInstance.GetIsEffectActive"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.AfflictionInstance.GetInstigator
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AActor*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class AActor* UAfflictionInstance::GetInstigator()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AfflictionInstance.GetInstigator"));

	struct
	{
		class AActor*                  ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.AfflictionInstance.GetInitializationHitInfo
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FHitResult              ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

struct FHitResult UAfflictionInstance::GetInitializationHitInfo()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AfflictionInstance.GetInitializationHitInfo"));

	struct
	{
		struct FHitResult              ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.AfflictionInstance.GetEffectDelayDuration
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UAfflictionInstance::GetEffectDelayDuration()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AfflictionInstance.GetEffectDelayDuration"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.AfflictionInstance.GetApplicationType
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// EApplicationType               ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

EApplicationType UAfflictionInstance::GetApplicationType()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AfflictionInstance.GetApplicationType"));

	struct
	{
		EApplicationType               ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.AfflictionInstance.GetAfflictionComponent
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UAfflictionComponent*    ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UAfflictionComponent* UAfflictionInstance::GetAfflictionComponent()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AfflictionInstance.GetAfflictionComponent"));

	struct
	{
		class UAfflictionComponent*    ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.AfflictionInstance.End
// (FUNC_Native, FUNC_Protected)
// Parameters:
// bool                           bIgnoreApplyModifier           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UAfflictionInstance::End(bool bIgnoreApplyModifier)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AfflictionInstance.End"));

	struct
	{
		bool                           bIgnoreApplyModifier;
	} params = {};

	params.bIgnoreApplyModifier = bIgnoreApplyModifier;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AfflictionInstanceBool.K2_GetTotalBoolModifier
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           Modifier                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UClass* /*UAfflictionInstance*/ AfflictionClass                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UAfflictionInstanceBool::K2_GetTotalBoolModifier(bool Modifier, class UClass* /*UAfflictionInstance*/ AfflictionClass)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AfflictionInstanceBool.K2_GetTotalBoolModifier"));

	struct
	{
		bool                           Modifier;
		class UClass* /*UAfflictionInstance*/ AfflictionClass;
		bool                           ReturnValue;
	} params = {};

	params.Modifier = Modifier;
	params.AfflictionClass = AfflictionClass;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.AfflictionComponent.ResetTimersOnAfflictionsOfType
// (FUNC_BlueprintAuthorityOnly, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UClass* /*UAfflictionInstance*/ AfflictionClass                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  Instigator                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UAfflictionComponent::ResetTimersOnAfflictionsOfType(class UClass* /*UAfflictionInstance*/ AfflictionClass, class AActor* Instigator)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AfflictionComponent.ResetTimersOnAfflictionsOfType"));

	struct
	{
		class UClass* /*UAfflictionInstance*/ AfflictionClass;
		class AActor*                  Instigator;
	} params = {};

	params.AfflictionClass = AfflictionClass;
	params.Instigator = Instigator;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AfflictionComponent.RemoveAfflictionsByType
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UClass* /*UAfflictionInstance*/ AfflictionClass                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  Instigator                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bCallAfflictionEndEvents       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UAfflictionComponent::RemoveAfflictionsByType(class UClass* /*UAfflictionInstance*/ AfflictionClass, class AActor* Instigator, bool bCallAfflictionEndEvents)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AfflictionComponent.RemoveAfflictionsByType"));

	struct
	{
		class UClass* /*UAfflictionInstance*/ AfflictionClass;
		class AActor*                  Instigator;
		bool                           bCallAfflictionEndEvents;
	} params = {};

	params.AfflictionClass = AfflictionClass;
	params.Instigator = Instigator;
	params.bCallAfflictionEndEvents = bCallAfflictionEndEvents;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AfflictionComponent.RemoveAfflictionbyType
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UClass* /*UAfflictionInstance*/ AfflictionClass                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  Instigator                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UAfflictionComponent::RemoveAfflictionbyType(class UClass* /*UAfflictionInstance*/ AfflictionClass, class AActor* Instigator)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AfflictionComponent.RemoveAfflictionbyType"));

	struct
	{
		class UClass* /*UAfflictionInstance*/ AfflictionClass;
		class AActor*                  Instigator;
		bool                           ReturnValue;
	} params = {};

	params.AfflictionClass = AfflictionClass;
	params.Instigator = Instigator;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.AfflictionComponent.RemoveAffliction
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_Const)
// Parameters:
// class UAfflictionInstance*     Affliction                     (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UAfflictionComponent::RemoveAffliction(class UAfflictionInstance* Affliction)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AfflictionComponent.RemoveAffliction"));

	struct
	{
		class UAfflictionInstance*     Affliction;
	} params = {};

	params.Affliction = Affliction;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AfflictionComponent.OnRep_AfflictionList
// (FUNC_Native, FUNC_Protected)

void UAfflictionComponent::OnRep_AfflictionList()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AfflictionComponent.OnRep_AfflictionList"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AfflictionComponent.InitializeAffliction
// (FUNC_BlueprintAuthorityOnly, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UAfflictionInstance*     Affliction                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  Instigator                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UAfflictionComponent::InitializeAffliction(class UAfflictionInstance* Affliction, class AActor* Instigator)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AfflictionComponent.InitializeAffliction"));

	struct
	{
		class UAfflictionInstance*     Affliction;
		class AActor*                  Instigator;
	} params = {};

	params.Affliction = Affliction;
	params.Instigator = Instigator;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AfflictionComponent.HasAffliction
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UClass* /*UAfflictionInstance*/ AfflictionClass                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  Instigator                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UAfflictionComponent::HasAffliction(class UClass* /*UAfflictionInstance*/ AfflictionClass, class AActor* Instigator)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AfflictionComponent.HasAffliction"));

	struct
	{
		class UClass* /*UAfflictionInstance*/ AfflictionClass;
		class AActor*                  Instigator;
		bool                           ReturnValue;
	} params = {};

	params.AfflictionClass = AfflictionClass;
	params.Instigator = Instigator;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.AfflictionComponent.GetNumAfflictions
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UClass* /*UAfflictionInstance*/ AfflictionClass                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  Instigator                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int UAfflictionComponent::GetNumAfflictions(class UClass* /*UAfflictionInstance*/ AfflictionClass, class AActor* Instigator)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AfflictionComponent.GetNumAfflictions"));

	struct
	{
		class UClass* /*UAfflictionInstance*/ AfflictionClass;
		class AActor*                  Instigator;
		int                            ReturnValue;
	} params = {};

	params.AfflictionClass = AfflictionClass;
	params.Instigator = Instigator;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.AfflictionComponent.Client_RemoveAfflictionsByType
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetClient)
// Parameters:
// class UClass* /*UAfflictionInstance*/ AfflictionClass                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TArray<TWeakObjectPtr<class UAfflictionInstance>> IgnoredAfflictions             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_UObjectWrapper, CPF_NativeAccessSpecifierPublic)
// class AActor*                  Instigator                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bCallAfflictionEndEvents       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UAfflictionComponent::Client_RemoveAfflictionsByType(class UClass* /*UAfflictionInstance*/ AfflictionClass, TArray<TWeakObjectPtr<class UAfflictionInstance>> IgnoredAfflictions, class AActor* Instigator, bool bCallAfflictionEndEvents)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AfflictionComponent.Client_RemoveAfflictionsByType"));

	struct
	{
		class UClass* /*UAfflictionInstance*/ AfflictionClass;
		TArray<TWeakObjectPtr<class UAfflictionInstance>> IgnoredAfflictions;
		class AActor*                  Instigator;
		bool                           bCallAfflictionEndEvents;
	} params = {};

	params.AfflictionClass = AfflictionClass;
	params.IgnoredAfflictions = IgnoredAfflictions;
	params.Instigator = Instigator;
	params.bCallAfflictionEndEvents = bCallAfflictionEndEvents;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AfflictionComponent.AddAffliction
// (FUNC_BlueprintAuthorityOnly, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UClass* /*UAfflictionInstance*/ AfflictionClass                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  Instigator                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bDeferInitialization           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UAfflictionInstance*     ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UAfflictionInstance* UAfflictionComponent::AddAffliction(class UClass* /*UAfflictionInstance*/ AfflictionClass, class AActor* Instigator, bool bDeferInitialization)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AfflictionComponent.AddAffliction"));

	struct
	{
		class UClass* /*UAfflictionInstance*/ AfflictionClass;
		class AActor*                  Instigator;
		bool                           bDeferInitialization;
		class UAfflictionInstance*     ReturnValue;
	} params = {};

	params.AfflictionClass = AfflictionClass;
	params.Instigator = Instigator;
	params.bDeferInitialization = bDeferInitialization;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.AfflictionInstanceFloat.K2_GetTotalFloatModifier
// (FUNC_Native, FUNC_Protected, FUNC_BlueprintCallable)
// Parameters:
// float                          Modifier                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UClass* /*UAfflictionInstance*/ AfflictionClass                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UAfflictionInstanceFloat::K2_GetTotalFloatModifier(float Modifier, class UClass* /*UAfflictionInstance*/ AfflictionClass)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AfflictionInstanceFloat.K2_GetTotalFloatModifier"));

	struct
	{
		float                          Modifier;
		class UClass* /*UAfflictionInstance*/ AfflictionClass;
		float                          ReturnValue;
	} params = {};

	params.Modifier = Modifier;
	params.AfflictionClass = AfflictionClass;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.AfflictionInstanceFloat.GetTotalFloatModifier
// (FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// float                          TotalModifer                   (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UClass* /*UAfflictionInstance*/ AfflictionClass                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UAfflictionInstanceFloat::GetTotalFloatModifier(class UClass* /*UAfflictionInstance*/ AfflictionClass, float* TotalModifer)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AfflictionInstanceFloat.GetTotalFloatModifier"));

	struct
	{
		float                          TotalModifer;
		class UClass* /*UAfflictionInstance*/ AfflictionClass;
	} params = {};

	params.AfflictionClass = AfflictionClass;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	if (TotalModifer != nullptr)
		*TotalModifer = params.TotalModifer;
}


// Function ProjectX.AfflictionInstanceHealProjector.OnOwningCharacterShieldsRepaired
// (FUNC_Final, FUNC_Native, FUNC_Protected)
// Parameters:
// float                          Amount                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          Health                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bFromPassiveRegen              (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UAfflictionInstanceHealProjector::OnOwningCharacterShieldsRepaired(float Amount, float Health, bool bFromPassiveRegen)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AfflictionInstanceHealProjector.OnOwningCharacterShieldsRepaired"));

	struct
	{
		float                          Amount;
		float                          Health;
		bool                           bFromPassiveRegen;
	} params = {};

	params.Amount = Amount;
	params.Health = Health;
	params.bFromPassiveRegen = bFromPassiveRegen;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AfflictionInstanceHealProjector.OnOwningCharacterHealed
// (FUNC_Final, FUNC_Native, FUNC_Protected)
// Parameters:
// float                          Amount                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          Health                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bFromPassiveRegen              (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UAfflictionInstanceHealProjector::OnOwningCharacterHealed(float Amount, float Health, bool bFromPassiveRegen)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AfflictionInstanceHealProjector.OnOwningCharacterHealed"));

	struct
	{
		float                          Amount;
		float                          Health;
		bool                           bFromPassiveRegen;
	} params = {};

	params.Amount = Amount;
	params.Health = Health;
	params.bFromPassiveRegen = bFromPassiveRegen;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AfflictionInstanceRepair.AfflictionTargetHealed
// (FUNC_Final, FUNC_Native, FUNC_Protected)
// Parameters:
// float                          Amount                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          Health                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bFromPassiveRegen              (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UAfflictionInstanceRepair::AfflictionTargetHealed(float Amount, float Health, bool bFromPassiveRegen)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AfflictionInstanceRepair.AfflictionTargetHealed"));

	struct
	{
		float                          Amount;
		float                          Health;
		bool                           bFromPassiveRegen;
	} params = {};

	params.Amount = Amount;
	params.Health = Health;
	params.bFromPassiveRegen = bFromPassiveRegen;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AfflictionInstanceStealth.StartUncloakTimer
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void UAfflictionInstanceStealth::StartUncloakTimer()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AfflictionInstanceStealth.StartUncloakTimer"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AfflictionInstanceStealth.DisableAffliction
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void UAfflictionInstanceStealth::DisableAffliction()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AfflictionInstanceStealth.DisableAffliction"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AfflictionInstanceStealth.BeginDisableCloak
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)

void UAfflictionInstanceStealth::BeginDisableCloak()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AfflictionInstanceStealth.BeginDisableCloak"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AfflictionOverlapComponent.ToggleVolume
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bToggle                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UAfflictionOverlapComponent::ToggleVolume(bool bToggle)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AfflictionOverlapComponent.ToggleVolume"));

	struct
	{
		bool                           bToggle;
	} params = {};

	params.bToggle = bToggle;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AfflictionOverlapComponent.OnRep_TeamOwner
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void UAfflictionOverlapComponent::OnRep_TeamOwner()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AfflictionOverlapComponent.OnRep_TeamOwner"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AfflictionOverlapComponent.OnRep_IsOverlapActive
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void UAfflictionOverlapComponent::OnRep_IsOverlapActive()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AfflictionOverlapComponent.OnRep_IsOverlapActive"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AfflictionOverlapComponent.OnPendingCharacterPlayerStateReady
// (FUNC_Native, FUNC_Protected)
// Parameters:
// class APlayerState*            PlayerState                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AProjectXCharacter*      Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UAfflictionOverlapComponent::OnPendingCharacterPlayerStateReady(class APlayerState* PlayerState, class AProjectXCharacter* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AfflictionOverlapComponent.OnPendingCharacterPlayerStateReady"));

	struct
	{
		class APlayerState*            PlayerState;
		class AProjectXCharacter*      Character;
	} params = {};

	params.PlayerState = PlayerState;
	params.Character = Character;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AfflictionOverlapComponent.OnOverlapEnd
// (FUNC_Final, FUNC_Native, FUNC_Protected)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UAfflictionOverlapComponent::OnOverlapEnd(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AfflictionOverlapComponent.OnOverlapEnd"));

	struct
	{
		class UPrimitiveComponent*     OverlappedComponent;
		class AActor*                  OtherActor;
		class UPrimitiveComponent*     OtherComp;
		int                            OtherBodyIndex;
	} params = {};

	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AfflictionOverlapComponent.OnOverlapedVehiclePassengerChanged
// (FUNC_Final, FUNC_Native, FUNC_Protected)
// Parameters:
// class AProjectXVehicle*        Vehicle                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UVehicleSeatComponent*   Seat                           (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AProjectXCharacter*      PreviousPassenger              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UAfflictionOverlapComponent::OnOverlapedVehiclePassengerChanged(class AProjectXVehicle* Vehicle, class UVehicleSeatComponent* Seat, class AProjectXCharacter* PreviousPassenger)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AfflictionOverlapComponent.OnOverlapedVehiclePassengerChanged"));

	struct
	{
		class AProjectXVehicle*        Vehicle;
		class UVehicleSeatComponent*   Seat;
		class AProjectXCharacter*      PreviousPassenger;
	} params = {};

	params.Vehicle = Vehicle;
	params.Seat = Seat;
	params.PreviousPassenger = PreviousPassenger;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AfflictionOverlapComponent.OnOverlap
// (FUNC_Final, FUNC_Native, FUNC_Protected, FUNC_HasOutParms)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bFromSweep                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FHitResult              SweepResult                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

void UAfflictionOverlapComponent::OnOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AfflictionOverlapComponent.OnOverlap"));

	struct
	{
		class UPrimitiveComponent*     OverlappedComponent;
		class AActor*                  OtherActor;
		class UPrimitiveComponent*     OtherComp;
		int                            OtherBodyIndex;
		bool                           bFromSweep;
		struct FHitResult              SweepResult;
	} params = {};

	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AfflictionOverlapComponent.GetVolumeActiveState
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UAfflictionOverlapComponent::GetVolumeActiveState()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AfflictionOverlapComponent.GetVolumeActiveState"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstanceActor.IsLocallyOwned
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AWeaponInstanceActor::IsLocallyOwned()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceActor.IsLocallyOwned"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstanceActor.GetPlayerOwner
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class APlayerState*            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class APlayerState* AWeaponInstanceActor::GetPlayerOwner()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceActor.GetPlayerOwner"));

	struct
	{
		class APlayerState*            ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstanceActor.GetOwningWeaponComponent
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UWeaponComponent*        ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UWeaponComponent* AWeaponInstanceActor::GetOwningWeaponComponent()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceActor.GetOwningWeaponComponent"));

	struct
	{
		class UWeaponComponent*        ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstanceActor.GetOwningWeaponClass
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UClass* /*UWeaponInstance*/ ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UClass* /*UWeaponInstance*/ AWeaponInstanceActor::GetOwningWeaponClass()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceActor.GetOwningWeaponClass"));

	struct
	{
		class UClass* /*UWeaponInstance*/ ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstanceActor.GetOwningPawn
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AProjectXPlayerController* OverrideController             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AProjectXCharacter*      ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class AProjectXCharacter* AWeaponInstanceActor::GetOwningPawn(class AProjectXPlayerController* OverrideController)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceActor.GetOwningPawn"));

	struct
	{
		class AProjectXPlayerController* OverrideController;
		class AProjectXCharacter*      ReturnValue;
	} params = {};

	params.OverrideController = OverrideController;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.Deployable.UpdateState
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// EDeployableState               NewDeployState                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ADeployable::UpdateState(EDeployableState NewDeployState)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Deployable.UpdateState"));

	struct
	{
		EDeployableState               NewDeployState;
	} params = {};

	params.NewDeployState = NewDeployState;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.Deployable.SetDeployTransform
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_BlueprintCallable)
// Parameters:
// struct FTransform              Transform                      (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

void ADeployable::SetDeployTransform(const struct FTransform& Transform)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Deployable.SetDeployTransform"));

	struct
	{
		struct FTransform              Transform;
	} params = {};

	params.Transform = Transform;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.Deployable.OnTeamsChanged
// (FUNC_Native, FUNC_Public)
// Parameters:
// class AProjectXPlayerState*    PlayerState                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// unsigned char                  Team                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ADeployable::OnTeamsChanged(class AProjectXPlayerState* PlayerState, unsigned char Team)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Deployable.OnTeamsChanged"));

	struct
	{
		class AProjectXPlayerState*    PlayerState;
		unsigned char                  Team;
	} params = {};

	params.PlayerState = PlayerState;
	params.Team = Team;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.Deployable.OnRep_StateChanged
// (FUNC_Final, FUNC_Native, FUNC_Public)

void ADeployable::OnRep_StateChanged()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Deployable.OnRep_StateChanged"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.Deployable.OnRep_LifeTimeDurationStart
// (FUNC_Final, FUNC_Native, FUNC_Public)

void ADeployable::OnRep_LifeTimeDurationStart()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Deployable.OnRep_LifeTimeDurationStart"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.Deployable.OnRep_Health
// (FUNC_Native, FUNC_Public)
// Parameters:
// float                          PreviousHealth                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ADeployable::OnRep_Health(float PreviousHealth)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Deployable.OnRep_Health"));

	struct
	{
		float                          PreviousHealth;
	} params = {};

	params.PreviousHealth = PreviousHealth;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.Deployable.OnRep_DeployTransform
// (FUNC_Native, FUNC_Public)

void ADeployable::OnRep_DeployTransform()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Deployable.OnRep_DeployTransform"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.Deployable.OnDeployStart
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)

void ADeployable::OnDeployStart()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Deployable.OnDeployStart"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.Deployable.OnDeployReActivated
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)

void ADeployable::OnDeployReActivated()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Deployable.OnDeployReActivated"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.Deployable.OnDeployDeactivated
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)

void ADeployable::OnDeployDeactivated()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Deployable.OnDeployDeactivated"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.Deployable.OnDeployComplete
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)

void ADeployable::OnDeployComplete()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Deployable.OnDeployComplete"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.Deployable.OnDeployableDied
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)

void ADeployable::OnDeployableDied()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Deployable.OnDeployableDied"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.Deployable.Multicast_Reliable_Died
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_NetMulticast, FUNC_Public)
// Parameters:
// float                          Damage                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FDamageEvent            DamageEvent                    (CPF_ConstParm, CPF_Parm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class APlayerState*            InstigatorPlayerState          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ADeployable::Multicast_Reliable_Died(float Damage, const struct FDamageEvent& DamageEvent, class AActor* DamageCauser, class APlayerState* InstigatorPlayerState)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Deployable.Multicast_Reliable_Died"));

	struct
	{
		float                          Damage;
		struct FDamageEvent            DamageEvent;
		class AActor*                  DamageCauser;
		class APlayerState*            InstigatorPlayerState;
	} params = {};

	params.Damage = Damage;
	params.DamageEvent = DamageEvent;
	params.DamageCauser = DamageCauser;
	params.InstigatorPlayerState = InstigatorPlayerState;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.Deployable.IsDeploying
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool ADeployable::IsDeploying()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Deployable.IsDeploying"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.Deployable.IsDeployed
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool ADeployable::IsDeployed()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Deployable.IsDeployed"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.Deployable.InitializeForTeam
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)
// Parameters:
// int                            Team                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ADeployable::InitializeForTeam(int Team)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Deployable.InitializeForTeam"));

	struct
	{
		int                            Team;
	} params = {};

	params.Team = Team;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.Deployable.Init
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void ADeployable::Init()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Deployable.Init"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.Deployable.GetTimeUntilDeploy
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float ADeployable::GetTimeUntilDeploy()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Deployable.GetTimeUntilDeploy"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.Deployable.GetLifeTimeDurationStartTime
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float ADeployable::GetLifeTimeDurationStartTime()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Deployable.GetLifeTimeDurationStartTime"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.Deployable.GetDeployableState
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// EDeployableState               ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

EDeployableState ADeployable::GetDeployableState()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Deployable.GetDeployableState"));

	struct
	{
		EDeployableState               ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.Deployable.GetDeployableName
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FText                   ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)

struct FText ADeployable::GetDeployableName()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Deployable.GetDeployableName"));

	struct
	{
		struct FText                   ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.Deployable.GetDeployableIcon
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// TSoftObjectPtr<class UTexture2D> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

TSoftObjectPtr<class UTexture2D> ADeployable::GetDeployableIcon()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Deployable.GetDeployableIcon"));

	struct
	{
		TSoftObjectPtr<class UTexture2D> ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.Deployable.GetDeployableCategory
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_Const)
// Parameters:
// EDeployableCategory            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

EDeployableCategory ADeployable::GetDeployableCategory()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Deployable.GetDeployableCategory"));

	struct
	{
		EDeployableCategory            ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.Deployable.GetAllDeployablesForActor
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class AActor*                  Actor                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// EDeployableCategory            CategoryFilter                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UClass* /*ADeployable*/  DeployableFilter               (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TArray<class ADeployable*>     ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_NativeAccessSpecifierPublic)

TArray<class ADeployable*> ADeployable::GetAllDeployablesForActor(class AActor* Actor, EDeployableCategory CategoryFilter, class UClass* /*ADeployable*/ DeployableFilter)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Deployable.GetAllDeployablesForActor"));

	struct
	{
		class AActor*                  Actor;
		EDeployableCategory            CategoryFilter;
		class UClass* /*ADeployable*/  DeployableFilter;
		TArray<class ADeployable*>     ReturnValue;
	} params = {};

	params.Actor = Actor;
	params.CategoryFilter = CategoryFilter;
	params.DeployableFilter = DeployableFilter;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.Deployable.DeployStart
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bForce                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ADeployable::DeployStart(bool bForce)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Deployable.DeployStart"));

	struct
	{
		bool                           bForce;
	} params = {};

	params.bForce = bForce;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.Deployable.DeactivateDeployable
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void ADeployable::DeactivateDeployable()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Deployable.DeactivateDeployable"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.Deployable.ClearDeployable
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void ADeployable::ClearDeployable()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Deployable.ClearDeployable"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.Deployable.ActivateDeployable
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void ADeployable::ActivateDeployable()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Deployable.ActivateDeployable"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AllOutWarfareObjectiveInterface.SetObjectiveTeam
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_Const)

void UAllOutWarfareObjectiveInterface::SetObjectiveTeam()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AllOutWarfareObjectiveInterface.SetObjectiveTeam"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AllOutWarfareObjectiveInterface.GetObjectiveTeam
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int UAllOutWarfareObjectiveInterface::GetObjectiveTeam()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AllOutWarfareObjectiveInterface.GetObjectiveTeam"));

	struct
	{
		int                            ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.AllOutWarfareObjectiveInterface.GetObjectiveSortOrder
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int UAllOutWarfareObjectiveInterface::GetObjectiveSortOrder()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AllOutWarfareObjectiveInterface.GetObjectiveSortOrder"));

	struct
	{
		int                            ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.AllOutWarfareObjectiveInterface.GetObjectiveMaxHealth
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UAllOutWarfareObjectiveInterface::GetObjectiveMaxHealth()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AllOutWarfareObjectiveInterface.GetObjectiveMaxHealth"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.AllOutWarfareObjectiveInterface.GetObjectiveHealth
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UAllOutWarfareObjectiveInterface::GetObjectiveHealth()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AllOutWarfareObjectiveInterface.GetObjectiveHealth"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.AllOutWarfareObjectiveInterface.GetIsObjectiveProperlyInitialized
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UAllOutWarfareObjectiveInterface::GetIsObjectiveProperlyInitialized()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AllOutWarfareObjectiveInterface.GetIsObjectiveProperlyInitialized"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.AllOutWarfareObjectiveInterface.GetIsObjectiveDead
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UAllOutWarfareObjectiveInterface::GetIsObjectiveDead()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AllOutWarfareObjectiveInterface.GetIsObjectiveDead"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.AmbianceComponent.OnAmbianceRegionExit
// (FUNC_Final, FUNC_Native, FUNC_Public)
// Parameters:
// class AActor*                  OverlappedActor                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UAmbianceComponent::OnAmbianceRegionExit(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AmbianceComponent.OnAmbianceRegionExit"));

	struct
	{
		class AActor*                  OverlappedActor;
		class AActor*                  OtherActor;
	} params = {};

	params.OverlappedActor = OverlappedActor;
	params.OtherActor = OtherActor;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AmbianceComponent.OnAmbianceRegionEnter
// (FUNC_Final, FUNC_Native, FUNC_Public)
// Parameters:
// class AActor*                  OverlappedActor                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UAmbianceComponent::OnAmbianceRegionEnter(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AmbianceComponent.OnAmbianceRegionEnter"));

	struct
	{
		class AActor*                  OverlappedActor;
		class AActor*                  OtherActor;
	} params = {};

	params.OverlappedActor = OverlappedActor;
	params.OtherActor = OtherActor;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AnnouncerSubsystem.PlayVoice
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// struct FString                 VoiceToPlay                    (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UAnnouncerSubsystem::PlayVoice(const struct FString& VoiceToPlay)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AnnouncerSubsystem.PlayVoice"));

	struct
	{
		struct FString                 VoiceToPlay;
	} params = {};

	params.VoiceToPlay = VoiceToPlay;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AnnouncerSubsystem.PlayNextQueuedVoice
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void UAnnouncerSubsystem::PlayNextQueuedVoice()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AnnouncerSubsystem.PlayNextQueuedVoice"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AnnouncerSubsystem.OnStartedTalking
// (FUNC_Final, FUNC_Native, FUNC_Protected, FUNC_HasOutParms)
// Parameters:
// TArray<struct FSubtitleCue>    Subtitles                      (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// float                          CueDuration                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UAnnouncerSubsystem::OnStartedTalking(TArray<struct FSubtitleCue> Subtitles, float CueDuration)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AnnouncerSubsystem.OnStartedTalking"));

	struct
	{
		TArray<struct FSubtitleCue>    Subtitles;
		float                          CueDuration;
	} params = {};

	params.Subtitles = Subtitles;
	params.CueDuration = CueDuration;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AssaultPoint.OnTeamOwnerChanged
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintCallable, FUNC_BlueprintEvent)

void AAssaultPoint::OnTeamOwnerChanged()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AssaultPoint.OnTeamOwnerChanged"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AssaultPoint.OnTargetDestroyed
// (FUNC_Native, FUNC_Protected)
// Parameters:
// class AAssaultPointDestructible* ActorDestroyed                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AAssaultPoint::OnTargetDestroyed(class AAssaultPointDestructible* ActorDestroyed)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AssaultPoint.OnTargetDestroyed"));

	struct
	{
		class AAssaultPointDestructible* ActorDestroyed;
	} params = {};

	params.ActorDestroyed = ActorDestroyed;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AssaultPoint.OnRep_AssaultPointInfo
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void AAssaultPoint::OnRep_AssaultPointInfo()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AssaultPoint.OnRep_AssaultPointInfo"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AssaultPoint.OnPhaseUpdated
// (FUNC_Final, FUNC_Native, FUNC_Public)
// Parameters:
// int                            NewPhase                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            PreviousPhase                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AAssaultPoint::OnPhaseUpdated(int NewPhase, int PreviousPhase)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AssaultPoint.OnPhaseUpdated"));

	struct
	{
		int                            NewPhase;
		int                            PreviousPhase;
	} params = {};

	params.NewPhase = NewPhase;
	params.PreviousPhase = PreviousPhase;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AssaultPoint.OnAssaultPointDestroyed
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)

void AAssaultPoint::OnAssaultPointDestroyed()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AssaultPoint.OnAssaultPointDestroyed"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AssaultPoint.IsLocked
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AAssaultPoint::IsLocked()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AssaultPoint.IsLocked"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.AssaultPoint.IsDestroyed
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AAssaultPoint::IsDestroyed()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AssaultPoint.IsDestroyed"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.AssaultPoint.IsActiveTarget
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AAssaultPoint::IsActiveTarget()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AssaultPoint.IsActiveTarget"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.AssaultPoint.GetSortOrder
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int AAssaultPoint::GetSortOrder()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AssaultPoint.GetSortOrder"));

	struct
	{
		int                            ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.AssaultPoint.GetPointName
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FText                   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_NativeAccessSpecifierPublic)

struct FText AAssaultPoint::GetPointName()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AssaultPoint.GetPointName"));

	struct
	{
		struct FText                   ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.AssaultPoint.GetPhase
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// unsigned char                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

unsigned char AAssaultPoint::GetPhase()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AssaultPoint.GetPhase"));

	struct
	{
		unsigned char                  ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.AssaultPoint.GetDestructionPoint
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AAssaultPointDestructible* ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class AAssaultPointDestructible* AAssaultPoint::GetDestructionPoint()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AssaultPoint.GetDestructionPoint"));

	struct
	{
		class AAssaultPointDestructible* ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.AssaultPoint.GetAssaultPointInfo
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FAssaultPointInfo       ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_ReferenceParm, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

struct FAssaultPointInfo AAssaultPoint::GetAssaultPointInfo()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AssaultPoint.GetAssaultPointInfo"));

	struct
	{
		struct FAssaultPointInfo       ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.AssaultPoint.GatherDestructiblePoints
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void AAssaultPoint::GatherDestructiblePoints()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AssaultPoint.GatherDestructiblePoints"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AssaultPointDestructible.OnValidInteractionTargetUpdated
// (FUNC_Final, FUNC_Native, FUNC_Protected)
// Parameters:
// class APlayerController*       Sender                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bValidInteraction              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AAssaultPointDestructible::OnValidInteractionTargetUpdated(class APlayerController* Sender, bool bValidInteraction)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AssaultPointDestructible.OnValidInteractionTargetUpdated"));

	struct
	{
		class APlayerController*       Sender;
		bool                           bValidInteraction;
	} params = {};

	params.Sender = Sender;
	params.bValidInteraction = bValidInteraction;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AssaultPointDestructible.OnTeamUpdated
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)
// Parameters:
// int                            NewTeam                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AAssaultPointDestructible::OnTeamUpdated(int NewTeam)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AssaultPointDestructible.OnTeamUpdated"));

	struct
	{
		int                            NewTeam;
	} params = {};

	params.NewTeam = NewTeam;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AssaultPointDestructible.OnSelected
// (FUNC_Final, FUNC_Native, FUNC_Protected)
// Parameters:
// class APlayerController*       Sender                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     Component                      (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AAssaultPointDestructible::OnSelected(class APlayerController* Sender, class UPrimitiveComponent* Component)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AssaultPointDestructible.OnSelected"));

	struct
	{
		class APlayerController*       Sender;
		class UPrimitiveComponent*     Component;
	} params = {};

	params.Sender = Sender;
	params.Component = Component;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AssaultPointDestructible.OnRep_Team
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void AAssaultPointDestructible::OnRep_Team()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AssaultPointDestructible.OnRep_Team"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AssaultPointDestructible.OnRep_Destroyed
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void AAssaultPointDestructible::OnRep_Destroyed()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AssaultPointDestructible.OnRep_Destroyed"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AssaultPointDestructible.OnRep_BombInfo
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void AAssaultPointDestructible::OnRep_BombInfo()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AssaultPointDestructible.OnRep_BombInfo"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AssaultPointDestructible.OnHoldStopped
// (FUNC_Final, FUNC_Native, FUNC_Protected)
// Parameters:
// class APlayerController*       Sender                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     Component                      (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AAssaultPointDestructible::OnHoldStopped(class APlayerController* Sender, class UPrimitiveComponent* Component)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AssaultPointDestructible.OnHoldStopped"));

	struct
	{
		class APlayerController*       Sender;
		class UPrimitiveComponent*     Component;
	} params = {};

	params.Sender = Sender;
	params.Component = Component;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AssaultPointDestructible.OnHoldStarted
// (FUNC_Final, FUNC_Native, FUNC_Protected)
// Parameters:
// class APlayerController*       Sender                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     Component                      (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AAssaultPointDestructible::OnHoldStarted(class APlayerController* Sender, class UPrimitiveComponent* Component)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AssaultPointDestructible.OnHoldStarted"));

	struct
	{
		class APlayerController*       Sender;
		class UPrimitiveComponent*     Component;
	} params = {};

	params.Sender = Sender;
	params.Component = Component;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AssaultPointDestructible.OnDestructibleDestroyed
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)

void AAssaultPointDestructible::OnDestructibleDestroyed()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AssaultPointDestructible.OnDestructibleDestroyed"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AssaultPointDestructible.Multicast_DestroyPoint
// (FUNC_Net, FUNC_Native, FUNC_Event, FUNC_NetMulticast, FUNC_Protected)

void AAssaultPointDestructible::Multicast_DestroyPoint()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AssaultPointDestructible.Multicast_DestroyPoint"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.AssaultPointDestructible.IsDestroyed
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AAssaultPointDestructible::IsDestroyed()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AssaultPointDestructible.IsDestroyed"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.AssaultPointDestructible.IsBombPlanted
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AAssaultPointDestructible::IsBombPlanted()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AssaultPointDestructible.IsBombPlanted"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.AssaultPointDestructible.IsActivePoint
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AAssaultPointDestructible::IsActivePoint()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AssaultPointDestructible.IsActivePoint"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.AssaultPointDestructible.GetFuseTime
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AAssaultPointDestructible::GetFuseTime()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AssaultPointDestructible.GetFuseTime"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.AssaultPointDestructible.GetBombInfo
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FBombInfo               ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_ReferenceParm, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

struct FBombInfo AAssaultPointDestructible::GetBombInfo()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AssaultPointDestructible.GetBombInfo"));

	struct
	{
		struct FBombInfo               ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.AutoPanner.GetNormalizedCursorPosition
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FVector2D               ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FVector2D UAutoPanner::GetNormalizedCursorPosition()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.AutoPanner.GetNormalizedCursorPosition"));

	struct
	{
		struct FVector2D               ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.BISCullDistanceVolume.RemoveRateLimitedParticleSystem
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UFXSystemComponent*      ParticleSystem                 (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ABISCullDistanceVolume::RemoveRateLimitedParticleSystem(class UFXSystemComponent* ParticleSystem)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.BISCullDistanceVolume.RemoveRateLimitedParticleSystem"));

	struct
	{
		class UFXSystemComponent*      ParticleSystem;
	} params = {};

	params.ParticleSystem = ParticleSystem;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.BISCullDistanceVolume.RemoveFromIgnoreList
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UFXSystemComponent*      ParticleSystem                 (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ABISCullDistanceVolume::RemoveFromIgnoreList(class UFXSystemComponent* ParticleSystem)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.BISCullDistanceVolume.RemoveFromIgnoreList"));

	struct
	{
		class UFXSystemComponent*      ParticleSystem;
	} params = {};

	params.ParticleSystem = ParticleSystem;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.BISCullDistanceVolume.AddToIgnoreParticlesList
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UFXSystemComponent*      ParticleSystem                 (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ABISCullDistanceVolume::AddToIgnoreParticlesList(class UFXSystemComponent* ParticleSystem)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.BISCullDistanceVolume.AddToIgnoreParticlesList"));

	struct
	{
		class UFXSystemComponent*      ParticleSystem;
	} params = {};

	params.ParticleSystem = ParticleSystem;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.BISCullDistanceVolume.AddRateLimitedParticleSystem
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UFXSystemComponent*      ParticleSystem                 (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ABISCullDistanceVolume::AddRateLimitedParticleSystem(class UFXSystemComponent* ParticleSystem)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.BISCullDistanceVolume.AddRateLimitedParticleSystem"));

	struct
	{
		class UFXSystemComponent*      ParticleSystem;
	} params = {};

	params.ParticleSystem = ParticleSystem;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.BISSkeletalMeshComponent.MenuToggled
// (FUNC_Native, FUNC_Public)
// Parameters:
// class UAdvancedUserWidget*     Widget                         (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bToggle                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UBISSkeletalMeshComponent::MenuToggled(class UAdvancedUserWidget* Widget, bool bToggle)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.BISSkeletalMeshComponent.MenuToggled"));

	struct
	{
		class UAdvancedUserWidget*     Widget;
		bool                           bToggle;
	} params = {};

	params.Widget = Widget;
	params.bToggle = bToggle;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.BroadcastMessage.SendServerMessage
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class APlayerController*       PlayerController               (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UClass* /*ULocalMessage*/ Message                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            Data                           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class APlayerState*            PlayerStateA                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class APlayerState*            PlayerStateB                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UObject*                 Object                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UBroadcastMessage::SendServerMessage(class APlayerController* PlayerController, class UClass* /*ULocalMessage*/ Message, int Data, class APlayerState* PlayerStateA, class APlayerState* PlayerStateB, class UObject* Object)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.BroadcastMessage.SendServerMessage"));

	struct
	{
		class APlayerController*       PlayerController;
		class UClass* /*ULocalMessage*/ Message;
		int                            Data;
		class APlayerState*            PlayerStateA;
		class APlayerState*            PlayerStateB;
		class UObject*                 Object;
	} params = {};

	params.PlayerController = PlayerController;
	params.Message = Message;
	params.Data = Data;
	params.PlayerStateA = PlayerStateA;
	params.PlayerStateB = PlayerStateB;
	params.Object = Object;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.BroadcastMessage.ReceiveMessage
// (FUNC_Native, FUNC_Protected, FUNC_Const)
// Parameters:
// class AProjectXPlayerController* PlayerController               (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            Data                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class APlayerState*            PlayerStateA                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class APlayerState*            PlayerStateB                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UObject*                 Object                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UBroadcastMessage::ReceiveMessage(class AProjectXPlayerController* PlayerController, int Data, class APlayerState* PlayerStateA, class APlayerState* PlayerStateB, class UObject* Object)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.BroadcastMessage.ReceiveMessage"));

	struct
	{
		class AProjectXPlayerController* PlayerController;
		int                            Data;
		class APlayerState*            PlayerStateA;
		class APlayerState*            PlayerStateB;
		class UObject*                 Object;
	} params = {};

	params.PlayerController = PlayerController;
	params.Data = Data;
	params.PlayerStateA = PlayerStateA;
	params.PlayerStateB = PlayerStateB;
	params.Object = Object;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.BroadcastMessage.K2_ReceiveMessage
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent, FUNC_Const)
// Parameters:
// class AProjectXPlayerController* PlayerController               (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            Data                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class APlayerState*            PlayerStateA                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class APlayerState*            PlayerStateB                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UObject*                 Object                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UBroadcastMessage::K2_ReceiveMessage(class AProjectXPlayerController* PlayerController, int Data, class APlayerState* PlayerStateA, class APlayerState* PlayerStateB, class UObject* Object)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.BroadcastMessage.K2_ReceiveMessage"));

	struct
	{
		class AProjectXPlayerController* PlayerController;
		int                            Data;
		class APlayerState*            PlayerStateA;
		class APlayerState*            PlayerStateB;
		class UObject*                 Object;
	} params = {};

	params.PlayerController = PlayerController;
	params.Data = Data;
	params.PlayerStateA = PlayerStateA;
	params.PlayerStateB = PlayerStateB;
	params.Object = Object;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.BroadcastMessage.BroadcastServerMessage
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UClass* /*ULocalMessage*/ Message                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            Data                           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class APlayerState*            PlayerStateA                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class APlayerState*            PlayerStateB                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UObject*                 Object                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UBroadcastMessage::BroadcastServerMessage(class UObject* WorldContextObject, class UClass* /*ULocalMessage*/ Message, int Data, class APlayerState* PlayerStateA, class APlayerState* PlayerStateB, class UObject* Object)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.BroadcastMessage.BroadcastServerMessage"));

	struct
	{
		class UObject*                 WorldContextObject;
		class UClass* /*ULocalMessage*/ Message;
		int                            Data;
		class APlayerState*            PlayerStateA;
		class APlayerState*            PlayerStateB;
		class UObject*                 Object;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.Message = Message;
	params.Data = Data;
	params.PlayerStateA = PlayerStateA;
	params.PlayerStateB = PlayerStateB;
	params.Object = Object;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.BTTask_FireWeapon.ReloadStop
// (FUNC_Final, FUNC_Native, FUNC_Public)
// Parameters:
// class UWeaponComponent*        WeaponComponent                (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UBTTask_FireWeapon::ReloadStop(class UWeaponComponent* WeaponComponent)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.BTTask_FireWeapon.ReloadStop"));

	struct
	{
		class UWeaponComponent*        WeaponComponent;
	} params = {};

	params.WeaponComponent = WeaponComponent;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.BTTask_FireWeapon.ReloadStart
// (FUNC_Final, FUNC_Native, FUNC_Public)
// Parameters:
// class UWeaponComponent*        WeaponComponent                (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UBTTask_FireWeapon::ReloadStart(class UWeaponComponent* WeaponComponent)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.BTTask_FireWeapon.ReloadStart"));

	struct
	{
		class UWeaponComponent*        WeaponComponent;
	} params = {};

	params.WeaponComponent = WeaponComponent;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.BTTask_ProjectXMoveTo.ReloadStop
// (FUNC_Final, FUNC_Native, FUNC_Public)
// Parameters:
// class UWeaponComponent*        WeaponComponent                (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UBTTask_ProjectXMoveTo::ReloadStop(class UWeaponComponent* WeaponComponent)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.BTTask_ProjectXMoveTo.ReloadStop"));

	struct
	{
		class UWeaponComponent*        WeaponComponent;
	} params = {};

	params.WeaponComponent = WeaponComponent;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.BTTask_ProjectXMoveTo.ReloadStart
// (FUNC_Final, FUNC_Native, FUNC_Public)
// Parameters:
// class UWeaponComponent*        WeaponComponent                (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UBTTask_ProjectXMoveTo::ReloadStart(class UWeaponComponent* WeaponComponent)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.BTTask_ProjectXMoveTo.ReloadStart"));

	struct
	{
		class UWeaponComponent*        WeaponComponent;
	} params = {};

	params.WeaponComponent = WeaponComponent;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CapturePoint.UpdateProcessedOccupants
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void ACapturePoint::UpdateProcessedOccupants()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CapturePoint.UpdateProcessedOccupants"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CapturePoint.SetLocked
// (FUNC_BlueprintAuthorityOnly, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bNewLocked                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ACapturePoint::SetLocked(bool bNewLocked)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CapturePoint.SetLocked"));

	struct
	{
		bool                           bNewLocked;
	} params = {};

	params.bNewLocked = bNewLocked;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CapturePoint.ResetPoint
// (FUNC_Final, FUNC_Native, FUNC_Protected, FUNC_BlueprintCallable)

void ACapturePoint::ResetPoint()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CapturePoint.ResetPoint"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CapturePoint.OnVehiclePassengerChanged
// (FUNC_Final, FUNC_Native, FUNC_Protected)
// Parameters:
// class AProjectXVehicle*        Vehicle                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UVehicleSeatComponent*   Seat                           (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AProjectXCharacter*      PreviousPassenger              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ACapturePoint::OnVehiclePassengerChanged(class AProjectXVehicle* Vehicle, class UVehicleSeatComponent* Seat, class AProjectXCharacter* PreviousPassenger)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CapturePoint.OnVehiclePassengerChanged"));

	struct
	{
		class AProjectXVehicle*        Vehicle;
		class UVehicleSeatComponent*   Seat;
		class AProjectXCharacter*      PreviousPassenger;
	} params = {};

	params.Vehicle = Vehicle;
	params.Seat = Seat;
	params.PreviousPassenger = PreviousPassenger;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CapturePoint.OnRep_TeamOwner
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void ACapturePoint::OnRep_TeamOwner()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CapturePoint.OnRep_TeamOwner"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CapturePoint.OnRep_Locked
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void ACapturePoint::OnRep_Locked()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CapturePoint.OnRep_Locked"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CapturePoint.OnRep_CaptureInfo
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void ACapturePoint::OnRep_CaptureInfo()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CapturePoint.OnRep_CaptureInfo"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CapturePoint.OnPointOwnerChanged
// (FUNC_BlueprintAuthorityOnly, FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)

void ACapturePoint::OnPointOwnerChanged()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CapturePoint.OnPointOwnerChanged"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CapturePoint.OnOverlapEnd
// (FUNC_Final, FUNC_Native, FUNC_Protected)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ACapturePoint::OnOverlapEnd(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CapturePoint.OnOverlapEnd"));

	struct
	{
		class UPrimitiveComponent*     OverlappedComponent;
		class AActor*                  OtherActor;
		class UPrimitiveComponent*     OtherComp;
		int                            OtherBodyIndex;
	} params = {};

	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CapturePoint.OnOverlap
// (FUNC_Final, FUNC_Native, FUNC_Protected, FUNC_HasOutParms)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bFromSweep                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FHitResult              SweepResult                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

void ACapturePoint::OnOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CapturePoint.OnOverlap"));

	struct
	{
		class UPrimitiveComponent*     OverlappedComponent;
		class AActor*                  OtherActor;
		class UPrimitiveComponent*     OtherComp;
		int                            OtherBodyIndex;
		bool                           bFromSweep;
		struct FHitResult              SweepResult;
	} params = {};

	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CapturePoint.OnCapturePointLockChanged
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)
// Parameters:
// bool                           bIsLock                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ACapturePoint::OnCapturePointLockChanged(bool bIsLock)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CapturePoint.OnCapturePointLockChanged"));

	struct
	{
		bool                           bIsLock;
	} params = {};

	params.bIsLock = bIsLock;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CapturePoint.OnCaptureComplete
// (FUNC_BlueprintAuthorityOnly, FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)

void ACapturePoint::OnCaptureComplete()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CapturePoint.OnCaptureComplete"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CapturePoint.GetSortOrder
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int ACapturePoint::GetSortOrder()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CapturePoint.GetSortOrder"));

	struct
	{
		int                            ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.CapturePoint.GetPointName
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FText                   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_NativeAccessSpecifierPublic)

struct FText ACapturePoint::GetPointName()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CapturePoint.GetPointName"));

	struct
	{
		struct FText                   ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.CapturePoint.GetIsLocked
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool ACapturePoint::GetIsLocked()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CapturePoint.GetIsLocked"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.CapturePoint.GetCaptureRadius
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float ACapturePoint::GetCaptureRadius()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CapturePoint.GetCaptureRadius"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.CapturePoint.GetCaptureInfo
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FCaptureInfo            ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_ReferenceParm, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

struct FCaptureInfo ACapturePoint::GetCaptureInfo()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CapturePoint.GetCaptureInfo"));

	struct
	{
		struct FCaptureInfo            ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.CapturePoint.GetBaseControlEventTableRow
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// struct FBaseControlEventTableRow TableRow                       (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// struct FString                 AllySound                      (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FString                 EnemySound                     (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ACapturePoint::GetBaseControlEventTableRow(const struct FBaseControlEventTableRow& TableRow, struct FString* AllySound, struct FString* EnemySound)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CapturePoint.GetBaseControlEventTableRow"));

	struct
	{
		struct FBaseControlEventTableRow TableRow;
		struct FString                 AllySound;
		struct FString                 EnemySound;
	} params = {};

	params.TableRow = TableRow;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	if (AllySound != nullptr)
		*AllySound = params.AllySound;
	if (EnemySound != nullptr)
		*EnemySound = params.EnemySound;
}


// Function ProjectX.CapturePoint.GetAllControlPoints
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TArray<class ACapturePoint*>   CapturePointList               (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_NativeAccessSpecifierPublic)

void ACapturePoint::GetAllControlPoints(class UObject* WorldContextObject, TArray<class ACapturePoint*>* CapturePointList)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CapturePoint.GetAllControlPoints"));

	struct
	{
		class UObject*                 WorldContextObject;
		TArray<class ACapturePoint*>   CapturePointList;
	} params = {};

	params.WorldContextObject = WorldContextObject;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	if (CapturePointList != nullptr)
		*CapturePointList = params.CapturePointList;
}


// Function ProjectX.CapturePoint.CollectInitialOverlaps
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void ACapturePoint::CollectInitialOverlaps()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CapturePoint.CollectInitialOverlaps"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CharacterVolume.ToggleActive
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bNewActiveState                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ACharacterVolume::ToggleActive(bool bNewActiveState)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CharacterVolume.ToggleActive"));

	struct
	{
		bool                           bNewActiveState;
	} params = {};

	params.bNewActiveState = bNewActiveState;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CharacterVolume.OnToggleActivation
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)
// Parameters:
// bool                           bActive                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ACharacterVolume::OnToggleActivation(bool bActive)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CharacterVolume.OnToggleActivation"));

	struct
	{
		bool                           bActive;
	} params = {};

	params.bActive = bActive;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CharacterVolume.OnRep_Active
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void ACharacterVolume::OnRep_Active()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CharacterVolume.OnRep_Active"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CharacterVolume.OnCharacterOverlapStart
// (FUNC_Final, FUNC_Native, FUNC_Protected)
// Parameters:
// class AActor*                  OverlappedActor                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ACharacterVolume::OnCharacterOverlapStart(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CharacterVolume.OnCharacterOverlapStart"));

	struct
	{
		class AActor*                  OverlappedActor;
		class AActor*                  OtherActor;
	} params = {};

	params.OverlappedActor = OverlappedActor;
	params.OtherActor = OtherActor;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CharacterVolume.OnCharacterOverlapEnd
// (FUNC_Final, FUNC_Native, FUNC_Protected)
// Parameters:
// class AActor*                  OverlappedActor                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ACharacterVolume::OnCharacterOverlapEnd(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CharacterVolume.OnCharacterOverlapEnd"));

	struct
	{
		class AActor*                  OverlappedActor;
		class AActor*                  OtherActor;
	} params = {};

	params.OverlappedActor = OverlappedActor;
	params.OtherActor = OtherActor;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CharacterVolume.OnCharacterLeftVolume
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)
// Parameters:
// class AProjectXCharacter*      Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ACharacterVolume::OnCharacterLeftVolume(class AProjectXCharacter* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CharacterVolume.OnCharacterLeftVolume"));

	struct
	{
		class AProjectXCharacter*      Character;
	} params = {};

	params.Character = Character;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CharacterVolume.OnCharacterInVolume
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)
// Parameters:
// class AProjectXCharacter*      Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ACharacterVolume::OnCharacterInVolume(class AProjectXCharacter* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CharacterVolume.OnCharacterInVolume"));

	struct
	{
		class AProjectXCharacter*      Character;
	} params = {};

	params.Character = Character;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CharacterVolume.OnCharacterEnteredVolume
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)
// Parameters:
// class AProjectXCharacter*      Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ACharacterVolume::OnCharacterEnteredVolume(class AProjectXCharacter* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CharacterVolume.OnCharacterEnteredVolume"));

	struct
	{
		class AProjectXCharacter*      Character;
	} params = {};

	params.Character = Character;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CharacterVolume.IsActive
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool ACharacterVolume::IsActive()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CharacterVolume.IsActive"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ChatBoxWidget.OnMessageTypeSet
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)
// Parameters:
// EMessageType                   ChatMode                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UChatBoxWidget::OnMessageTypeSet(EMessageType ChatMode)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ChatBoxWidget.OnMessageTypeSet"));

	struct
	{
		EMessageType                   ChatMode;
	} params = {};

	params.ChatMode = ChatMode;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ChatBoxWidget.OnChatToggled
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)
// Parameters:
// TEnumAsByte<EWindowToggleCommand> ToggleCommand                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UChatBoxWidget::OnChatToggled(TEnumAsByte<EWindowToggleCommand> ToggleCommand)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ChatBoxWidget.OnChatToggled"));

	struct
	{
		TEnumAsByte<EWindowToggleCommand> ToggleCommand;
	} params = {};

	params.ToggleCommand = ToggleCommand;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ChatBoxWidget.OnChatCollapsed
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)

void UChatBoxWidget::OnChatCollapsed()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ChatBoxWidget.OnChatCollapsed"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ChatBoxWidget.GetIsUserTyping
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UChatBoxWidget::GetIsUserTyping()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ChatBoxWidget.GetIsUserTyping"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.UsesGlobalAmmo
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstance::UsesGlobalAmmo()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.UsesGlobalAmmo"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.UsesCoolDown
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstance::UsesCoolDown()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.UsesCoolDown"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.UsesAmmo
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstance::UsesAmmo()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.UsesAmmo"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.StaticGetPerkSlots
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UClass* /*UWeaponInstance*/ Class                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TArray<EPerkType>              ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_NativeAccessSpecifierPublic)

TArray<EPerkType> UWeaponInstance::StaticGetPerkSlots(class UClass* /*UWeaponInstance*/ Class)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.StaticGetPerkSlots"));

	struct
	{
		class UClass* /*UWeaponInstance*/ Class;
		TArray<EPerkType>              ReturnValue;
	} params = {};

	params.Class = Class;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.StaticGetNumberOfPerksSlots
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UClass* /*UWeaponInstance*/ Class                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// unsigned char                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

unsigned char UWeaponInstance::StaticGetNumberOfPerksSlots(class UClass* /*UWeaponInstance*/ Class)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.StaticGetNumberOfPerksSlots"));

	struct
	{
		class UClass* /*UWeaponInstance*/ Class;
		unsigned char                  ReturnValue;
	} params = {};

	params.Class = Class;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.ShouldUnequipOnToggle
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstance::ShouldUnequipOnToggle()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.ShouldUnequipOnToggle"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.ShouldUnEquipOnEmpty
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstance::ShouldUnEquipOnEmpty()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.ShouldUnEquipOnEmpty"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.ShouldUnEquipAfterFire
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstance::ShouldUnEquipAfterFire()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.ShouldUnEquipAfterFire"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.ShouldDisplayHitConfirm
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class AActor*                  Target                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  Instigator                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstance::ShouldDisplayHitConfirm(class AActor* Target, class AActor* Instigator)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.ShouldDisplayHitConfirm"));

	struct
	{
		class AActor*                  Target;
		class AActor*                  Instigator;
		bool                           ReturnValue;
	} params = {};

	params.Target = Target;
	params.Instigator = Instigator;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.SetFireAnimMontage
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UAnimMontage*            NewFireAnimation1P             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UAnimMontage*            NewFireAnimation3P             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponInstance::SetFireAnimMontage(class UAnimMontage* NewFireAnimation1P, class UAnimMontage* NewFireAnimation3P)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.SetFireAnimMontage"));

	struct
	{
		class UAnimMontage*            NewFireAnimation1P;
		class UAnimMontage*            NewFireAnimation3P;
	} params = {};

	params.NewFireAnimation1P = NewFireAnimation1P;
	params.NewFireAnimation3P = NewFireAnimation3P;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstance.Server_Reliable_UnEquip
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetServer, FUNC_NetValidate)

void UWeaponInstance::Server_Reliable_UnEquip()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.Server_Reliable_UnEquip"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstance.Server_Reliable_TightAim
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetServer, FUNC_NetValidate)
// Parameters:
// bool                           bEnable                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponInstance::Server_Reliable_TightAim(bool bEnable)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.Server_Reliable_TightAim"));

	struct
	{
		bool                           bEnable;
	} params = {};

	params.bEnable = bEnable;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstance.Server_Reliable_ReloadCancel
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetServer, FUNC_NetValidate)

void UWeaponInstance::Server_Reliable_ReloadCancel()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.Server_Reliable_ReloadCancel"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstance.Server_Reliable_Reload
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetServer, FUNC_NetValidate)
// Parameters:
// float                          WorldTimeSeconds               (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponInstance::Server_Reliable_Reload(float WorldTimeSeconds)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.Server_Reliable_Reload"));

	struct
	{
		float                          WorldTimeSeconds;
	} params = {};

	params.WorldTimeSeconds = WorldTimeSeconds;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstance.Server_Reliable_FireReleased
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetServer, FUNC_NetValidate)
// Parameters:
// unsigned char                  Mode                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponInstance::Server_Reliable_FireReleased(unsigned char Mode)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.Server_Reliable_FireReleased"));

	struct
	{
		unsigned char                  Mode;
	} params = {};

	params.Mode = Mode;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstance.Server_Reliable_Fire
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetServer, FUNC_NetValidate)
// Parameters:
// unsigned char                  Mode                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          WorldTimeOverride              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponInstance::Server_Reliable_Fire(unsigned char Mode, float WorldTimeOverride)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.Server_Reliable_Fire"));

	struct
	{
		unsigned char                  Mode;
		float                          WorldTimeOverride;
	} params = {};

	params.Mode = Mode;
	params.WorldTimeOverride = WorldTimeOverride;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstance.Server_Reliable_ChargeStart
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetServer, FUNC_NetValidate)
// Parameters:
// float                          ChargeStartTime                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// unsigned char                  Mode                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          WorldTimeOverride              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponInstance::Server_Reliable_ChargeStart(float ChargeStartTime, unsigned char Mode, float WorldTimeOverride)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.Server_Reliable_ChargeStart"));

	struct
	{
		float                          ChargeStartTime;
		unsigned char                  Mode;
		float                          WorldTimeOverride;
	} params = {};

	params.ChargeStartTime = ChargeStartTime;
	params.Mode = Mode;
	params.WorldTimeOverride = WorldTimeOverride;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstance.Server_Reliable_CancelFire
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetServer, FUNC_NetValidate)

void UWeaponInstance::Server_Reliable_CancelFire()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.Server_Reliable_CancelFire"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstance.OnWeaponParticleLoaded
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)
// Parameters:
// class UParticleSystem*         Particle                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponInstance::OnWeaponParticleLoaded(class UParticleSystem* Particle)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.OnWeaponParticleLoaded"));

	struct
	{
		class UParticleSystem*         Particle;
	} params = {};

	params.Particle = Particle;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstance.OnRep_WeaponState
// (FUNC_Native, FUNC_Public)
// Parameters:
// EWeaponState                   PreviousState                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponInstance::OnRep_WeaponState(EWeaponState PreviousState)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.OnRep_WeaponState"));

	struct
	{
		EWeaponState                   PreviousState;
	} params = {};

	params.PreviousState = PreviousState;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstance.OnRep_TightAiming
// (FUNC_Native, FUNC_Public)

void UWeaponInstance::OnRep_TightAiming()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.OnRep_TightAiming"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstance.OnRep_ParentWeapon
// (FUNC_Final, FUNC_Native, FUNC_Public)

void UWeaponInstance::OnRep_ParentWeapon()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.OnRep_ParentWeapon"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstance.OnRep_IsOverheating
// (FUNC_Final, FUNC_Native, FUNC_Public)

void UWeaponInstance::OnRep_IsOverheating()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.OnRep_IsOverheating"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstance.OnRep_HoldingFire
// (FUNC_Final, FUNC_Native, FUNC_Public)

void UWeaponInstance::OnRep_HoldingFire()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.OnRep_HoldingFire"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstance.OnRep_FireCounter
// (FUNC_Native, FUNC_Public)

void UWeaponInstance::OnRep_FireCounter()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.OnRep_FireCounter"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstance.OnRep_ChargeIsReady
// (FUNC_Final, FUNC_Native, FUNC_Public)

void UWeaponInstance::OnRep_ChargeIsReady()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.OnRep_ChargeIsReady"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstance.OnChargeValueUpdated
// (FUNC_Native, FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)
// Parameters:
// float                          Charge                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponInstance::OnChargeValueUpdated(float Charge)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.OnChargeValueUpdated"));

	struct
	{
		float                          Charge;
	} params = {};

	params.Charge = Charge;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstance.Multicast_ChargeFinished
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_NetMulticast, FUNC_Public)
// Parameters:
// float                          ChargeVal                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponInstance::Multicast_ChargeFinished(float ChargeVal)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.Multicast_ChargeFinished"));

	struct
	{
		float                          ChargeVal;
	} params = {};

	params.ChargeVal = ChargeVal;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstance.K2_WeaponStateChanged
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)
// Parameters:
// EWeaponState                   NewWeaponState                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponInstance::K2_WeaponStateChanged(EWeaponState NewWeaponState)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.K2_WeaponStateChanged"));

	struct
	{
		EWeaponState                   NewWeaponState;
	} params = {};

	params.NewWeaponState = NewWeaponState;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstance.K2_UnEquipComplete
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)

void UWeaponInstance::K2_UnEquipComplete()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.K2_UnEquipComplete"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstance.K2_UnEquip
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)

void UWeaponInstance::K2_UnEquip()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.K2_UnEquip"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstance.K2_ToggleDesignatorMarker
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)
// Parameters:
// class AActor*                  NewDesignatorMarker            (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponInstance::K2_ToggleDesignatorMarker(class AActor* NewDesignatorMarker)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.K2_ToggleDesignatorMarker"));

	struct
	{
		class AActor*                  NewDesignatorMarker;
	} params = {};

	params.NewDesignatorMarker = NewDesignatorMarker;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstance.K2_ReloadComplete
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)

void UWeaponInstance::K2_ReloadComplete()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.K2_ReloadComplete"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstance.K2_ReloadCancel
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)

void UWeaponInstance::K2_ReloadCancel()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.K2_ReloadCancel"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstance.K2_Reload
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)

void UWeaponInstance::K2_Reload()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.K2_Reload"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstance.K2_OwnerDied
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)

void UWeaponInstance::K2_OwnerDied()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.K2_OwnerDied"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstance.K2_FireReleased
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)
// Parameters:
// unsigned char                  Mode                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponInstance::K2_FireReleased(unsigned char Mode)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.K2_FireReleased"));

	struct
	{
		unsigned char                  Mode;
	} params = {};

	params.Mode = Mode;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstance.K2_FireComplete
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)
// Parameters:
// unsigned char                  Mode                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponInstance::K2_FireComplete(unsigned char Mode)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.K2_FireComplete"));

	struct
	{
		unsigned char                  Mode;
	} params = {};

	params.Mode = Mode;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstance.K2_Fire
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)
// Parameters:
// unsigned char                  Mode                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponInstance::K2_Fire(unsigned char Mode)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.K2_Fire"));

	struct
	{
		unsigned char                  Mode;
	} params = {};

	params.Mode = Mode;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstance.K2_EquipComplete
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)

void UWeaponInstance::K2_EquipComplete()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.K2_EquipComplete"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstance.K2_Equip
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)

void UWeaponInstance::K2_Equip()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.K2_Equip"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstance.IsWaitingToUnEquip
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstance::IsWaitingToUnEquip()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.IsWaitingToUnEquip"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.IsUnEquipping
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstance::IsUnEquipping()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.IsUnEquipping"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.IsTightAiming
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstance::IsTightAiming()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.IsTightAiming"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.IsTightAimFireMode
// (FUNC_Native, FUNC_Public, FUNC_Const)
// Parameters:
// unsigned char                  Mode                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstance::IsTightAimFireMode(unsigned char Mode)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.IsTightAimFireMode"));

	struct
	{
		unsigned char                  Mode;
		bool                           ReturnValue;
	} params = {};

	params.Mode = Mode;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.IsSimulatedOnly
// (FUNC_Native, FUNC_Public, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstance::IsSimulatedOnly()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.IsSimulatedOnly"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.IsSemiAutomatic
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstance::IsSemiAutomatic()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.IsSemiAutomatic"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.IsReloading
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstance::IsReloading()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.IsReloading"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.IsReady
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstance::IsReady()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.IsReady"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.IsProgressiveGlobalAmmoRestock
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstance::IsProgressiveGlobalAmmoRestock()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.IsProgressiveGlobalAmmoRestock"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.IsOverheated
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstance::IsOverheated()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.IsOverheated"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.IsNonOwningAuthority
// (FUNC_Native, FUNC_Public, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstance::IsNonOwningAuthority()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.IsNonOwningAuthority"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.IsLocallyOwnedRemote
// (FUNC_Native, FUNC_Public, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstance::IsLocallyOwnedRemote()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.IsLocallyOwnedRemote"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.IsLocallyOwned
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstance::IsLocallyOwned()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.IsLocallyOwned"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.IsInitialized
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstance::IsInitialized()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.IsInitialized"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.IsHoldingPrimary
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstance::IsHoldingPrimary()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.IsHoldingPrimary"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.IsHeadshotStatic
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// struct FHitResult              HitResult                      (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)
// class UClass* /*UDamageType*/  DamageType                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstance::IsHeadshotStatic(const struct FHitResult& HitResult, class UClass* /*UDamageType*/ DamageType)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.IsHeadshotStatic"));

	struct
	{
		struct FHitResult              HitResult;
		class UClass* /*UDamageType*/  DamageType;
		bool                           ReturnValue;
	} params = {};

	params.HitResult = HitResult;
	params.DamageType = DamageType;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.IsHeadshot
// (FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FHitResult              HitResult                      (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstance::IsHeadshot(const struct FHitResult& HitResult)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.IsHeadshot"));

	struct
	{
		struct FHitResult              HitResult;
		bool                           ReturnValue;
	} params = {};

	params.HitResult = HitResult;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.IsFiring
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstance::IsFiring()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.IsFiring"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.IsExclusiveWeapon
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstance::IsExclusiveWeapon()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.IsExclusiveWeapon"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.IsEquipping
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstance::IsEquipping()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.IsEquipping"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.IsEquipped
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstance::IsEquipped()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.IsEquipped"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.IsDown
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstance::IsDown()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.IsDown"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.IsDebugging
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstance::IsDebugging()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.IsDebugging"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.IsCurrentViewTarget
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstance::IsCurrentViewTarget()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.IsCurrentViewTarget"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.IsCoolingDown
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstance::IsCoolingDown()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.IsCoolingDown"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.IsCharged
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstance::IsCharged()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.IsCharged"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.IsAutomatic
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstance::IsAutomatic()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.IsAutomatic"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.IsAuthority
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstance::IsAuthority()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.IsAuthority"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.HasSwayOnTightAim
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstance::HasSwayOnTightAim()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.HasSwayOnTightAim"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.HasInfiniteReserveAmmo
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstance::HasInfiniteReserveAmmo()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.HasInfiniteReserveAmmo"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetWeaponState
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// EWeaponState                   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

EWeaponState UWeaponInstance::GetWeaponState()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetWeaponState"));

	struct
	{
		EWeaponState                   ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetWeaponSpread
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UWeaponInstance::GetWeaponSpread()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetWeaponSpread"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetWeaponSkinParticle
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UParticleSystem*         ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UParticleSystem* UWeaponInstance::GetWeaponSkinParticle()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetWeaponSkinParticle"));

	struct
	{
		class UParticleSystem*         ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetWeaponNameFromClass
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UClass* /*UWeaponInstance*/ Class                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FText                   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_NativeAccessSpecifierPublic)

struct FText UWeaponInstance::GetWeaponNameFromClass(class UClass* /*UWeaponInstance*/ Class)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetWeaponNameFromClass"));

	struct
	{
		class UClass* /*UWeaponInstance*/ Class;
		struct FText                   ReturnValue;
	} params = {};

	params.Class = Class;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetWeaponName
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FText                   ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)

struct FText UWeaponInstance::GetWeaponName()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetWeaponName"));

	struct
	{
		struct FText                   ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetWeaponKillFeedIconFromClass
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UClass* /*UWeaponInstance*/ Class                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UTexture2D> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

TSoftObjectPtr<class UTexture2D> UWeaponInstance::GetWeaponKillFeedIconFromClass(class UClass* /*UWeaponInstance*/ Class)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetWeaponKillFeedIconFromClass"));

	struct
	{
		class UClass* /*UWeaponInstance*/ Class;
		TSoftObjectPtr<class UTexture2D> ReturnValue;
	} params = {};

	params.Class = Class;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetWeaponKillFeedIcon
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// TSoftObjectPtr<class UTexture2D> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

TSoftObjectPtr<class UTexture2D> UWeaponInstance::GetWeaponKillFeedIcon()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetWeaponKillFeedIcon"));

	struct
	{
		TSoftObjectPtr<class UTexture2D> ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetWeaponKeyChainSocket
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UClass* /*UWeaponInstance*/ Class                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FName                   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FName UWeaponInstance::GetWeaponKeyChainSocket(class UClass* /*UWeaponInstance*/ Class)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetWeaponKeyChainSocket"));

	struct
	{
		class UClass* /*UWeaponInstance*/ Class;
		struct FName                   ReturnValue;
	} params = {};

	params.Class = Class;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetWeaponIDFromClass
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UClass* /*UWeaponInstance*/ Class                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FString                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FString UWeaponInstance::GetWeaponIDFromClass(class UClass* /*UWeaponInstance*/ Class)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetWeaponIDFromClass"));

	struct
	{
		class UClass* /*UWeaponInstance*/ Class;
		struct FString                 ReturnValue;
	} params = {};

	params.Class = Class;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetWeaponID
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FString                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FString UWeaponInstance::GetWeaponID()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetWeaponID"));

	struct
	{
		struct FString                 ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetWeaponIconFromClass
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UClass* /*UWeaponInstance*/ Class                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UTexture2D> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

TSoftObjectPtr<class UTexture2D> UWeaponInstance::GetWeaponIconFromClass(class UClass* /*UWeaponInstance*/ Class)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetWeaponIconFromClass"));

	struct
	{
		class UClass* /*UWeaponInstance*/ Class;
		TSoftObjectPtr<class UTexture2D> ReturnValue;
	} params = {};

	params.Class = Class;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetWeaponIcon
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// TSoftObjectPtr<class UTexture2D> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

TSoftObjectPtr<class UTexture2D> UWeaponInstance::GetWeaponIcon()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetWeaponIcon"));

	struct
	{
		TSoftObjectPtr<class UTexture2D> ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetWeaponDescriptionFromClass
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UClass* /*UWeaponInstance*/ Class                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FText                   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_NativeAccessSpecifierPublic)

struct FText UWeaponInstance::GetWeaponDescriptionFromClass(class UClass* /*UWeaponInstance*/ Class)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetWeaponDescriptionFromClass"));

	struct
	{
		class UClass* /*UWeaponInstance*/ Class;
		struct FText                   ReturnValue;
	} params = {};

	params.Class = Class;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetWeaponDescription
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FText                   ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)

struct FText UWeaponInstance::GetWeaponDescription()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetWeaponDescription"));

	struct
	{
		struct FText                   ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetTightAimWidget
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UClass* /*UUserWidget*/  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UClass* /*UUserWidget*/ UWeaponInstance::GetTightAimWidget()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetTightAimWidget"));

	struct
	{
		class UClass* /*UUserWidget*/  ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetTightAimSpreadModifier
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UWeaponInstance::GetTightAimSpreadModifier()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetTightAimSpreadModifier"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetTightAimPercent
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UWeaponInstance::GetTightAimPercent()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetTightAimPercent"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetTargetTransform
// (FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FTransform              Transform                      (CPF_Parm, CPF_OutParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstance::GetTargetTransform(struct FTransform* Transform)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetTargetTransform"));

	struct
	{
		struct FTransform              Transform;
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	if (Transform != nullptr)
		*Transform = params.Transform;

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetSwayIntensityMultiplier
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UWeaponInstance::GetSwayIntensityMultiplier()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetSwayIntensityMultiplier"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetReticle
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UReticleWidget*          ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UReticleWidget* UWeaponInstance::GetReticle()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetReticle"));

	struct
	{
		class UReticleWidget*          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetReserveAmmo
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UWeaponInstance::GetReserveAmmo()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetReserveAmmo"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetPerkSlots
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// TArray<EPerkType>              ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)

TArray<EPerkType> UWeaponInstance::GetPerkSlots()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetPerkSlots"));

	struct
	{
		TArray<EPerkType>              ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetOwningPlayerController
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AProjectXPlayerController* ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class AProjectXPlayerController* UWeaponInstance::GetOwningPlayerController()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetOwningPlayerController"));

	struct
	{
		class AProjectXPlayerController* ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetOwningController
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AController*             ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class AController* UWeaponInstance::GetOwningController()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetOwningController"));

	struct
	{
		class AController*             ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetOwningComponent
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UWeaponComponent*        ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UWeaponComponent* UWeaponInstance::GetOwningComponent()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetOwningComponent"));

	struct
	{
		class UWeaponComponent*        ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetOwningCharacter
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AProjectXCharacter*      ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class AProjectXCharacter* UWeaponInstance::GetOwningCharacter()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetOwningCharacter"));

	struct
	{
		class AProjectXCharacter*      ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetOverheatThreshold
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UWeaponInstance::GetOverheatThreshold()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetOverheatThreshold"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetMovementSpreadModifier
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UWeaponInstance::GetMovementSpreadModifier()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetMovementSpreadModifier"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetMaxReserveAmmo
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UWeaponInstance::GetMaxReserveAmmo()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetMaxReserveAmmo"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetMaxMagAmmo
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UWeaponInstance::GetMaxMagAmmo()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetMaxMagAmmo"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetMagCapacityFromClass
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UClass* /*UWeaponInstance*/ Class                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UWeaponInstance::GetMagCapacityFromClass(class UClass* /*UWeaponInstance*/ Class)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetMagCapacityFromClass"));

	struct
	{
		class UClass* /*UWeaponInstance*/ Class;
		float                          ReturnValue;
	} params = {};

	params.Class = Class;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetMagAmmo
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UWeaponInstance::GetMagAmmo()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetMagAmmo"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetKeyChainSocket
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FName                   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FName UWeaponInstance::GetKeyChainSocket()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetKeyChainSocket"));

	struct
	{
		struct FName                   ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetKeyChainScaleStatic
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UClass* /*UWeaponInstance*/ Class                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FVector                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FVector UWeaponInstance::GetKeyChainScaleStatic(class UClass* /*UWeaponInstance*/ Class)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetKeyChainScaleStatic"));

	struct
	{
		class UClass* /*UWeaponInstance*/ Class;
		struct FVector                 ReturnValue;
	} params = {};

	params.Class = Class;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetKeyChainScale
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FVector                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FVector UWeaponInstance::GetKeyChainScale()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetKeyChainScale"));

	struct
	{
		struct FVector                 ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetHUD
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AProjectXHUD*            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class AProjectXHUD* UWeaponInstance::GetHUD()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetHUD"));

	struct
	{
		class AProjectXHUD*            ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetHeatAsPercentage
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UWeaponInstance::GetHeatAsPercentage()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetHeatAsPercentage"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetGlobalRestockTimeFromClass
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UClass* /*UWeaponInstance*/ Class                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UWeaponInstance::GetGlobalRestockTimeFromClass(class UClass* /*UWeaponInstance*/ Class)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetGlobalRestockTimeFromClass"));

	struct
	{
		class UClass* /*UWeaponInstance*/ Class;
		float                          ReturnValue;
	} params = {};

	params.Class = Class;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetGlobalRestockTime
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UWeaponInstance::GetGlobalRestockTime()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetGlobalRestockTime"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetGlobalRestockAmountFromClass
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UClass* /*UWeaponInstance*/ Class                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UWeaponInstance::GetGlobalRestockAmountFromClass(class UClass* /*UWeaponInstance*/ Class)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetGlobalRestockAmountFromClass"));

	struct
	{
		class UClass* /*UWeaponInstance*/ Class;
		float                          ReturnValue;
	} params = {};

	params.Class = Class;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetGlobalRestockAmount
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UWeaponInstance::GetGlobalRestockAmount()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetGlobalRestockAmount"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetGlobalAmmoComponent
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UGlobalAmmoComponent*    ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UGlobalAmmoComponent* UWeaponInstance::GetGlobalAmmoComponent()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetGlobalAmmoComponent"));

	struct
	{
		class UGlobalAmmoComponent*    ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetFireType
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// EFireType                      ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

EFireType UWeaponInstance::GetFireType()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetFireType"));

	struct
	{
		EFireType                      ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetFireRatePercentage
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UWeaponInstance::GetFireRatePercentage()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetFireRatePercentage"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetFireRate
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UWeaponInstance::GetFireRate()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetFireRate"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetDisplaySocketName
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FName                   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FName UWeaponInstance::GetDisplaySocketName()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetDisplaySocketName"));

	struct
	{
		struct FName                   ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetDisplayFireRate
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UWeaponInstance::GetDisplayFireRate()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetDisplayFireRate"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetDisplayDamage
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UWeaponInstance::GetDisplayDamage()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetDisplayDamage"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetDisplayCameraFocalDistance
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UWeaponInstance::GetDisplayCameraFocalDistance()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetDisplayCameraFocalDistance"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetDesignatorTransform
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// struct FTransform              ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

struct FTransform UWeaponInstance::GetDesignatorTransform()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetDesignatorTransform"));

	struct
	{
		struct FTransform              ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetDamageType
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UClass* /*UDamageType*/  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UClass* /*UDamageType*/ UWeaponInstance::GetDamageType()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetDamageType"));

	struct
	{
		class UClass* /*UDamageType*/  ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetDamageScalingMultiplier
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          Value                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UWeaponInstance::GetDamageScalingMultiplier(float Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetDamageScalingMultiplier"));

	struct
	{
		float                          Value;
		float                          ReturnValue;
	} params = {};

	params.Value = Value;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetDamageMultiplier
// (FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FHitResult              HitResult                      (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)
// float                          DamageModifer                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UWeaponComponent*        WeaponComponent                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UWeaponInstance::GetDamageMultiplier(const struct FHitResult& HitResult, float DamageModifer, class UWeaponComponent* WeaponComponent)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetDamageMultiplier"));

	struct
	{
		struct FHitResult              HitResult;
		float                          DamageModifer;
		class UWeaponComponent*        WeaponComponent;
		float                          ReturnValue;
	} params = {};

	params.HitResult = HitResult;
	params.DamageModifer = DamageModifer;
	params.WeaponComponent = WeaponComponent;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetDamageForce
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UWeaponInstance::GetDamageForce()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetDamageForce"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetDamage
// (FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FHitResult              HitResult                      (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)
// float                          DamageModifer                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UWeaponComponent*        WeaponComponent                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UWeaponInstance::GetDamage(const struct FHitResult& HitResult, float DamageModifer, class UWeaponComponent* WeaponComponent)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetDamage"));

	struct
	{
		struct FHitResult              HitResult;
		float                          DamageModifer;
		class UWeaponComponent*        WeaponComponent;
		float                          ReturnValue;
	} params = {};

	params.HitResult = HitResult;
	params.DamageModifer = DamageModifer;
	params.WeaponComponent = WeaponComponent;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetCurrentHeat
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UWeaponInstance::GetCurrentHeat()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetCurrentHeat"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetCoolDownDuration
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UWeaponInstance::GetCoolDownDuration()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetCoolDownDuration"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.GetChargeValue
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UWeaponInstance::GetChargeValue()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.GetChargeValue"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.Get3rdPersonDisplayMeshFromClass
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UClass* /*UWeaponInstance*/ Class                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TSoftObjectPtr<class USkeletalMesh> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

TSoftObjectPtr<class USkeletalMesh> UWeaponInstance::Get3rdPersonDisplayMeshFromClass(class UClass* /*UWeaponInstance*/ Class)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.Get3rdPersonDisplayMeshFromClass"));

	struct
	{
		class UClass* /*UWeaponInstance*/ Class;
		TSoftObjectPtr<class USkeletalMesh> ReturnValue;
	} params = {};

	params.Class = Class;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.DoesWeaponSupportTightAiming
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstance::DoesWeaponSupportTightAiming()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.DoesWeaponSupportTightAiming"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.DeferredReload
// (FUNC_Native, FUNC_Public)

void UWeaponInstance::DeferredReload()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.DeferredReload"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstance.CoolDownFinished
// (FUNC_Native, FUNC_Public)

void UWeaponInstance::CoolDownFinished()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.CoolDownFinished"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstance.CoolDownDurationRemaining
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UWeaponInstance::CoolDownDurationRemaining()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.CoolDownDurationRemaining"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.Client_Reliable_TotalAmmoChanged
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetClient)
// Parameters:
// float                          NewTotalAmmo                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponInstance::Client_Reliable_TotalAmmoChanged(float NewTotalAmmo)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.Client_Reliable_TotalAmmoChanged"));

	struct
	{
		float                          NewTotalAmmo;
	} params = {};

	params.NewTotalAmmo = NewTotalAmmo;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstance.Client_Reliable_SetMagazineAmmo
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetClient)
// Parameters:
// float                          NewMagAmmo                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponInstance::Client_Reliable_SetMagazineAmmo(float NewMagAmmo)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.Client_Reliable_SetMagazineAmmo"));

	struct
	{
		float                          NewMagAmmo;
	} params = {};

	params.NewMagAmmo = NewMagAmmo;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstance.Client_Reliable_ReloadComplete
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetClient)
// Parameters:
// float                          ReloadAmount                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponInstance::Client_Reliable_ReloadComplete(float ReloadAmount)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.Client_Reliable_ReloadComplete"));

	struct
	{
		float                          ReloadAmount;
	} params = {};

	params.ReloadAmount = ReloadAmount;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstance.Client_Reliable_HeatCooldownComplete
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetClient)
// Parameters:
// unsigned char                  Mode                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponInstance::Client_Reliable_HeatCooldownComplete(unsigned char Mode)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.Client_Reliable_HeatCooldownComplete"));

	struct
	{
		unsigned char                  Mode;
	} params = {};

	params.Mode = Mode;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstance.Client_Reliable_BroadcastWeaponError
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetClient, FUNC_Const)
// Parameters:
// EWeaponError                   Error                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponInstance::Client_Reliable_BroadcastWeaponError(EWeaponError Error)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.Client_Reliable_BroadcastWeaponError"));

	struct
	{
		EWeaponError                   Error;
	} params = {};

	params.Error = Error;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstance.ChargeTimeComplete
// (FUNC_Native, FUNC_Public)
// Parameters:
// unsigned char                  Mode                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bExecuteFire                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponInstance::ChargeTimeComplete(unsigned char Mode, bool bExecuteFire)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.ChargeTimeComplete"));

	struct
	{
		unsigned char                  Mode;
		bool                           bExecuteFire;
	} params = {};

	params.Mode = Mode;
	params.bExecuteFire = bExecuteFire;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstance.CanWeaponOverheat
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstance::CanWeaponOverheat()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.CanWeaponOverheat"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.CanTightAim
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstance::CanTightAim()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.CanTightAim"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.CanQuickSwitchTo
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstance::CanQuickSwitchTo()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.CanQuickSwitchTo"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.CanHoldBreathWhileADSing
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstance::CanHoldBreathWhileADSing()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.CanHoldBreathWhileADSing"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.CanBePreviousWeapon
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstance::CanBePreviousWeapon()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.CanBePreviousWeapon"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstance.AddAmmo
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          InAmmo                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponInstance::AddAmmo(float InAmmo)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstance.AddAmmo"));

	struct
	{
		float                          InAmmo;
	} params = {};

	params.InAmmo = InAmmo;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceProjectile.UpdateLockOnWidget
// (FUNC_Native, FUNC_Protected)
// Parameters:
// class AActor*                  Target                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UClass* /*UAdvancedWidgetComponent*/ WidgetComponentClass           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponInstanceProjectile::UpdateLockOnWidget(class AActor* Target, class UClass* /*UAdvancedWidgetComponent*/ WidgetComponentClass)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceProjectile.UpdateLockOnWidget"));

	struct
	{
		class AActor*                  Target;
		class UClass* /*UAdvancedWidgetComponent*/ WidgetComponentClass;
	} params = {};

	params.Target = Target;
	params.WidgetComponentClass = WidgetComponentClass;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceProjectile.Server_SetTentativeLockOn
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetServer, FUNC_NetValidate)
// Parameters:
// class AActor*                  Target                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponInstanceProjectile::Server_SetTentativeLockOn(class AActor* Target)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceProjectile.Server_SetTentativeLockOn"));

	struct
	{
		class AActor*                  Target;
	} params = {};

	params.Target = Target;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceProjectile.Server_LockOn
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetServer, FUNC_NetValidate)
// Parameters:
// class AActor*                  Target                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponInstanceProjectile::Server_LockOn(class AActor* Target)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceProjectile.Server_LockOn"));

	struct
	{
		class AActor*                  Target;
	} params = {};

	params.Target = Target;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceProjectile.Server_AuthenticateTicket
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetServer, FUNC_NetValidate)
// Parameters:
// TArray<int>                    ProjectileIDs                  (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// class UClass* /*AProjectile*/  UsedProjectileClass            (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FVector_NetQuantize     Origin                         (CPF_ConstParm, CPF_Parm, CPF_ReferenceParm, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  PlayerAimTarget                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          PlayerMagnetismFalloff         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponInstanceProjectile::Server_AuthenticateTicket(TArray<int> ProjectileIDs, class UClass* /*AProjectile*/ UsedProjectileClass, const struct FVector_NetQuantize& Origin, class AActor* PlayerAimTarget, float PlayerMagnetismFalloff)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceProjectile.Server_AuthenticateTicket"));

	struct
	{
		TArray<int>                    ProjectileIDs;
		class UClass* /*AProjectile*/  UsedProjectileClass;
		struct FVector_NetQuantize     Origin;
		class AActor*                  PlayerAimTarget;
		float                          PlayerMagnetismFalloff;
	} params = {};

	params.ProjectileIDs = ProjectileIDs;
	params.UsedProjectileClass = UsedProjectileClass;
	params.Origin = Origin;
	params.PlayerAimTarget = PlayerAimTarget;
	params.PlayerMagnetismFalloff = PlayerMagnetismFalloff;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceProjectile.OnRep_TentativeLockOnTarget
// (FUNC_Native, FUNC_Protected)

void UWeaponInstanceProjectile::OnRep_TentativeLockOnTarget()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceProjectile.OnRep_TentativeLockOnTarget"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceProjectile.OnRep_LockOnTarget
// (FUNC_Native, FUNC_Protected)

void UWeaponInstanceProjectile::OnRep_LockOnTarget()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceProjectile.OnRep_LockOnTarget"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceProjectile.IsWeaponMagnetismEnabled
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstanceProjectile::IsWeaponMagnetismEnabled()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceProjectile.IsWeaponMagnetismEnabled"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstanceProjectile.GetWeaponMagnetismConeSize
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UWeaponInstanceProjectile::GetWeaponMagnetismConeSize()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceProjectile.GetWeaponMagnetismConeSize"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstanceProjectile.GetProjectileTransform
// (FUNC_Native, FUNC_Event, FUNC_Public, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_BlueprintEvent)
// Parameters:
// struct FTransform              Transform                      (CPF_Parm, CPF_OutParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
// struct FTransform              CosmeticTransform              (CPF_Parm, CPF_OutParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstanceProjectile::GetProjectileTransform(struct FTransform* Transform, struct FTransform* CosmeticTransform)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceProjectile.GetProjectileTransform"));

	struct
	{
		struct FTransform              Transform;
		struct FTransform              CosmeticTransform;
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	if (Transform != nullptr)
		*Transform = params.Transform;
	if (CosmeticTransform != nullptr)
		*CosmeticTransform = params.CosmeticTransform;

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstanceProjectile.GetProjectileID
// (FUNC_Final, FUNC_Native, FUNC_Protected)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int UWeaponInstanceProjectile::GetProjectileID()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceProjectile.GetProjectileID"));

	struct
	{
		int                            ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstanceProjectile.GetProjectileClass
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UClass* /*AActor*/       ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UClass* /*AActor*/ UWeaponInstanceProjectile::GetProjectileClass()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceProjectile.GetProjectileClass"));

	struct
	{
		class UClass* /*AActor*/       ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstanceProjectile.GetLockOnStrength
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UWeaponInstanceProjectile::GetLockOnStrength()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceProjectile.GetLockOnStrength"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstanceProjectile.GetHomingTarget
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AActor*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class AActor* UWeaponInstanceProjectile::GetHomingTarget()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceProjectile.GetHomingTarget"));

	struct
	{
		class AActor*                  ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstanceProjectile.CanLockOn
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstanceProjectile::CanLockOn()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceProjectile.CanLockOn"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstanceProjectile.CalculateMagnetismFalloff
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UWeaponInstanceProjectile::CalculateMagnetismFalloff()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceProjectile.CalculateMagnetismFalloff"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.TeamDeathmatchSpawnPoint.GetPointName
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FText                   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_NativeAccessSpecifierPublic)

struct FText ATeamDeathmatchSpawnPoint::GetPointName()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.TeamDeathmatchSpawnPoint.GetPointName"));

	struct
	{
		struct FText                   ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.CommandCenter.OnPartDestroyed
// (FUNC_Native, FUNC_Public, FUNC_HasOutParms)
// Parameters:
// class ADestroyableObjective*   Objective                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          Damage                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FDamageEvent            DamageEvent                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// class AController*             EventInstigator                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class APlayerState*            InstigatorPlayerState          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ACommandCenter::OnPartDestroyed(class ADestroyableObjective* Objective, float Damage, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser, class APlayerState* InstigatorPlayerState)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CommandCenter.OnPartDestroyed"));

	struct
	{
		class ADestroyableObjective*   Objective;
		float                          Damage;
		struct FDamageEvent            DamageEvent;
		class AController*             EventInstigator;
		class AActor*                  DamageCauser;
		class APlayerState*            InstigatorPlayerState;
	} params = {};

	params.Objective = Objective;
	params.Damage = Damage;
	params.DamageEvent = DamageEvent;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;
	params.InstigatorPlayerState = InstigatorPlayerState;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CommandCenter.OnPartDamageTaken
// (FUNC_Native, FUNC_Public, FUNC_HasOutParms)
// Parameters:
// class ADestroyableObjective*   Objective                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          Damage                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FDamageEvent            DamageEvent                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// class AController*             EventInstigator                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class APlayerState*            InstigatorPlayerState          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ACommandCenter::OnPartDamageTaken(class ADestroyableObjective* Objective, float Damage, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser, class APlayerState* InstigatorPlayerState)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CommandCenter.OnPartDamageTaken"));

	struct
	{
		class ADestroyableObjective*   Objective;
		float                          Damage;
		struct FDamageEvent            DamageEvent;
		class AController*             EventInstigator;
		class AActor*                  DamageCauser;
		class APlayerState*            InstigatorPlayerState;
	} params = {};

	params.Objective = Objective;
	params.Damage = Damage;
	params.DamageEvent = DamageEvent;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;
	params.InstigatorPlayerState = InstigatorPlayerState;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CommandCenter.OnPartActivationChanged
// (FUNC_Native, FUNC_Public)
// Parameters:
// class ADestroyableObjective*   Objective                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ACommandCenter::OnPartActivationChanged(class ADestroyableObjective* Objective)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CommandCenter.OnPartActivationChanged"));

	struct
	{
		class ADestroyableObjective*   Objective;
	} params = {};

	params.Objective = Objective;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CommandCenter.OnHealthChanged
// (FUNC_Native, FUNC_Protected)
// Parameters:
// float                          Delta                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ACommandCenter::OnHealthChanged(float Delta)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CommandCenter.OnHealthChanged"));

	struct
	{
		float                          Delta;
	} params = {};

	params.Delta = Delta;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CommandCenter.OnCommandCenterInitialized
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)

void ACommandCenter::OnCommandCenterInitialized()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CommandCenter.OnCommandCenterInitialized"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CommandCenter.HasDefensesUp
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool ACommandCenter::HasDefensesUp()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CommandCenter.HasDefensesUp"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.CommandCenter.CheckForInitialization
// (FUNC_Native, FUNC_Protected)

void ACommandCenter::CheckForInitialization()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CommandCenter.CheckForInitialization"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ContextMenuWidget.SetTitle
// (FUNC_Event, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintEvent)
// Parameters:
// struct FText                   NewMessage                     (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)

void UContextMenuWidget::SetTitle(const struct FText& NewMessage)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ContextMenuWidget.SetTitle"));

	struct
	{
		struct FText                   NewMessage;
	} params = {};

	params.NewMessage = NewMessage;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ContextMenuWidget.SetText
// (FUNC_Event, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintEvent)
// Parameters:
// struct FText                   NewMessage                     (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)

void UContextMenuWidget::SetText(const struct FText& NewMessage)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ContextMenuWidget.SetText"));

	struct
	{
		struct FText                   NewMessage;
	} params = {};

	params.NewMessage = NewMessage;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ContextMenuWidget.Populate
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)

void UContextMenuWidget::Populate()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ContextMenuWidget.Populate"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ContextMenuWidget.MakeContextMenuOption
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// struct FText                   Text                           (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// struct FScriptDelegate         EventOnSelected                (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
// struct FContextMenuOption      ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_NativeAccessSpecifierPublic)

struct FContextMenuOption UContextMenuWidget::MakeContextMenuOption(const struct FText& Text, const struct FScriptDelegate& EventOnSelected)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ContextMenuWidget.MakeContextMenuOption"));

	struct
	{
		struct FText                   Text;
		struct FScriptDelegate         EventOnSelected;
		struct FContextMenuOption      ReturnValue;
	} params = {};

	params.Text = Text;
	params.EventOnSelected = EventOnSelected;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ContextMenuWidget.ChooseContextMenuOption
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// unsigned char                  ChosenOption                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bCloseWindow                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UContextMenuWidget::ChooseContextMenuOption(unsigned char ChosenOption, bool bCloseWindow)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ContextMenuWidget.ChooseContextMenuOption"));

	struct
	{
		unsigned char                  ChosenOption;
		bool                           bCloseWindow;
	} params = {};

	params.ChosenOption = ChosenOption;
	params.bCloseWindow = bCloseWindow;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CosmeticColourAsset.GetColor
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FLinearColor            ColorOut                       (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UCosmeticColourAsset::GetColor(struct FLinearColor* ColorOut)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticColourAsset.GetColor"));

	struct
	{
		struct FLinearColor            ColorOut;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	if (ColorOut != nullptr)
		*ColorOut = params.ColorOut;
}


// Function ProjectX.CosmeticsComponent.ToggleView
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           Toggle                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UCosmeticsComponent::ToggleView(bool Toggle)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsComponent.ToggleView"));

	struct
	{
		bool                           Toggle;
	} params = {};

	params.Toggle = Toggle;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CosmeticsComponent.ToggleKeyChainVisiblity
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bHideKeyChain                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UCosmeticsComponent::ToggleKeyChainVisiblity(bool bHideKeyChain)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsComponent.ToggleKeyChainVisiblity"));

	struct
	{
		bool                           bHideKeyChain;
	} params = {};

	params.bHideKeyChain = bHideKeyChain;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CosmeticsComponent.SetVectorParameterForAllMeshes
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_BlueprintCallable)
// Parameters:
// struct FName                   ParameterName                  (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FVector                 VectorParameter                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UCosmeticsComponent::SetVectorParameterForAllMeshes(const struct FName& ParameterName, const struct FVector& VectorParameter)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsComponent.SetVectorParameterForAllMeshes"));

	struct
	{
		struct FName                   ParameterName;
		struct FVector                 VectorParameter;
	} params = {};

	params.ParameterName = ParameterName;
	params.VectorParameter = VectorParameter;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CosmeticsComponent.SetTextureParameterForAllMeshes
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// struct FName                   ParameterName                  (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UTexture*                TextureParameter               (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UCosmeticsComponent::SetTextureParameterForAllMeshes(const struct FName& ParameterName, class UTexture* TextureParameter)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsComponent.SetTextureParameterForAllMeshes"));

	struct
	{
		struct FName                   ParameterName;
		class UTexture*                TextureParameter;
	} params = {};

	params.ParameterName = ParameterName;
	params.TextureParameter = TextureParameter;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CosmeticsComponent.SetScalarParameterForAllMeshes
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// struct FName                   ParameterName                  (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          ScalarParameter                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UCosmeticsComponent::SetScalarParameterForAllMeshes(const struct FName& ParameterName, float ScalarParameter)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsComponent.SetScalarParameterForAllMeshes"));

	struct
	{
		struct FName                   ParameterName;
		float                          ScalarParameter;
	} params = {};

	params.ParameterName = ParameterName;
	params.ScalarParameter = ScalarParameter;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CosmeticsComponent.SetPattern
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UTexture*                NewPattern                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UCosmeticsComponent::SetPattern(class UTexture* NewPattern)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsComponent.SetPattern"));

	struct
	{
		class UTexture*                NewPattern;
	} params = {};

	params.NewPattern = NewPattern;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CosmeticsComponent.SetMaterialLayer
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UMaterialInterface*      Material                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UCosmeticsComponent::SetMaterialLayer(class UMaterialInterface* Material)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsComponent.SetMaterialLayer"));

	struct
	{
		class UMaterialInterface*      Material;
	} params = {};

	params.Material = Material;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CosmeticsComponent.RenderCustomDepth3P
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// unsigned char                  StencilValue                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bUseCustomDepth                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UCosmeticsComponent::RenderCustomDepth3P(unsigned char StencilValue, bool bUseCustomDepth)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsComponent.RenderCustomDepth3P"));

	struct
	{
		unsigned char                  StencilValue;
		bool                           bUseCustomDepth;
	} params = {};

	params.StencilValue = StencilValue;
	params.bUseCustomDepth = bUseCustomDepth;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CosmeticsComponent.PersonalVehicleChanged
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UWeaponInstanceSpawnableVehicle* PVWeapon                       (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UCosmeticsComponent::PersonalVehicleChanged(class UWeaponInstanceSpawnableVehicle* PVWeapon)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsComponent.PersonalVehicleChanged"));

	struct
	{
		class UWeaponInstanceSpawnableVehicle* PVWeapon;
	} params = {};

	params.PVWeapon = PVWeapon;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CosmeticsComponent.OnWeaponChanged
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UWeaponInstance*         Weapon                         (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UCosmeticsComponent::OnWeaponChanged(class UWeaponInstance* Weapon)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsComponent.OnWeaponChanged"));

	struct
	{
		class UWeaponInstance*         Weapon;
	} params = {};

	params.Weapon = Weapon;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CosmeticsComponent.OnVehicleChanged
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class AProjectXCharacter*      Driver                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AProjectXVehicle*        CurrentVehicle                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AProjectXVehicle*        PreviousVehicle                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UCosmeticsComponent::OnVehicleChanged(class AProjectXCharacter* Driver, class AProjectXVehicle* CurrentVehicle, class AProjectXVehicle* PreviousVehicle)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsComponent.OnVehicleChanged"));

	struct
	{
		class AProjectXCharacter*      Driver;
		class AProjectXVehicle*        CurrentVehicle;
		class AProjectXVehicle*        PreviousVehicle;
	} params = {};

	params.Driver = Driver;
	params.CurrentVehicle = CurrentVehicle;
	params.PreviousVehicle = PreviousVehicle;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CosmeticsComponent.OnTightAimStart
// (FUNC_Final, FUNC_Native, FUNC_Public)

void UCosmeticsComponent::OnTightAimStart()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsComponent.OnTightAimStart"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CosmeticsComponent.OnTightAimEnd
// (FUNC_Final, FUNC_Native, FUNC_Public)

void UCosmeticsComponent::OnTightAimEnd()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsComponent.OnTightAimEnd"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CosmeticsComponent.OnPlayerStateUpdated
// (FUNC_Final, FUNC_Native, FUNC_Protected)
// Parameters:
// class APlayerState*            PlayerState                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UCosmeticsComponent::OnPlayerStateUpdated(class APlayerState* PlayerState)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsComponent.OnPlayerStateUpdated"));

	struct
	{
		class APlayerState*            PlayerState;
	} params = {};

	params.PlayerState = PlayerState;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CosmeticsComponent.OnEquipsUpdated
// (FUNC_Final, FUNC_Native, FUNC_Public)
// Parameters:
// ECosmeticType                  Type                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FString                 ShortCode                      (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FString                 Key                            (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UCosmeticsComponent::OnEquipsUpdated(ECosmeticType Type, const struct FString& ShortCode, const struct FString& Key)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsComponent.OnEquipsUpdated"));

	struct
	{
		ECosmeticType                  Type;
		struct FString                 ShortCode;
		struct FString                 Key;
	} params = {};

	params.Type = Type;
	params.ShortCode = ShortCode;
	params.Key = Key;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CosmeticsComponent.LoadWeaponSkins
// (FUNC_Final, FUNC_Native, FUNC_Protected, FUNC_BlueprintCallable)
// Parameters:
// class UCosmeticWeaponSkinAsset* WeaponSkinAsset                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FString                 WeaponID                       (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UCosmeticsComponent::LoadWeaponSkins(class UCosmeticWeaponSkinAsset* WeaponSkinAsset, const struct FString& WeaponID)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsComponent.LoadWeaponSkins"));

	struct
	{
		class UCosmeticWeaponSkinAsset* WeaponSkinAsset;
		struct FString                 WeaponID;
	} params = {};

	params.WeaponSkinAsset = WeaponSkinAsset;
	params.WeaponID = WeaponID;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CosmeticsComponent.LoadVehicleWeaponSkins
// (FUNC_Final, FUNC_Native, FUNC_Protected, FUNC_BlueprintCallable)
// Parameters:
// class UCosmeticVehicleSkinAsset* VehicleSkinAsset               (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FString                 WeaponID                       (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UCosmeticsComponent::LoadVehicleWeaponSkins(class UCosmeticVehicleSkinAsset* VehicleSkinAsset, const struct FString& WeaponID)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsComponent.LoadVehicleWeaponSkins"));

	struct
	{
		class UCosmeticVehicleSkinAsset* VehicleSkinAsset;
		struct FString                 WeaponID;
	} params = {};

	params.VehicleSkinAsset = VehicleSkinAsset;
	params.WeaponID = WeaponID;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CosmeticsComponent.LoadTaunt
// (FUNC_Final, FUNC_Native, FUNC_Protected, FUNC_BlueprintCallable)
// Parameters:
// class UCosmeticTauntAsset*     TauntAsset                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UCosmeticsComponent::LoadTaunt(class UCosmeticTauntAsset* TauntAsset)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsComponent.LoadTaunt"));

	struct
	{
		class UCosmeticTauntAsset*     TauntAsset;
	} params = {};

	params.TauntAsset = TauntAsset;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CosmeticsComponent.LoadPlayerSkin
// (FUNC_Final, FUNC_Native, FUNC_Protected, FUNC_BlueprintCallable)
// Parameters:
// class UCosmeticPlayerSkinAsset* SkinAsset                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UCosmeticsComponent::LoadPlayerSkin(class UCosmeticPlayerSkinAsset* SkinAsset)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsComponent.LoadPlayerSkin"));

	struct
	{
		class UCosmeticPlayerSkinAsset* SkinAsset;
	} params = {};

	params.SkinAsset = SkinAsset;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CosmeticsComponent.LoadParticleTrail
// (FUNC_Final, FUNC_Native, FUNC_Protected, FUNC_BlueprintCallable)
// Parameters:
// class UCosmeticTrailAsset*     TrailAsset                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UCosmeticsComponent::LoadParticleTrail(class UCosmeticTrailAsset* TrailAsset)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsComponent.LoadParticleTrail"));

	struct
	{
		class UCosmeticTrailAsset*     TrailAsset;
	} params = {};

	params.TrailAsset = TrailAsset;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CosmeticsComponent.LoadKeyChain
// (FUNC_Final, FUNC_Native, FUNC_Protected, FUNC_BlueprintCallable)
// Parameters:
// class UCosmeticKeyChainAsset*  KeyChainAsset                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FString                 WeaponID                       (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UCosmeticsComponent::LoadKeyChain(class UCosmeticKeyChainAsset* KeyChainAsset, const struct FString& WeaponID)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsComponent.LoadKeyChain"));

	struct
	{
		class UCosmeticKeyChainAsset*  KeyChainAsset;
		struct FString                 WeaponID;
	} params = {};

	params.KeyChainAsset = KeyChainAsset;
	params.WeaponID = WeaponID;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CosmeticsComponent.LoadDefaultCosmetics
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void UCosmeticsComponent::LoadDefaultCosmetics()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsComponent.LoadDefaultCosmetics"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CosmeticsComponent.LoadDeathExplosion
// (FUNC_Final, FUNC_Native, FUNC_Protected, FUNC_BlueprintCallable)
// Parameters:
// class UCosmeticExplosionAsset* ExplosionAsset                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UCosmeticsComponent::LoadDeathExplosion(class UCosmeticExplosionAsset* ExplosionAsset)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsComponent.LoadDeathExplosion"));

	struct
	{
		class UCosmeticExplosionAsset* ExplosionAsset;
	} params = {};

	params.ExplosionAsset = ExplosionAsset;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CosmeticsComponent.LoadCosmeticsForClass
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// struct FEquips                 Equips                         (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// ECosmeticType                  Type                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UClass* /*AProjectXCharacter*/ CharacterClass                 (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UClass* /*UWeaponInstance*/ WeaponClass                    (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UCosmeticsComponent::LoadCosmeticsForClass(const struct FEquips& Equips, ECosmeticType Type, class UClass* /*AProjectXCharacter*/ CharacterClass, class UClass* /*UWeaponInstance*/ WeaponClass)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsComponent.LoadCosmeticsForClass"));

	struct
	{
		struct FEquips                 Equips;
		ECosmeticType                  Type;
		class UClass* /*AProjectXCharacter*/ CharacterClass;
		class UClass* /*UWeaponInstance*/ WeaponClass;
	} params = {};

	params.Equips = Equips;
	params.Type = Type;
	params.CharacterClass = CharacterClass;
	params.WeaponClass = WeaponClass;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CosmeticsComponent.IsLoadedCosmetic
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// ECosmeticType                  Type                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UCosmeticAssetBase*      Asset                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UCosmeticsComponent::IsLoadedCosmetic(ECosmeticType Type, class UCosmeticAssetBase* Asset)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsComponent.IsLoadedCosmetic"));

	struct
	{
		ECosmeticType                  Type;
		class UCosmeticAssetBase*      Asset;
		bool                           ReturnValue;
	} params = {};

	params.Type = Type;
	params.Asset = Asset;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.CosmeticsComponent.InitializeFromCosmeticComponent
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UCosmeticsComponent*     CosmeticComponent              (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UCosmeticsComponent::InitializeFromCosmeticComponent(class UCosmeticsComponent* CosmeticComponent)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsComponent.InitializeFromCosmeticComponent"));

	struct
	{
		class UCosmeticsComponent*     CosmeticComponent;
	} params = {};

	params.CosmeticComponent = CosmeticComponent;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CosmeticsComponent.GetTauntMontage
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UAnimMontage*            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UAnimMontage* UCosmeticsComponent::GetTauntMontage()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsComponent.GetTauntMontage"));

	struct
	{
		class UAnimMontage*            ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.CosmeticsComponent.GetPlayerTrail
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           bIsAlly                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UParticleSystem*         ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UParticleSystem* UCosmeticsComponent::GetPlayerTrail(bool bIsAlly)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsComponent.GetPlayerTrail"));

	struct
	{
		bool                           bIsAlly;
		class UParticleSystem*         ReturnValue;
	} params = {};

	params.bIsAlly = bIsAlly;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.CosmeticsComponent.GetPattern
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UTexture*                ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UTexture* UCosmeticsComponent::GetPattern()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsComponent.GetPattern"));

	struct
	{
		class UTexture*                ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.CosmeticsComponent.Get3pMeshComponents
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// TArray<class UMeshComponent*>  ReturnValue                    (CPF_ConstParm, CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_ReferenceParm, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

TArray<class UMeshComponent*> UCosmeticsComponent::Get3pMeshComponents()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsComponent.Get3pMeshComponents"));

	struct
	{
		TArray<class UMeshComponent*>  ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.CosmeticsComponent.ClearMaterialLayer
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void UCosmeticsComponent::ClearMaterialLayer()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsComponent.ClearMaterialLayer"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CosmeticsManager.UpdateLocalPlayerInfoFavouriteClass
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UClass* /*AProjectXCharacter*/ CharacterClass                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UCosmeticsManager::UpdateLocalPlayerInfoFavouriteClass(class UClass* /*AProjectXCharacter*/ CharacterClass)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsManager.UpdateLocalPlayerInfoFavouriteClass"));

	struct
	{
		class UClass* /*AProjectXCharacter*/ CharacterClass;
	} params = {};

	params.CharacterClass = CharacterClass;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CosmeticsManager.UpdateLocalPlayerInfo
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// struct FSharedPlayerInfo       UpdatedPlayerInfo              (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)

void UCosmeticsManager::UpdateLocalPlayerInfo(const struct FSharedPlayerInfo& UpdatedPlayerInfo)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsManager.UpdateLocalPlayerInfo"));

	struct
	{
		struct FSharedPlayerInfo       UpdatedPlayerInfo;
	} params = {};

	params.UpdatedPlayerInfo = UpdatedPlayerInfo;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CosmeticsManager.SavePlayerInventory
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void UCosmeticsManager::SavePlayerInventory()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsManager.SavePlayerInventory"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CosmeticsManager.SaveLocalPlayerInfo
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void UCosmeticsManager::SaveLocalPlayerInfo()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsManager.SaveLocalPlayerInfo"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CosmeticsManager.PurchaseItemRequest
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// struct FString                 ItemId                         (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UCosmeticsManager::PurchaseItemRequest(const struct FString& ItemId)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsManager.PurchaseItemRequest"));

	struct
	{
		struct FString                 ItemId;
		bool                           ReturnValue;
	} params = {};

	params.ItemId = ItemId;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.CosmeticsManager.OnNakamaConnected
// (FUNC_Native, FUNC_Public)

void UCosmeticsManager::OnNakamaConnected()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsManager.OnNakamaConnected"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CosmeticsManager.OnMatchComplete
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void UCosmeticsManager::OnMatchComplete()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsManager.OnMatchComplete"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CosmeticsManager.LoadSharedPlayerInfo
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// TArray<struct FString>         PlayerIDs                      (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)

void UCosmeticsManager::LoadSharedPlayerInfo(TArray<struct FString> PlayerIDs)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsManager.LoadSharedPlayerInfo"));

	struct
	{
		TArray<struct FString>         PlayerIDs;
	} params = {};

	params.PlayerIDs = PlayerIDs;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CosmeticsManager.LoadEarnedRewards
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_Const)
// Parameters:
// struct FString                 PlayerID                       (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UCosmeticsManager::LoadEarnedRewards(const struct FString& PlayerID)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsManager.LoadEarnedRewards"));

	struct
	{
		struct FString                 PlayerID;
	} params = {};

	params.PlayerID = PlayerID;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CosmeticsManager.LoadAllCosmeticData
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// struct FString                 PlayerID                       (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UCosmeticsManager::LoadAllCosmeticData(const struct FString& PlayerID)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsManager.LoadAllCosmeticData"));

	struct
	{
		struct FString                 PlayerID;
	} params = {};

	params.PlayerID = PlayerID;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CosmeticsManager.IsItemUnlocked
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FString                 ItemId                         (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UCosmeticsManager::IsItemUnlocked(const struct FString& ItemId)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsManager.IsItemUnlocked"));

	struct
	{
		struct FString                 ItemId;
		bool                           ReturnValue;
	} params = {};

	params.ItemId = ItemId;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.CosmeticsManager.GetPlayerInfo
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FString                 PlayerID                       (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FSharedPlayerInfo       FoundPlayerInfo                (CPF_Parm, CPF_OutParm, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UCosmeticsManager::GetPlayerInfo(const struct FString& PlayerID, struct FSharedPlayerInfo* FoundPlayerInfo)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsManager.GetPlayerInfo"));

	struct
	{
		struct FString                 PlayerID;
		struct FSharedPlayerInfo       FoundPlayerInfo;
		bool                           ReturnValue;
	} params = {};

	params.PlayerID = PlayerID;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	if (FoundPlayerInfo != nullptr)
		*FoundPlayerInfo = params.FoundPlayerInfo;

	return params.ReturnValue;
}


// Function ProjectX.CosmeticsManager.GetPlayerEquipItem
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// TArray<struct FPlayerEquipRequest> PlayerEquipRequests            (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)

void UCosmeticsManager::GetPlayerEquipItem(TArray<struct FPlayerEquipRequest> PlayerEquipRequests)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsManager.GetPlayerEquipItem"));

	struct
	{
		TArray<struct FPlayerEquipRequest> PlayerEquipRequests;
	} params = {};

	params.PlayerEquipRequests = PlayerEquipRequests;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CosmeticsManager.GetPerksList
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Protected, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UDataTable*              PerksTable                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UClass* /*AProjectXCharacter*/ CharacterClass                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UClass* /*UWeaponInstance*/ WeaponInstanceClass            (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// EPerkType                      Type                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UDataTable*              ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UDataTable* UCosmeticsManager::GetPerksList(class UDataTable* PerksTable, class UClass* /*AProjectXCharacter*/ CharacterClass, class UClass* /*UWeaponInstance*/ WeaponInstanceClass, EPerkType Type)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsManager.GetPerksList"));

	struct
	{
		class UDataTable*              PerksTable;
		class UClass* /*AProjectXCharacter*/ CharacterClass;
		class UClass* /*UWeaponInstance*/ WeaponInstanceClass;
		EPerkType                      Type;
		class UDataTable*              ReturnValue;
	} params = {};

	params.PerksTable = PerksTable;
	params.CharacterClass = CharacterClass;
	params.WeaponInstanceClass = WeaponInstanceClass;
	params.Type = Type;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.CosmeticsManager.GetLocalPlayerID
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FString                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FString UCosmeticsManager::GetLocalPlayerID()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsManager.GetLocalPlayerID"));

	struct
	{
		struct FString                 ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.CosmeticsManager.GetItemList
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// TMap<struct FString, struct FItem> ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)

TMap<struct FString, struct FItem> UCosmeticsManager::GetItemList()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsManager.GetItemList"));

	struct
	{
		TMap<struct FString, struct FItem> ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.CosmeticsManager.GetItemByShortCode
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FString                 ShortCode                      (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FItem                   ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_NativeAccessSpecifierPublic)

struct FItem UCosmeticsManager::GetItemByShortCode(const struct FString& ShortCode)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsManager.GetItemByShortCode"));

	struct
	{
		struct FString                 ShortCode;
		struct FItem                   ReturnValue;
	} params = {};

	params.ShortCode = ShortCode;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.CosmeticsManager.GetFeatureDeal
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FCosmeticDeals          ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)

struct FCosmeticDeals UCosmeticsManager::GetFeatureDeal()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsManager.GetFeatureDeal"));

	struct
	{
		struct FCosmeticDeals          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.CosmeticsManager.GetEquips
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FEquips                 ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)

struct FEquips UCosmeticsManager::GetEquips()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsManager.GetEquips"));

	struct
	{
		struct FEquips                 ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.CosmeticsManager.GetEquippedWeaponInSlot
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// EEquipSlot                     Slot                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UClass* /*AProjectXCharacter*/ CharacterClass                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AProjectXPlayerState*    PlayerState                    (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UClass* /*UWeaponInstance*/ ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UClass* /*UWeaponInstance*/ UCosmeticsManager::GetEquippedWeaponInSlot(EEquipSlot Slot, class UClass* /*AProjectXCharacter*/ CharacterClass, class AProjectXPlayerState* PlayerState)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsManager.GetEquippedWeaponInSlot"));

	struct
	{
		EEquipSlot                     Slot;
		class UClass* /*AProjectXCharacter*/ CharacterClass;
		class AProjectXPlayerState*    PlayerState;
		class UClass* /*UWeaponInstance*/ ReturnValue;
	} params = {};

	params.Slot = Slot;
	params.CharacterClass = CharacterClass;
	params.PlayerState = PlayerState;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.CosmeticsManager.GetEquippedItem
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// struct FEquips                 Equips                         (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// ECosmeticType                  Type                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FString                 Key                            (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FString                 FoundItem                      (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UCosmeticsManager::GetEquippedItem(const struct FEquips& Equips, ECosmeticType Type, struct FString* Key, struct FString* FoundItem)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsManager.GetEquippedItem"));

	struct
	{
		struct FEquips                 Equips;
		ECosmeticType                  Type;
		struct FString                 Key;
		struct FString                 FoundItem;
		bool                           ReturnValue;
	} params = {};

	params.Equips = Equips;
	params.Type = Type;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	if (Key != nullptr)
		*Key = params.Key;
	if (FoundItem != nullptr)
		*FoundItem = params.FoundItem;

	return params.ReturnValue;
}


// Function ProjectX.CosmeticsManager.GetEarnedRewards
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FCosmeticRewards        Rewards                        (CPF_Parm, CPF_OutParm, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UCosmeticsManager::GetEarnedRewards(struct FCosmeticRewards* Rewards)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsManager.GetEarnedRewards"));

	struct
	{
		struct FCosmeticRewards        Rewards;
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	if (Rewards != nullptr)
		*Rewards = params.Rewards;

	return params.ReturnValue;
}


// Function ProjectX.CosmeticsManager.GetDataTableByType
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// ECosmeticType                  Type                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UDataTable*              ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UDataTable* UCosmeticsManager::GetDataTableByType(ECosmeticType Type, class UObject* WorldContextObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsManager.GetDataTableByType"));

	struct
	{
		ECosmeticType                  Type;
		class UObject*                 WorldContextObject;
		class UDataTable*              ReturnValue;
	} params = {};

	params.Type = Type;
	params.WorldContextObject = WorldContextObject;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.CosmeticsManager.GetDailyDeal
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FCosmeticDeals          ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)

struct FCosmeticDeals UCosmeticsManager::GetDailyDeal()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsManager.GetDailyDeal"));

	struct
	{
		struct FCosmeticDeals          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.CosmeticsManager.GetCosmeticManager
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UCosmeticsManager*       ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UCosmeticsManager* UCosmeticsManager::GetCosmeticManager(class UObject* WorldContextObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsManager.GetCosmeticManager"));

	struct
	{
		class UObject*                 WorldContextObject;
		class UCosmeticsManager*       ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.CosmeticsManager.GetCharacterClassFromID
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FString                 PlayerID                       (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UClass* /*AProjectXCharacter*/ ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UClass* /*AProjectXCharacter*/ UCosmeticsManager::GetCharacterClassFromID(const struct FString& PlayerID)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsManager.GetCharacterClassFromID"));

	struct
	{
		struct FString                 PlayerID;
		class UClass* /*AProjectXCharacter*/ ReturnValue;
	} params = {};

	params.PlayerID = PlayerID;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.CosmeticsManager.GetBestWeaponInfos
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FBestWeaponInfos        ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_ReferenceParm, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

struct FBestWeaponInfos UCosmeticsManager::GetBestWeaponInfos()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsManager.GetBestWeaponInfos"));

	struct
	{
		struct FBestWeaponInfos        ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.CosmeticsManager.EquipItem
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// struct FString                 ShortCode                      (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FString                 EquipCode                      (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UCosmeticsManager::EquipItem(const struct FString& ShortCode, const struct FString& EquipCode)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsManager.EquipItem"));

	struct
	{
		struct FString                 ShortCode;
		struct FString                 EquipCode;
	} params = {};

	params.ShortCode = ShortCode;
	params.EquipCode = EquipCode;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CosmeticsManager.EquipDefaults
// (FUNC_Final, FUNC_Native, FUNC_Public)
// Parameters:
// bool                           bPostLoadEquip                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UCosmeticsManager::EquipDefaults(bool bPostLoadEquip)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsManager.EquipDefaults"));

	struct
	{
		bool                           bPostLoadEquip;
	} params = {};

	params.bPostLoadEquip = bPostLoadEquip;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CosmeticsManager.DoesItemExist
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FString                 ShortCode                      (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UCosmeticsManager::DoesItemExist(const struct FString& ShortCode)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsManager.DoesItemExist"));

	struct
	{
		struct FString                 ShortCode;
		bool                           ReturnValue;
	} params = {};

	params.ShortCode = ShortCode;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.CosmeticsManager.ClearEarnedRewards
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void UCosmeticsManager::ClearEarnedRewards()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsManager.ClearEarnedRewards"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.CosmeticsManager.BuildCosmeticKeyFromString
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// ECosmeticType                  Type                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FString                 ClassID                        (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FString                 WeaponClassID                  (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// unsigned char                  SlotID                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// EPerkType                      PerkType                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FString                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FString UCosmeticsManager::BuildCosmeticKeyFromString(ECosmeticType Type, const struct FString& ClassID, const struct FString& WeaponClassID, unsigned char SlotID, EPerkType PerkType)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsManager.BuildCosmeticKeyFromString"));

	struct
	{
		ECosmeticType                  Type;
		struct FString                 ClassID;
		struct FString                 WeaponClassID;
		unsigned char                  SlotID;
		EPerkType                      PerkType;
		struct FString                 ReturnValue;
	} params = {};

	params.Type = Type;
	params.ClassID = ClassID;
	params.WeaponClassID = WeaponClassID;
	params.SlotID = SlotID;
	params.PerkType = PerkType;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.CosmeticsManager.BuildCosmeticKeyFromClass
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// ECosmeticType                  Type                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UClass* /*AProjectXCharacter*/ CharacterClass                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UClass* /*UWeaponInstance*/ WeaponClass                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// unsigned char                  SlotID                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// EPerkType                      PerkType                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FString                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FString UCosmeticsManager::BuildCosmeticKeyFromClass(ECosmeticType Type, class UClass* /*AProjectXCharacter*/ CharacterClass, class UClass* /*UWeaponInstance*/ WeaponClass, unsigned char SlotID, EPerkType PerkType)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsManager.BuildCosmeticKeyFromClass"));

	struct
	{
		ECosmeticType                  Type;
		class UClass* /*AProjectXCharacter*/ CharacterClass;
		class UClass* /*UWeaponInstance*/ WeaponClass;
		unsigned char                  SlotID;
		EPerkType                      PerkType;
		struct FString                 ReturnValue;
	} params = {};

	params.Type = Type;
	params.CharacterClass = CharacterClass;
	params.WeaponClass = WeaponClass;
	params.SlotID = SlotID;
	params.PerkType = PerkType;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.CosmeticsManager.AddItemToUnlockList
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// struct FString                 ShortCode                      (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bMaxOne                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UCosmeticsManager::AddItemToUnlockList(const struct FString& ShortCode, bool bMaxOne)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.CosmeticsManager.AddItemToUnlockList"));

	struct
	{
		struct FString                 ShortCode;
		bool                           bMaxOne;
	} params = {};

	params.ShortCode = ShortCode;
	params.bMaxOne = bMaxOne;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DamageHistoryComponent.TakeDamage
// (FUNC_Native, FUNC_Protected, FUNC_HasOutParms)
// Parameters:
// class AActor*                  Victim                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          Damage                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FDamageEvent            DamageEvent                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// class AController*             EventInstigator                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class APlayerState*            InstigatorPlayerState          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UDamageHistoryComponent::TakeDamage(class AActor* Victim, float Damage, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser, class APlayerState* InstigatorPlayerState)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DamageHistoryComponent.TakeDamage"));

	struct
	{
		class AActor*                  Victim;
		float                          Damage;
		struct FDamageEvent            DamageEvent;
		class AController*             EventInstigator;
		class AActor*                  DamageCauser;
		class APlayerState*            InstigatorPlayerState;
	} params = {};

	params.Victim = Victim;
	params.Damage = Damage;
	params.DamageEvent = DamageEvent;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;
	params.InstigatorPlayerState = InstigatorPlayerState;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DamageHistoryComponent.GetKillHistoryDuration
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UDamageHistoryComponent::GetKillHistoryDuration()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DamageHistoryComponent.GetKillHistoryDuration"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.DamageHistoryComponent.Die
// (FUNC_Native, FUNC_Public, FUNC_HasOutParms)
// Parameters:
// class AActor*                  Victim                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          Damage                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FDamageEvent            DamageEvent                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// class AController*             EventInstigator                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bFromHeadshot                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UDamageHistoryComponent::Die(class AActor* Victim, float Damage, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser, bool bFromHeadshot)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DamageHistoryComponent.Die"));

	struct
	{
		class AActor*                  Victim;
		float                          Damage;
		struct FDamageEvent            DamageEvent;
		class AController*             EventInstigator;
		class AActor*                  DamageCauser;
		bool                           bFromHeadshot;
	} params = {};

	params.Victim = Victim;
	params.Damage = Damage;
	params.DamageEvent = DamageEvent;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;
	params.bFromHeadshot = bFromHeadshot;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DamageHistoryComponent.DamageDone
// (FUNC_Native, FUNC_Public, FUNC_HasOutParms)
// Parameters:
// class AActor*                  Victim                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          Damage                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FDamageEvent            DamageEvent                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// class AController*             EventInstigator                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UDamageHistoryComponent::DamageDone(class AActor* Victim, float Damage, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DamageHistoryComponent.DamageDone"));

	struct
	{
		class AActor*                  Victim;
		float                          Damage;
		struct FDamageEvent            DamageEvent;
		class AController*             EventInstigator;
		class AActor*                  DamageCauser;
	} params = {};

	params.Victim = Victim;
	params.Damage = Damage;
	params.DamageEvent = DamageEvent;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DamageHistoryComponent.ClearKillHistory
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void UDamageHistoryComponent::ClearKillHistory()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DamageHistoryComponent.ClearKillHistory"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXDamageType.GetDamageType
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FDamageEvent            DamageEvent                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// class UClass* /*UDamageType*/  ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UClass* /*UDamageType*/ UProjectXDamageType::GetDamageType(const struct FDamageEvent& DamageEvent)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXDamageType.GetDamageType"));

	struct
	{
		struct FDamageEvent            DamageEvent;
		class UClass* /*UDamageType*/  ReturnValue;
	} params = {};

	params.DamageEvent = DamageEvent;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.DataManager.DoesAssetExist
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// TSoftObjectPtr<class UObject>  Asset                          (CPF_Parm, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UDataManager::DoesAssetExist(TSoftObjectPtr<class UObject> Asset)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DataManager.DoesAssetExist"));

	struct
	{
		TSoftObjectPtr<class UObject>  Asset;
		bool                           ReturnValue;
	} params = {};

	params.Asset = Asset;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.DeathInfoWidget.GetWasShown
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UDeathInfoWidget::GetWasShown()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeathInfoWidget.GetWasShown"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.DeployableControllable.Server_MoveDeployable_Unreliable
// (FUNC_Net, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetServer)
// Parameters:
// EDeployableMovementDirection   Acceleration                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ADeployableControllable::Server_MoveDeployable_Unreliable(EDeployableMovementDirection Acceleration)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeployableControllable.Server_MoveDeployable_Unreliable"));

	struct
	{
		EDeployableMovementDirection   Acceleration;
	} params = {};

	params.Acceleration = Acceleration;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DeployableControllable.K2_OnControlLost
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)

void ADeployableControllable::K2_OnControlLost()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeployableControllable.K2_OnControlLost"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DeployableControllable.K2_OnControlAssumed
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)

void ADeployableControllable::K2_OnControlAssumed()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeployableControllable.K2_OnControlAssumed"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DeployableControllable.GetControlledMesh
// (FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)
// Parameters:
// class UStaticMeshComponent*    ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UStaticMeshComponent* ADeployableControllable::GetControlledMesh()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeployableControllable.GetControlledMesh"));

	struct
	{
		class UStaticMeshComponent*    ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.DeployableControlledDrone.Multicast_Explosion_PlayExplosionEffects_Unreliable
// (FUNC_Net, FUNC_Native, FUNC_Event, FUNC_NetMulticast, FUNC_Protected, FUNC_HasDefaults)
// Parameters:
// struct FVector                 ExplosionLocation              (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ADeployableControlledDrone::Multicast_Explosion_PlayExplosionEffects_Unreliable(const struct FVector& ExplosionLocation)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeployableControlledDrone.Multicast_Explosion_PlayExplosionEffects_Unreliable"));

	struct
	{
		struct FVector                 ExplosionLocation;
	} params = {};

	params.ExplosionLocation = ExplosionLocation;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DeployableControlledDrone.K2_PlayExplosionEffects
// (FUNC_Event, FUNC_Protected, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_BlueprintEvent)
// Parameters:
// struct FVector                 ExplosionLocation              (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ADeployableControlledDrone::K2_PlayExplosionEffects(const struct FVector& ExplosionLocation)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeployableControlledDrone.K2_PlayExplosionEffects"));

	struct
	{
		struct FVector                 ExplosionLocation;
	} params = {};

	params.ExplosionLocation = ExplosionLocation;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DeployableControlledDrone.K2_OnYawRotation
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)
// Parameters:
// float                          YawValue                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ADeployableControlledDrone::K2_OnYawRotation(float YawValue)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeployableControlledDrone.K2_OnYawRotation"));

	struct
	{
		float                          YawValue;
	} params = {};

	params.YawValue = YawValue;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DeployableControlledDrone.K2_OnPitchRotation
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)
// Parameters:
// float                          PitchValue                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ADeployableControlledDrone::K2_OnPitchRotation(float PitchValue)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeployableControlledDrone.K2_OnPitchRotation"));

	struct
	{
		float                          PitchValue;
	} params = {};

	params.PitchValue = PitchValue;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DeployableControlledDrone.GetAcceleration
// (FUNC_Final, FUNC_Native, FUNC_Protected, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FVector                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FVector ADeployableControlledDrone::GetAcceleration()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeployableControlledDrone.GetAcceleration"));

	struct
	{
		struct FVector                 ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.DeployableControlledRocket.SetWarningState
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)
// Parameters:
// bool                           bNewState                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ADeployableControlledRocket::SetWarningState(bool bNewState)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeployableControlledRocket.SetWarningState"));

	struct
	{
		bool                           bNewState;
	} params = {};

	params.bNewState = bNewState;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DeployableControlledRocket.Server_Reliable_Fire
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetServer)

void ADeployableControlledRocket::Server_Reliable_Fire()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeployableControlledRocket.Server_Reliable_Fire"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DeployableControlledRocket.OnRocketHit
// (FUNC_Native, FUNC_Protected, FUNC_HasOutParms, FUNC_HasDefaults)
// Parameters:
// class UPrimitiveComponent*     HitComponent                   (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComponent                 (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FVector                 NormalImpulse                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FHitResult              Hit                            (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

void ADeployableControlledRocket::OnRocketHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeployableControlledRocket.OnRocketHit"));

	struct
	{
		class UPrimitiveComponent*     HitComponent;
		class AActor*                  OtherActor;
		class UPrimitiveComponent*     OtherComponent;
		struct FVector                 NormalImpulse;
		struct FHitResult              Hit;
	} params = {};

	params.HitComponent = HitComponent;
	params.OtherActor = OtherActor;
	params.OtherComponent = OtherComponent;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DeployableControlledRocket.Multicast_Explosion_PlayExplosionEffects_Unreliable
// (FUNC_Net, FUNC_Native, FUNC_Event, FUNC_NetMulticast, FUNC_Protected, FUNC_HasDefaults)
// Parameters:
// struct FVector                 ExplosionLocation              (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ADeployableControlledRocket::Multicast_Explosion_PlayExplosionEffects_Unreliable(const struct FVector& ExplosionLocation)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeployableControlledRocket.Multicast_Explosion_PlayExplosionEffects_Unreliable"));

	struct
	{
		struct FVector                 ExplosionLocation;
	} params = {};

	params.ExplosionLocation = ExplosionLocation;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DeployableControlledRocket.K2_PlayExplosionEffects
// (FUNC_Event, FUNC_Protected, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_BlueprintEvent)
// Parameters:
// struct FVector                 ExplosionLocation              (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ADeployableControlledRocket::K2_PlayExplosionEffects(const struct FVector& ExplosionLocation)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeployableControlledRocket.K2_PlayExplosionEffects"));

	struct
	{
		struct FVector                 ExplosionLocation;
	} params = {};

	params.ExplosionLocation = ExplosionLocation;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DeployableMarker.ShouldTestBeRun
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// EPlacementTests                DataType                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool ADeployableMarker::ShouldTestBeRun(EPlacementTests DataType)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeployableMarker.ShouldTestBeRun"));

	struct
	{
		EPlacementTests                DataType;
		bool                           ReturnValue;
	} params = {};

	params.DataType = DataType;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.DeployableMarker.OnMarkerSuccess
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)

void ADeployableMarker::OnMarkerSuccess()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeployableMarker.OnMarkerSuccess"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DeployableMarker.OnMarkerFailed
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)
// Parameters:
// EPlacementFailureReason        reason                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ADeployableMarker::OnMarkerFailed(EPlacementFailureReason reason)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeployableMarker.OnMarkerFailed"));

	struct
	{
		EPlacementFailureReason        reason;
	} params = {};

	params.reason = reason;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DeployableMarker.IsValidPlacement
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool ADeployableMarker::IsValidPlacement()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeployableMarker.IsValidPlacement"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.DeployableMarker.IsTooMuchZDifference
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool ADeployableMarker::IsTooMuchZDifference()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeployableMarker.IsTooMuchZDifference"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.DeployableMarker.IsTooHighSlope
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool ADeployableMarker::IsTooHighSlope()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeployableMarker.IsTooHighSlope"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.DeployableMarker.IsSkyObstructed
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool ADeployableMarker::IsSkyObstructed()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeployableMarker.IsSkyObstructed"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.DeployableMarker.IsNotGrounded
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool ADeployableMarker::IsNotGrounded()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeployableMarker.IsNotGrounded"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.DeployableMarker.GetMaxVerticalDelta
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float ADeployableMarker::GetMaxVerticalDelta()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeployableMarker.GetMaxVerticalDelta"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.DeployableMarker.GetDeployRadius
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float ADeployableMarker::GetDeployRadius()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeployableMarker.GetDeployRadius"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.DeployableMine.OnOverlap
// (FUNC_Final, FUNC_Native, FUNC_Protected, FUNC_HasOutParms)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bFromSweep                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FHitResult              SweepResult                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

void ADeployableMine::OnOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeployableMine.OnOverlap"));

	struct
	{
		class UPrimitiveComponent*     OverlappedComponent;
		class AActor*                  OtherActor;
		class UPrimitiveComponent*     OtherComp;
		int                            OtherBodyIndex;
		bool                           bFromSweep;
		struct FHitResult              SweepResult;
	} params = {};

	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DeployableMine.OnMineTriggered
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)

void ADeployableMine::OnMineTriggered()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeployableMine.OnMineTriggered"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DeployableMine.OnMineStopMoving
// (FUNC_Final, FUNC_Native, FUNC_Protected, FUNC_HasOutParms)
// Parameters:
// struct FHitResult              ImpactResult                   (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

void ADeployableMine::OnMineStopMoving(const struct FHitResult& ImpactResult)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeployableMine.OnMineStopMoving"));

	struct
	{
		struct FHitResult              ImpactResult;
	} params = {};

	params.ImpactResult = ImpactResult;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DeployableMine.OnMineBounce
// (FUNC_Final, FUNC_Native, FUNC_Protected, FUNC_HasOutParms, FUNC_HasDefaults)
// Parameters:
// struct FHitResult              ImpactResult                   (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)
// struct FVector                 ImpactVelocity                 (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ADeployableMine::OnMineBounce(const struct FHitResult& ImpactResult, const struct FVector& ImpactVelocity)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeployableMine.OnMineBounce"));

	struct
	{
		struct FHitResult              ImpactResult;
		struct FVector                 ImpactVelocity;
	} params = {};

	params.ImpactResult = ImpactResult;
	params.ImpactVelocity = ImpactVelocity;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DeployableMine.OnMineArmed
// (FUNC_Event, FUNC_Protected, FUNC_HasOutParms, FUNC_BlueprintEvent)
// Parameters:
// struct FHitResult              ImpactResult                   (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

void ADeployableMine::OnMineArmed(const struct FHitResult& ImpactResult)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeployableMine.OnMineArmed"));

	struct
	{
		struct FHitResult              ImpactResult;
	} params = {};

	params.ImpactResult = ImpactResult;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DeployableMine.OnExplosion
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)

void ADeployableMine::OnExplosion()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeployableMine.OnExplosion"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DeployableMine.Multicast_MineTriggered_PlayTriggerEffects_Unrealiable
// (FUNC_Net, FUNC_Native, FUNC_Event, FUNC_NetMulticast, FUNC_Protected)

void ADeployableMine::Multicast_MineTriggered_PlayTriggerEffects_Unrealiable()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeployableMine.Multicast_MineTriggered_PlayTriggerEffects_Unrealiable"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DeployableMine.Multicast_Explosion_PlayExplosionEffects_Unreliable
// (FUNC_Net, FUNC_Native, FUNC_Event, FUNC_NetMulticast, FUNC_Protected)

void ADeployableMine::Multicast_Explosion_PlayExplosionEffects_Unreliable()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeployableMine.Multicast_Explosion_PlayExplosionEffects_Unreliable"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DeployableMine.GetTriggerDelayTime
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float ADeployableMine::GetTriggerDelayTime()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeployableMine.GetTriggerDelayTime"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.DeployableMine.GetMotionSensorSize
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float ADeployableMine::GetMotionSensorSize()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeployableMine.GetMotionSensorSize"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.DeployableMine.GetLaunchTime
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float ADeployableMine::GetLaunchTime()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeployableMine.GetLaunchTime"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.DeployableMine.GetLaunchHeight
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float ADeployableMine::GetLaunchHeight()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeployableMine.GetLaunchHeight"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.DeployableMine.GetExplosionRadius
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float ADeployableMine::GetExplosionRadius()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeployableMine.GetExplosionRadius"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.DeployableMine.Explosion
// (FUNC_Native, FUNC_Protected)

void ADeployableMine::Explosion()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeployableMine.Explosion"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DeployableScoutingDrone.OnDroneSpotted
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void ADeployableScoutingDrone::OnDroneSpotted()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeployableScoutingDrone.OnDroneSpotted"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DeployableScoutingDrone.OnDroneMovementStopped
// (FUNC_Final, FUNC_Native, FUNC_Protected, FUNC_HasOutParms)
// Parameters:
// struct FHitResult              ImpactResult                   (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

void ADeployableScoutingDrone::OnDroneMovementStopped(const struct FHitResult& ImpactResult)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeployableScoutingDrone.OnDroneMovementStopped"));

	struct
	{
		struct FHitResult              ImpactResult;
	} params = {};

	params.ImpactResult = ImpactResult;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DeployableScoutingDrone.OnDroneEnd
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void ADeployableScoutingDrone::OnDroneEnd()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeployableScoutingDrone.OnDroneEnd"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DeployableScoutingDrone.K2_StopScan
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)

void ADeployableScoutingDrone::K2_StopScan()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeployableScoutingDrone.K2_StopScan"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DeployableScoutingDrone.K2_StartScan
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)

void ADeployableScoutingDrone::K2_StartScan()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeployableScoutingDrone.K2_StartScan"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DeployableStasisTrap.TriggerTrap
// (FUNC_Native, FUNC_Protected, FUNC_BlueprintCallable)

void ADeployableStasisTrap::TriggerTrap()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeployableStasisTrap.TriggerTrap"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DeployableStasisTrap.Server_TriggerTrap
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetServer, FUNC_NetValidate)

void ADeployableStasisTrap::Server_TriggerTrap()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeployableStasisTrap.Server_TriggerTrap"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DeployableStasisTrap.OnOverlapEnd
// (FUNC_Native, FUNC_Protected)
// Parameters:
// class AActor*                  OverlappedActor                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ADeployableStasisTrap::OnOverlapEnd(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeployableStasisTrap.OnOverlapEnd"));

	struct
	{
		class AActor*                  OverlappedActor;
		class AActor*                  OtherActor;
	} params = {};

	params.OverlappedActor = OverlappedActor;
	params.OtherActor = OtherActor;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DeployableStasisTrap.OnOverlap
// (FUNC_Native, FUNC_Protected)
// Parameters:
// class AActor*                  OverlappedActor                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ADeployableStasisTrap::OnOverlap(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeployableStasisTrap.OnOverlap"));

	struct
	{
		class AActor*                  OverlappedActor;
		class AActor*                  OtherActor;
	} params = {};

	params.OverlappedActor = OverlappedActor;
	params.OtherActor = OtherActor;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DeployableStasisTrap.OnComponentOverlap
// (FUNC_Native, FUNC_Protected, FUNC_HasOutParms)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bFromSweep                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FHitResult              SweepResult                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

void ADeployableStasisTrap::OnComponentOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeployableStasisTrap.OnComponentOverlap"));

	struct
	{
		class UPrimitiveComponent*     OverlappedComponent;
		class AActor*                  OtherActor;
		class UPrimitiveComponent*     OtherComp;
		int                            OtherBodyIndex;
		bool                           bFromSweep;
		struct FHitResult              SweepResult;
	} params = {};

	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DeployableStasisTrap.OnComponentHit
// (FUNC_Native, FUNC_Protected, FUNC_HasOutParms, FUNC_HasDefaults)
// Parameters:
// class UPrimitiveComponent*     HitComponent                   (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FVector                 NormalImpulse                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FHitResult              Hit                            (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

void ADeployableStasisTrap::OnComponentHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeployableStasisTrap.OnComponentHit"));

	struct
	{
		class UPrimitiveComponent*     HitComponent;
		class AActor*                  OtherActor;
		class UPrimitiveComponent*     OtherComp;
		struct FVector                 NormalImpulse;
		struct FHitResult              Hit;
	} params = {};

	params.HitComponent = HitComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DeployableStasisTrap.GetGatheringDuration
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float ADeployableStasisTrap::GetGatheringDuration()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeployableStasisTrap.GetGatheringDuration"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.DeployScreenWidget.K2_OnPlayerDeployed
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)

void UDeployScreenWidget::K2_OnPlayerDeployed()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DeployScreenWidget.K2_OnPlayerDeployed"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DesignatorMarker.ToggleValidDesignator
// (FUNC_Native, FUNC_Public)
// Parameters:
// bool                           bValid                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ADesignatorMarker::ToggleValidDesignator(bool bValid)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DesignatorMarker.ToggleValidDesignator"));

	struct
	{
		bool                           bValid;
	} params = {};

	params.bValid = bValid;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DesignatorMarker.StartCharge
// (FUNC_Native, FUNC_Public)
// Parameters:
// float                          TotalTime                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          ElapsedTime                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ADesignatorMarker::StartCharge(float TotalTime, float ElapsedTime)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DesignatorMarker.StartCharge"));

	struct
	{
		float                          TotalTime;
		float                          ElapsedTime;
	} params = {};

	params.TotalTime = TotalTime;
	params.ElapsedTime = ElapsedTime;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DesignatorMarker.K2_UpdateValidDesignator
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)
// Parameters:
// bool                           bValidDesignator               (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ADesignatorMarker::K2_UpdateValidDesignator(bool bValidDesignator)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DesignatorMarker.K2_UpdateValidDesignator"));

	struct
	{
		bool                           bValidDesignator;
	} params = {};

	params.bValidDesignator = bValidDesignator;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DesignatorMarker.K2_StartCharge
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)
// Parameters:
// float                          TotalTime                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          ElapsedTime                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ADesignatorMarker::K2_StartCharge(float TotalTime, float ElapsedTime)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DesignatorMarker.K2_StartCharge"));

	struct
	{
		float                          TotalTime;
		float                          ElapsedTime;
	} params = {};

	params.TotalTime = TotalTime;
	params.ElapsedTime = ElapsedTime;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DesignatorMarker.K2_EndCharge
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)
// Parameters:
// float                          TotalTime                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          ElapsedTime                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ADesignatorMarker::K2_EndCharge(float TotalTime, float ElapsedTime)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DesignatorMarker.K2_EndCharge"));

	struct
	{
		float                          TotalTime;
		float                          ElapsedTime;
	} params = {};

	params.TotalTime = TotalTime;
	params.ElapsedTime = ElapsedTime;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DesignatorMarker.IsLocallyOwned
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool ADesignatorMarker::IsLocallyOwned()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DesignatorMarker.IsLocallyOwned"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.DesignatorMarker.InitializeForTeam
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)
// Parameters:
// int                            Team                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ADesignatorMarker::InitializeForTeam(int Team)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DesignatorMarker.InitializeForTeam"));

	struct
	{
		int                            Team;
	} params = {};

	params.Team = Team;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DesignatorMarker.GetDesignatorRadius
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float ADesignatorMarker::GetDesignatorRadius()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DesignatorMarker.GetDesignatorRadius"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.DesignatorMarker.EndCharge
// (FUNC_Native, FUNC_Public)
// Parameters:
// float                          TotalTime                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          ElapsedTime                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ADesignatorMarker::EndCharge(float TotalTime, float ElapsedTime)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DesignatorMarker.EndCharge"));

	struct
	{
		float                          TotalTime;
		float                          ElapsedTime;
	} params = {};

	params.TotalTime = TotalTime;
	params.ElapsedTime = ElapsedTime;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DesignatorMarker.Complete
// (FUNC_Native, FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)

void ADesignatorMarker::Complete()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DesignatorMarker.Complete"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DestroyableObjective.OnRep_Team
// (FUNC_Native, FUNC_Protected)

void ADestroyableObjective::OnRep_Team()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DestroyableObjective.OnRep_Team"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DestroyableObjective.OnRep_Health
// (FUNC_Native, FUNC_Protected)
// Parameters:
// float                          PreviousHealth                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ADestroyableObjective::OnRep_Health(float PreviousHealth)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DestroyableObjective.OnRep_Health"));

	struct
	{
		float                          PreviousHealth;
	} params = {};

	params.PreviousHealth = PreviousHealth;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DestroyableObjective.OnRep_Activation
// (FUNC_Native, FUNC_Protected)

void ADestroyableObjective::OnRep_Activation()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DestroyableObjective.OnRep_Activation"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DestroyableObjective.OnObjectiveInitialized
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)

void ADestroyableObjective::OnObjectiveInitialized()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DestroyableObjective.OnObjectiveInitialized"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DestroyableObjective.Multicast_Die
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_NetMulticast, FUNC_Protected)
// Parameters:
// float                          Damage                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FDamageEvent            DamageEvent                    (CPF_ConstParm, CPF_Parm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// class AController*             EventInstigator                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FHitResult              Hit                            (CPF_ConstParm, CPF_Parm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)
// class APlayerState*            InstigatorPlayerState          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ADestroyableObjective::Multicast_Die(float Damage, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser, const struct FHitResult& Hit, class APlayerState* InstigatorPlayerState)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DestroyableObjective.Multicast_Die"));

	struct
	{
		float                          Damage;
		struct FDamageEvent            DamageEvent;
		class AController*             EventInstigator;
		class AActor*                  DamageCauser;
		struct FHitResult              Hit;
		class APlayerState*            InstigatorPlayerState;
	} params = {};

	params.Damage = Damage;
	params.DamageEvent = DamageEvent;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;
	params.Hit = Hit;
	params.InstigatorPlayerState = InstigatorPlayerState;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DestroyableObjective.IsObjectiveProperlyInitialized
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool ADestroyableObjective::IsObjectiveProperlyInitialized()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DestroyableObjective.IsObjectiveProperlyInitialized"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.DestroyableObjective.IsObjectiveActive
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool ADestroyableObjective::IsObjectiveActive()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DestroyableObjective.IsObjectiveActive"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.HUDBasicUserWidget.RemoveHUDBasicUserWidgetFromWidgetList
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void UHUDBasicUserWidget::RemoveHUDBasicUserWidgetFromWidgetList()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HUDBasicUserWidget.RemoveHUDBasicUserWidgetFromWidgetList"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.HUDBasicUserWidget.CanBeHidden
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UHUDBasicUserWidget::CanBeHidden()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HUDBasicUserWidget.CanBeHidden"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.HUDBasicUserWidget.CanBeDestroyed
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UHUDBasicUserWidget::CanBeDestroyed()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HUDBasicUserWidget.CanBeDestroyed"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.HUDBasicUserWidget.AddHUDBasicUserWidgetToWidgetList
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void UHUDBasicUserWidget::AddHUDBasicUserWidgetToWidgetList()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HUDBasicUserWidget.AddHUDBasicUserWidgetToWidgetList"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.HUDBasicUserWidget.AddChildWidget
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)
// Parameters:
// class UUserWidget*             ChildWidget                    (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UHUDBasicUserWidget::AddChildWidget(class UUserWidget* ChildWidget)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HUDBasicUserWidget.AddChildWidget"));

	struct
	{
		class UUserWidget*             ChildWidget;
	} params = {};

	params.ChildWidget = ChildWidget;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DialogueWidget.OnStopTalking
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)

void UDialogueWidget::OnStopTalking()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DialogueWidget.OnStopTalking"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DialogueWidget.OnStartTalking
// (FUNC_Event, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintEvent)
// Parameters:
// struct FText                   Dialogue                       (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// float                          DurationSeconds                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UDialogueWidget::OnStartTalking(const struct FText& Dialogue, float DurationSeconds)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DialogueWidget.OnStartTalking"));

	struct
	{
		struct FText                   Dialogue;
		float                          DurationSeconds;
	} params = {};

	params.Dialogue = Dialogue;
	params.DurationSeconds = DurationSeconds;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ManagedStateActor.SetState
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class AController*             Sender                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// unsigned char                  NewState                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bIsFromInit                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AManagedStateActor::SetState(class AController* Sender, unsigned char NewState, bool bIsFromInit)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ManagedStateActor.SetState"));

	struct
	{
		class AController*             Sender;
		unsigned char                  NewState;
		bool                           bIsFromInit;
	} params = {};

	params.Sender = Sender;
	params.NewState = NewState;
	params.bIsFromInit = bIsFromInit;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ManagedStateActor.RequestStateChange
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class AController*             Sender                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// unsigned char                  NewState                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AManagedStateActor::RequestStateChange(class AController* Sender, unsigned char NewState)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ManagedStateActor.RequestStateChange"));

	struct
	{
		class AController*             Sender;
		unsigned char                  NewState;
	} params = {};

	params.Sender = Sender;
	params.NewState = NewState;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ManagedStateActor.OnStateChanged
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)
// Parameters:
// bool                           bIsFromInit                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AManagedStateActor::OnStateChanged(bool bIsFromInit)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ManagedStateActor.OnStateChanged"));

	struct
	{
		bool                           bIsFromInit;
	} params = {};

	params.bIsFromInit = bIsFromInit;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ManagedStateActor.GetStateCount
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// unsigned char                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

unsigned char AManagedStateActor::GetStateCount()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ManagedStateActor.GetStateCount"));

	struct
	{
		unsigned char                  ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ManagedStateActor.GetState
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// unsigned char                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

unsigned char AManagedStateActor::GetState()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ManagedStateActor.GetState"));

	struct
	{
		unsigned char                  ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ManagedStateActor.GetLastState
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// unsigned char                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

unsigned char AManagedStateActor::GetLastState()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ManagedStateActor.GetLastState"));

	struct
	{
		unsigned char                  ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ManagedStateActor.GetAutoIncrementState
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// unsigned char                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

unsigned char AManagedStateActor::GetAutoIncrementState()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ManagedStateActor.GetAutoIncrementState"));

	struct
	{
		unsigned char                  ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.Door.OnSelected
// (FUNC_Final, FUNC_Native, FUNC_Private)
// Parameters:
// class APlayerController*       Sender                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     Component                      (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ADoor::OnSelected(class APlayerController* Sender, class UPrimitiveComponent* Component)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Door.OnSelected"));

	struct
	{
		class APlayerController*       Sender;
		class UPrimitiveComponent*     Component;
	} params = {};

	params.Sender = Sender;
	params.Component = Component;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.Door.OnOutsideOfDoor
// (FUNC_Final, FUNC_Native, FUNC_Private, FUNC_HasOutParms)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bFromSweep                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FHitResult              SweepResult                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

void ADoor::OnOutsideOfDoor(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Door.OnOutsideOfDoor"));

	struct
	{
		class UPrimitiveComponent*     OverlappedComponent;
		class AActor*                  OtherActor;
		class UPrimitiveComponent*     OtherComp;
		int                            OtherBodyIndex;
		bool                           bFromSweep;
		struct FHitResult              SweepResult;
	} params = {};

	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.Door.OnInsideOfDoor
// (FUNC_Final, FUNC_Native, FUNC_Private, FUNC_HasOutParms)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bFromSweep                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FHitResult              SweepResult                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

void ADoor::OnInsideOfDoor(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Door.OnInsideOfDoor"));

	struct
	{
		class UPrimitiveComponent*     OverlappedComponent;
		class AActor*                  OtherActor;
		class UPrimitiveComponent*     OtherComp;
		int                            OtherBodyIndex;
		bool                           bFromSweep;
		struct FHitResult              SweepResult;
	} params = {};

	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.Door.AnimateDoor
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          InterpDegrees                  (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bIsFromInit                    (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ADoor::AnimateDoor(float InterpDegrees, bool bIsFromInit)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Door.AnimateDoor"));

	struct
	{
		float                          InterpDegrees;
		bool                           bIsFromInit;
	} params = {};

	params.InterpDegrees = InterpDegrees;
	params.bIsFromInit = bIsFromInit;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.DropsComponent.SpawnDrops
// (FUNC_Final, FUNC_Native, FUNC_Protected, FUNC_HasOutParms)
// Parameters:
// class AActor*                  Victim                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          Damage                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FDamageEvent            DamageEvent                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// class AController*             EventInstigator                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class APlayerState*            InstigatorPlayerState          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UDropsComponent::SpawnDrops(class AActor* Victim, float Damage, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser, class APlayerState* InstigatorPlayerState)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.DropsComponent.SpawnDrops"));

	struct
	{
		class AActor*                  Victim;
		float                          Damage;
		struct FDamageEvent            DamageEvent;
		class AController*             EventInstigator;
		class AActor*                  DamageCauser;
		class APlayerState*            InstigatorPlayerState;
	} params = {};

	params.Victim = Victim;
	params.Damage = Damage;
	params.DamageEvent = DamageEvent;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;
	params.InstigatorPlayerState = InstigatorPlayerState;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.EditorUtilities.SpawnObjects
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Private, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_BlueprintCallable)
// Parameters:
// class UClass* /*UObject*/      ActorToSpawn                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  BoundsVolume                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            Count                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bGroundSpawnedActors           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bConformToSlopes               (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bRandomRotation                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FVector                 Offset                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bAvoidOverlappingActors        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bAllowStaticMesh               (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bAllowLandscapes               (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bLimitToSurfaceTypes           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TArray<TEnumAsByte<EPhysicalSurface>> SurfaceTypes                   (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)

void UEditorUtilities::SpawnObjects(class UClass* /*UObject*/ ActorToSpawn, class AActor* BoundsVolume, int Count, bool bGroundSpawnedActors, bool bConformToSlopes, bool bRandomRotation, const struct FVector& Offset, bool bAvoidOverlappingActors, bool bAllowStaticMesh, bool bAllowLandscapes, bool bLimitToSurfaceTypes, TArray<TEnumAsByte<EPhysicalSurface>> SurfaceTypes)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.EditorUtilities.SpawnObjects"));

	struct
	{
		class UClass* /*UObject*/      ActorToSpawn;
		class AActor*                  BoundsVolume;
		int                            Count;
		bool                           bGroundSpawnedActors;
		bool                           bConformToSlopes;
		bool                           bRandomRotation;
		struct FVector                 Offset;
		bool                           bAvoidOverlappingActors;
		bool                           bAllowStaticMesh;
		bool                           bAllowLandscapes;
		bool                           bLimitToSurfaceTypes;
		TArray<TEnumAsByte<EPhysicalSurface>> SurfaceTypes;
	} params = {};

	params.ActorToSpawn = ActorToSpawn;
	params.BoundsVolume = BoundsVolume;
	params.Count = Count;
	params.bGroundSpawnedActors = bGroundSpawnedActors;
	params.bConformToSlopes = bConformToSlopes;
	params.bRandomRotation = bRandomRotation;
	params.Offset = Offset;
	params.bAvoidOverlappingActors = bAvoidOverlappingActors;
	params.bAllowStaticMesh = bAllowStaticMesh;
	params.bAllowLandscapes = bAllowLandscapes;
	params.bLimitToSurfaceTypes = bLimitToSurfaceTypes;
	params.SurfaceTypes = SurfaceTypes;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.EditorUtilities.ReplaceObjects
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Private, FUNC_BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FString                 PartialMatch                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UClass* /*AActor*/       Replacement                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UEditorUtilities::ReplaceObjects(class UObject* WorldContextObject, const struct FString& PartialMatch, class UClass* /*AActor*/ Replacement)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.EditorUtilities.ReplaceObjects"));

	struct
	{
		class UObject*                 WorldContextObject;
		struct FString                 PartialMatch;
		class UClass* /*AActor*/       Replacement;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.PartialMatch = PartialMatch;
	params.Replacement = Replacement;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ExperienceConfiguration.GetExperienceForEvent
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// EXPEventType                   Type                           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int UExperienceConfiguration::GetExperienceForEvent(class UObject* WorldContextObject, EXPEventType Type)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ExperienceConfiguration.GetExperienceForEvent"));

	struct
	{
		class UObject*                 WorldContextObject;
		EXPEventType                   Type;
		int                            ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.Type = Type;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ExperienceConfiguration.GetExperienceEventType
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UClass* /*UExperienceEvent*/ Event                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// EXPEventType                   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

EXPEventType UExperienceConfiguration::GetExperienceEventType(class UObject* WorldContextObject, class UClass* /*UExperienceEvent*/ Event)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ExperienceConfiguration.GetExperienceEventType"));

	struct
	{
		class UObject*                 WorldContextObject;
		class UClass* /*UExperienceEvent*/ Event;
		EXPEventType                   ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.Event = Event;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ExperienceConfiguration.GetExperienceEventClass
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// EXPEventType                   Type                           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UClass* /*UExperienceEvent*/ ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UClass* /*UExperienceEvent*/ UExperienceConfiguration::GetExperienceEventClass(EXPEventType Type)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ExperienceConfiguration.GetExperienceEventClass"));

	struct
	{
		EXPEventType                   Type;
		class UClass* /*UExperienceEvent*/ ReturnValue;
	} params = {};

	params.Type = Type;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ExperienceConfiguration.Get
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UExperienceConfiguration* ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UExperienceConfiguration* UExperienceConfiguration::Get(class UObject* WorldContextObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ExperienceConfiguration.Get"));

	struct
	{
		class UObject*                 WorldContextObject;
		class UExperienceConfiguration* ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ExperienceEvent.GetSound
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class USoundBase*              ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class USoundBase* UExperienceEvent::GetSound()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ExperienceEvent.GetSound"));

	struct
	{
		class USoundBase*              ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ExperienceEvent.GetShowOverheadNotification
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UExperienceEvent::GetShowOverheadNotification()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ExperienceEvent.GetShowOverheadNotification"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ExperienceEvent.GetOverheadNotificationDuration
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UExperienceEvent::GetOverheadNotificationDuration()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ExperienceEvent.GetOverheadNotificationDuration"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ExperienceEvent.GetMessage
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// struct FText                   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_NativeAccessSpecifierPublic)

struct FText UExperienceEvent::GetMessage()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ExperienceEvent.GetMessage"));

	struct
	{
		struct FText                   ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ExperienceEvent.GetExperience
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int UExperienceEvent::GetExperience()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ExperienceEvent.GetExperience"));

	struct
	{
		int                            ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ExperienceEvent.GetDisplayType
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// EDisplayType                   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

EDisplayType UExperienceEvent::GetDisplayType()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ExperienceEvent.GetDisplayType"));

	struct
	{
		EDisplayType                   ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.Explodables.OnExplosionTriggered
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)

void AExplodables::OnExplosionTriggered()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Explodables.OnExplosionTriggered"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.Explodables.Multicast_Reliable_Died
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_NetMulticast, FUNC_Protected)
// Parameters:
// float                          Damage                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FDamageEvent            DamageEvent                    (CPF_ConstParm, CPF_Parm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AExplodables::Multicast_Reliable_Died(float Damage, const struct FDamageEvent& DamageEvent, class AActor* DamageCauser)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Explodables.Multicast_Reliable_Died"));

	struct
	{
		float                          Damage;
		struct FDamageEvent            DamageEvent;
		class AActor*                  DamageCauser;
	} params = {};

	params.Damage = Damage;
	params.DamageEvent = DamageEvent;
	params.DamageCauser = DamageCauser;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.Explodables.GetDamageMax
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AExplodables::GetDamageMax()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Explodables.GetDamageMax"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.Flag.OnRep_FlagInfo
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void AFlag::OnRep_FlagInfo()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Flag.OnRep_FlagInfo"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.Flag.OnRep_CanBePickedUp
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void AFlag::OnRep_CanBePickedUp()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Flag.OnRep_CanBePickedUp"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.Flag.OnOverlap
// (FUNC_Native, FUNC_Protected, FUNC_HasOutParms)
// Parameters:
// class UPrimitiveComponent*     OverlapComponent               (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bFromSweep                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FHitResult              SweepResult                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

void AFlag::OnOverlap(class UPrimitiveComponent* OverlapComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Flag.OnOverlap"));

	struct
	{
		class UPrimitiveComponent*     OverlapComponent;
		class AActor*                  OtherActor;
		class UPrimitiveComponent*     OtherComp;
		int                            OtherBodyIndex;
		bool                           bFromSweep;
		struct FHitResult              SweepResult;
	} params = {};

	params.OverlapComponent = OverlapComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.Flag.OnCarrierEnterSoftBoundary
// (FUNC_Final, FUNC_Native, FUNC_Protected)
// Parameters:
// class AActor*                  Actor                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class ASoftBoundaryVolume*     TargetSoftBoundaryVolume       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AFlag::OnCarrierEnterSoftBoundary(class AActor* Actor, class ASoftBoundaryVolume* TargetSoftBoundaryVolume)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Flag.OnCarrierEnterSoftBoundary"));

	struct
	{
		class AActor*                  Actor;
		class ASoftBoundaryVolume*     TargetSoftBoundaryVolume;
	} params = {};

	params.Actor = Actor;
	params.TargetSoftBoundaryVolume = TargetSoftBoundaryVolume;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.Flag.GetPickupRadius
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AFlag::GetPickupRadius()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Flag.GetPickupRadius"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.Flag.GetFlagInfo
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FFlagInfo               ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

struct FFlagInfo AFlag::GetFlagInfo()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Flag.GetFlagInfo"));

	struct
	{
		struct FFlagInfo               ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.Flag.GetFlagCarrierAffliction
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UClass* /*UAfflictionInstance*/ ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UClass* /*UAfflictionInstance*/ AFlag::GetFlagCarrierAffliction()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Flag.GetFlagCarrierAffliction"));

	struct
	{
		class UClass* /*UAfflictionInstance*/ ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.Flag.GetCharacter
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AProjectXCharacter*      ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class AProjectXCharacter* AFlag::GetCharacter()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Flag.GetCharacter"));

	struct
	{
		class AProjectXCharacter*      ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.Flag.GetCapsuleComponent
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UCapsuleComponent*       ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UCapsuleComponent* AFlag::GetCapsuleComponent()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Flag.GetCapsuleComponent"));

	struct
	{
		class UCapsuleComponent*       ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.Flag.FlagStatUpdated
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)

void AFlag::FlagStatUpdated()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Flag.FlagStatUpdated"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.Flag.FlagPickupUpdated
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)

void AFlag::FlagPickupUpdated()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Flag.FlagPickupUpdated"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.Flag.FlagAfflictionEnded
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void AFlag::FlagAfflictionEnded()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Flag.FlagAfflictionEnded"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.Flag.CarrierDied
// (FUNC_Final, FUNC_Native, FUNC_Protected, FUNC_HasOutParms)
// Parameters:
// class AActor*                  Victim                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          Damage                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FDamageEvent            DamageEvent                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// class AController*             EventInstigator                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class APlayerState*            InstigatorPlayerState          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AFlag::CarrierDied(class AActor* Victim, float Damage, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser, class APlayerState* InstigatorPlayerState)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Flag.CarrierDied"));

	struct
	{
		class AActor*                  Victim;
		float                          Damage;
		struct FDamageEvent            DamageEvent;
		class AController*             EventInstigator;
		class AActor*                  DamageCauser;
		class APlayerState*            InstigatorPlayerState;
	} params = {};

	params.Victim = Victim;
	params.Damage = Damage;
	params.DamageEvent = DamageEvent;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;
	params.InstigatorPlayerState = InstigatorPlayerState;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.Flag.CanBePickedUp
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AFlag::CanBePickedUp()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Flag.CanBePickedUp"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.FlagSpawn.ResetFlag
// (FUNC_Final, FUNC_Native, FUNC_Public)
// Parameters:
// class AFlag*                   FlagReset                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AProjectXCharacter*      Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            FlagTeam                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AFlagSpawn::ResetFlag(class AFlag* FlagReset, class AProjectXCharacter* Character, int FlagTeam)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.FlagSpawn.ResetFlag"));

	struct
	{
		class AFlag*                   FlagReset;
		class AProjectXCharacter*      Character;
		int                            FlagTeam;
	} params = {};

	params.FlagReset = FlagReset;
	params.Character = Character;
	params.FlagTeam = FlagTeam;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.FlagSpawn.OnRep_FlagState
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void AFlagSpawn::OnRep_FlagState()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.FlagSpawn.OnRep_FlagState"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.FlagSpawn.OnRep_Flag
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void AFlagSpawn::OnRep_Flag()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.FlagSpawn.OnRep_Flag"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.FlagSpawn.OnOverlap
// (FUNC_Native, FUNC_Protected, FUNC_HasOutParms)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bFromSweep                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FHitResult              SweepResult                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

void AFlagSpawn::OnOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.FlagSpawn.OnOverlap"));

	struct
	{
		class UPrimitiveComponent*     OverlappedComponent;
		class AActor*                  OtherActor;
		class UPrimitiveComponent*     OtherComp;
		int                            OtherBodyIndex;
		bool                           bFromSweep;
		struct FHitResult              SweepResult;
	} params = {};

	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.FlagSpawn.OnFlagReset
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)

void AFlagSpawn::OnFlagReset()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.FlagSpawn.OnFlagReset"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.FlagSpawn.OnFlagPickedUp
// (FUNC_Native, FUNC_Protected)
// Parameters:
// class AFlag*                   FlagPickedUp                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AProjectXCharacter*      Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            FlagTeam                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AFlagSpawn::OnFlagPickedUp(class AFlag* FlagPickedUp, class AProjectXCharacter* Character, int FlagTeam)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.FlagSpawn.OnFlagPickedUp"));

	struct
	{
		class AFlag*                   FlagPickedUp;
		class AProjectXCharacter*      Character;
		int                            FlagTeam;
	} params = {};

	params.FlagPickedUp = FlagPickedUp;
	params.Character = Character;
	params.FlagTeam = FlagTeam;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.FlagSpawn.OnFlagCaptured
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)

void AFlagSpawn::OnFlagCaptured()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.FlagSpawn.OnFlagCaptured"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.FlagSpawn.Multicast_OnFlagCaptured
// (FUNC_Net, FUNC_Native, FUNC_Event, FUNC_NetMulticast, FUNC_Protected)

void AFlagSpawn::Multicast_OnFlagCaptured()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.FlagSpawn.Multicast_OnFlagCaptured"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.FlagSpawn.IsFlagHome
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AFlagSpawn::IsFlagHome()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.FlagSpawn.IsFlagHome"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.FlagSpawn.GetFlag
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AFlag*                   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class AFlag* AFlagSpawn::GetFlag()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.FlagSpawn.GetFlag"));

	struct
	{
		class AFlag*                   ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.VivoxGameInstance.UpdatePushToTalk
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bNewPushToTalk                 (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UVivoxGameInstance::UpdatePushToTalk(bool bNewPushToTalk)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.VivoxGameInstance.UpdatePushToTalk"));

	struct
	{
		bool                           bNewPushToTalk;
	} params = {};

	params.bNewPushToTalk = bNewPushToTalk;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.VivoxGameInstance.UpdateParticipantVolume
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          Volume                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UVivoxGameInstance::UpdateParticipantVolume(float Volume)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.VivoxGameInstance.UpdateParticipantVolume"));

	struct
	{
		float                          Volume;
	} params = {};

	params.Volume = Volume;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.VivoxGameInstance.IsUsingPushToTalk
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UVivoxGameInstance::IsUsingPushToTalk()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.VivoxGameInstance.IsUsingPushToTalk"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.VivoxGameInstance.GetVivoxSafePlayerName
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// struct FString                 BaseName                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FString                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FString UVivoxGameInstance::GetVivoxSafePlayerName(const struct FString& BaseName)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.VivoxGameInstance.GetVivoxSafePlayerName"));

	struct
	{
		struct FString                 BaseName;
		struct FString                 ReturnValue;
	} params = {};

	params.BaseName = BaseName;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.VivoxGameInstance.GetVivoxSafeName
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// struct FString                 BaseName                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FString                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FString UVivoxGameInstance::GetVivoxSafeName(const struct FString& BaseName)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.VivoxGameInstance.GetVivoxSafeName"));

	struct
	{
		struct FString                 BaseName;
		struct FString                 ReturnValue;
	} params = {};

	params.BaseName = BaseName;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.VivoxGameInstance.GetPlayerStateByVivoxName
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FString                 ID                             (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class APlayerState*            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class APlayerState* UVivoxGameInstance::GetPlayerStateByVivoxName(class UObject* WorldContextObject, struct FString* ID)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.VivoxGameInstance.GetPlayerStateByVivoxName"));

	struct
	{
		class UObject*                 WorldContextObject;
		struct FString                 ID;
		class APlayerState*            ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	if (ID != nullptr)
		*ID = params.ID;

	return params.ReturnValue;
}


// Function ProjectX.VivoxGameInstance.GetParticipantVolume
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UVivoxGameInstance::GetParticipantVolume()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.VivoxGameInstance.GetParticipantVolume"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.GameInstanceLoadingScreen.UpdateUseLoadingScreen
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bNewUseLoadingScreen           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UGameInstanceLoadingScreen::UpdateUseLoadingScreen(bool bNewUseLoadingScreen)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.GameInstanceLoadingScreen.UpdateUseLoadingScreen"));

	struct
	{
		bool                           bNewUseLoadingScreen;
	} params = {};

	params.bNewUseLoadingScreen = bNewUseLoadingScreen;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.GameInstanceLoadingScreen.RemoveLoadingScreen
// (FUNC_Native, FUNC_Public)

void UGameInstanceLoadingScreen::RemoveLoadingScreen()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.GameInstanceLoadingScreen.RemoveLoadingScreen"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.GameInstanceLoadingScreen.IsFading
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UGameInstanceLoadingScreen::IsFading()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.GameInstanceLoadingScreen.IsFading"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.GameInstanceLoadingScreen.FadeScreen
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          inFadeDuration                 (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bInToBlack                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          inFadeDelay                    (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bInForceFadeToBlack            (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UGameInstanceLoadingScreen::FadeScreen(float inFadeDuration, bool bInToBlack, float inFadeDelay, bool bInForceFadeToBlack)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.GameInstanceLoadingScreen.FadeScreen"));

	struct
	{
		float                          inFadeDuration;
		bool                           bInToBlack;
		float                          inFadeDelay;
		bool                           bInForceFadeToBlack;
	} params = {};

	params.inFadeDuration = inFadeDuration;
	params.bInToBlack = bInToBlack;
	params.inFadeDelay = inFadeDelay;
	params.bInForceFadeToBlack = bInForceFadeToBlack;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.GlobalAmmoComponent.OnRep_GlobalAmmoList
// (FUNC_Native, FUNC_Protected)

void UGlobalAmmoComponent::OnRep_GlobalAmmoList()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.GlobalAmmoComponent.OnRep_GlobalAmmoList"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.GlobalAmmoComponent.GlobalWeaponAmmoRestock
// (FUNC_Native, FUNC_Public)
// Parameters:
// class UClass* /*UWeaponInstance*/ Weapon                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UGlobalAmmoComponent::GlobalWeaponAmmoRestock(class UClass* /*UWeaponInstance*/ Weapon)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.GlobalAmmoComponent.GlobalWeaponAmmoRestock"));

	struct
	{
		class UClass* /*UWeaponInstance*/ Weapon;
	} params = {};

	params.Weapon = Weapon;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.GlobalAmmoComponent.GlobalWeaponAmmoReset
// (FUNC_Native, FUNC_Public)
// Parameters:
// class UClass* /*UWeaponInstance*/ Weapon                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UGlobalAmmoComponent::GlobalWeaponAmmoReset(class UClass* /*UWeaponInstance*/ Weapon)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.GlobalAmmoComponent.GlobalWeaponAmmoReset"));

	struct
	{
		class UClass* /*UWeaponInstance*/ Weapon;
	} params = {};

	params.Weapon = Weapon;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.GlobalAmmoComponent.GetTimeUntilNextRestock
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UClass* /*UWeaponInstance*/ Weapon                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UGlobalAmmoComponent::GetTimeUntilNextRestock(class UClass* /*UWeaponInstance*/ Weapon)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.GlobalAmmoComponent.GetTimeUntilNextRestock"));

	struct
	{
		class UClass* /*UWeaponInstance*/ Weapon;
		float                          ReturnValue;
	} params = {};

	params.Weapon = Weapon;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.GlobalAmmoComponent.GetGlobalWeaponAmmo
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UClass* /*UWeaponInstance*/ Weapon                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UGlobalAmmoComponent::GetGlobalWeaponAmmo(class UClass* /*UWeaponInstance*/ Weapon)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.GlobalAmmoComponent.GetGlobalWeaponAmmo"));

	struct
	{
		class UClass* /*UWeaponInstance*/ Weapon;
		float                          ReturnValue;
	} params = {};

	params.Weapon = Weapon;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.GlobalAmmoComponent.GetGlobalAmmoEntry
// (FUNC_Native, FUNC_Public)
// Parameters:
// class UWeaponInstance*         Weapon                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FGlobalWeaponAmmo       ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

struct FGlobalWeaponAmmo UGlobalAmmoComponent::GetGlobalAmmoEntry(class UWeaponInstance* Weapon)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.GlobalAmmoComponent.GetGlobalAmmoEntry"));

	struct
	{
		class UWeaponInstance*         Weapon;
		struct FGlobalWeaponAmmo       ReturnValue;
	} params = {};

	params.Weapon = Weapon;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.GlobalAmmoComponent.ForceNetUpdate
// (FUNC_Final, FUNC_Native, FUNC_Public)

void UGlobalAmmoComponent::ForceNetUpdate()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.GlobalAmmoComponent.ForceNetUpdate"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.GlobalEffectSystem.PlaySoundAtLocationForAllPlayers
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasDefaults, FUNC_BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class USoundBase*              SoundToPlay                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FVector                 Location                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AGlobalEffectSystem::PlaySoundAtLocationForAllPlayers(class UObject* WorldContextObject, class USoundBase* SoundToPlay, const struct FVector& Location)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.GlobalEffectSystem.PlaySoundAtLocationForAllPlayers"));

	struct
	{
		class UObject*                 WorldContextObject;
		class USoundBase*              SoundToPlay;
		struct FVector                 Location;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.SoundToPlay = SoundToPlay;
	params.Location = Location;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.GlobalEffectSystem.Multicast_PlaySoundAtLocation
// (FUNC_Final, FUNC_Net, FUNC_Native, FUNC_Event, FUNC_NetMulticast, FUNC_Private)
// Parameters:
// class USoundBase*              SoundToPlay                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FVector_NetQuantize     Location                       (CPF_Parm, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AGlobalEffectSystem::Multicast_PlaySoundAtLocation(class USoundBase* SoundToPlay, const struct FVector_NetQuantize& Location)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.GlobalEffectSystem.Multicast_PlaySoundAtLocation"));

	struct
	{
		class USoundBase*              SoundToPlay;
		struct FVector_NetQuantize     Location;
	} params = {};

	params.SoundToPlay = SoundToPlay;
	params.Location = Location;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.GroundEffectVolume.SpawnGroundEffects
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          AreaRadius                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          NumberOfPoints                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AGroundEffectVolume::SpawnGroundEffects(float AreaRadius, float NumberOfPoints)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.GroundEffectVolume.SpawnGroundEffects"));

	struct
	{
		float                          AreaRadius;
		float                          NumberOfPoints;
	} params = {};

	params.AreaRadius = AreaRadius;
	params.NumberOfPoints = NumberOfPoints;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.GroundEffectVolume.SpawnGroundEffectAtPosition
// (FUNC_Event, FUNC_Public, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_BlueprintEvent)
// Parameters:
// struct FVector                 Position                       (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AGroundEffectVolume::SpawnGroundEffectAtPosition(const struct FVector& Position)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.GroundEffectVolume.SpawnGroundEffectAtPosition"));

	struct
	{
		struct FVector                 Position;
	} params = {};

	params.Position = Position;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.GroundEffectVolume.OnRep_TeamOwner
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void AGroundEffectVolume::OnRep_TeamOwner()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.GroundEffectVolume.OnRep_TeamOwner"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.GuidedDesignatorActor.GetDesignatorTargetLocation
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FVector                 ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FVector AGuidedDesignatorActor::GetDesignatorTargetLocation()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.GuidedDesignatorActor.GetDesignatorTargetLocation"));

	struct
	{
		struct FVector                 ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.HealthInterface.UnbindShieldsRepairedEvent
// (FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// struct FScriptDelegate         Event                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

void UHealthInterface::UnbindShieldsRepairedEvent(const struct FScriptDelegate& Event)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.UnbindShieldsRepairedEvent"));

	struct
	{
		struct FScriptDelegate         Event;
	} params = {};

	params.Event = Event;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.HealthInterface.UnbindShieldsDepletedEvent
// (FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// struct FScriptDelegate         Event                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

void UHealthInterface::UnbindShieldsDepletedEvent(const struct FScriptDelegate& Event)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.UnbindShieldsDepletedEvent"));

	struct
	{
		struct FScriptDelegate         Event;
	} params = {};

	params.Event = Event;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.HealthInterface.UnbindShieldsChangedEvent
// (FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// struct FScriptDelegate         Event                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

void UHealthInterface::UnbindShieldsChangedEvent(const struct FScriptDelegate& Event)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.UnbindShieldsChangedEvent"));

	struct
	{
		struct FScriptDelegate         Event;
	} params = {};

	params.Event = Event;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.HealthInterface.UnbindHealthChangedEvent
// (FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// struct FScriptDelegate         Event                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

void UHealthInterface::UnbindHealthChangedEvent(const struct FScriptDelegate& Event)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.UnbindHealthChangedEvent"));

	struct
	{
		struct FScriptDelegate         Event;
	} params = {};

	params.Event = Event;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.HealthInterface.UnbindHealedEvent
// (FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// struct FScriptDelegate         Event                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

void UHealthInterface::UnbindHealedEvent(const struct FScriptDelegate& Event)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.UnbindHealedEvent"));

	struct
	{
		struct FScriptDelegate         Event;
	} params = {};

	params.Event = Event;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.HealthInterface.UnbindDeathEvent
// (FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// struct FScriptDelegate         Event                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

void UHealthInterface::UnbindDeathEvent(const struct FScriptDelegate& Event)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.UnbindDeathEvent"));

	struct
	{
		struct FScriptDelegate         Event;
	} params = {};

	params.Event = Event;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.HealthInterface.UnbindDamageEvent
// (FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// struct FScriptDelegate         Event                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

void UHealthInterface::UnbindDamageEvent(const struct FScriptDelegate& Event)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.UnbindDamageEvent"));

	struct
	{
		struct FScriptDelegate         Event;
	} params = {};

	params.Event = Event;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.HealthInterface.SetShields
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          InShields                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UHealthInterface::SetShields(float InShields)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.SetShields"));

	struct
	{
		float                          InShields;
	} params = {};

	params.InShields = InShields;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.HealthInterface.SetShieldRegenRate
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          NewRate                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UHealthInterface::SetShieldRegenRate(float NewRate)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.SetShieldRegenRate"));

	struct
	{
		float                          NewRate;
	} params = {};

	params.NewRate = NewRate;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.HealthInterface.SetShieldAndHealthRegenRate
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          NewRate                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UHealthInterface::SetShieldAndHealthRegenRate(float NewRate)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.SetShieldAndHealthRegenRate"));

	struct
	{
		float                          NewRate;
	} params = {};

	params.NewRate = NewRate;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.HealthInterface.SetOvershield
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          NewOvershield                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UHealthInterface::SetOvershield(float NewOvershield)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.SetOvershield"));

	struct
	{
		float                          NewOvershield;
	} params = {};

	params.NewOvershield = NewOvershield;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.HealthInterface.SetMaxShields
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          NewMaxHealth                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UHealthInterface::SetMaxShields(float NewMaxHealth)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.SetMaxShields"));

	struct
	{
		float                          NewMaxHealth;
	} params = {};

	params.NewMaxHealth = NewMaxHealth;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.HealthInterface.SetMaxHealth
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          NewMaxHealth                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UHealthInterface::SetMaxHealth(float NewMaxHealth)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.SetMaxHealth"));

	struct
	{
		float                          NewMaxHealth;
	} params = {};

	params.NewMaxHealth = NewMaxHealth;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.HealthInterface.SetHealthRegenRate
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          NewRate                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UHealthInterface::SetHealthRegenRate(float NewRate)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.SetHealthRegenRate"));

	struct
	{
		float                          NewRate;
	} params = {};

	params.NewRate = NewRate;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.HealthInterface.SetHealthPickupModifier
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          NewModifier                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UHealthInterface::SetHealthPickupModifier(float NewModifier)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.SetHealthPickupModifier"));

	struct
	{
		float                          NewModifier;
	} params = {};

	params.NewModifier = NewModifier;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.HealthInterface.SetHealth
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          InHealth                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UHealthInterface::SetHealth(float InHealth)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.SetHealth"));

	struct
	{
		float                          InHealth;
	} params = {};

	params.InHealth = InHealth;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.HealthInterface.SetExplosiveDamageResistance
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          NewValue                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UHealthInterface::SetExplosiveDamageResistance(float NewValue)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.SetExplosiveDamageResistance"));

	struct
	{
		float                          NewValue;
	} params = {};

	params.NewValue = NewValue;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.HealthInterface.SetDamageResistance
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          NewValue                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UHealthInterface::SetDamageResistance(float NewValue)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.SetDamageResistance"));

	struct
	{
		float                          NewValue;
	} params = {};

	params.NewValue = NewValue;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.HealthInterface.SetCanUsePassiveShieldRegen
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bNewUsePassiveShieldRegen      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UHealthInterface::SetCanUsePassiveShieldRegen(bool bNewUsePassiveShieldRegen)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.SetCanUsePassiveShieldRegen"));

	struct
	{
		bool                           bNewUsePassiveShieldRegen;
	} params = {};

	params.bNewUsePassiveShieldRegen = bNewUsePassiveShieldRegen;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.HealthInterface.SetCanModifyShieldsPastOverchargeMark
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bNewCanOverchargeShields       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UHealthInterface::SetCanModifyShieldsPastOverchargeMark(bool bNewCanOverchargeShields)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.SetCanModifyShieldsPastOverchargeMark"));

	struct
	{
		bool                           bNewCanOverchargeShields;
	} params = {};

	params.bNewCanOverchargeShields = bNewCanOverchargeShields;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.HealthInterface.RemoveOverchargedShields
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void UHealthInterface::RemoveOverchargedShields()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.RemoveOverchargedShields"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.HealthInterface.ModifyShieldsThenHealth
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          Delta                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UHealthInterface::ModifyShieldsThenHealth(float Delta)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.ModifyShieldsThenHealth"));

	struct
	{
		float                          Delta;
	} params = {};

	params.Delta = Delta;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.HealthInterface.ModifyShields
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          Delta                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bCanOvercharge                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UHealthInterface::ModifyShields(float Delta, bool bCanOvercharge)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.ModifyShields"));

	struct
	{
		float                          Delta;
		bool                           bCanOvercharge;
	} params = {};

	params.Delta = Delta;
	params.bCanOvercharge = bCanOvercharge;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.HealthInterface.ModifyHealth
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          Delta                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UHealthInterface::ModifyHealth(float Delta)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.ModifyHealth"));

	struct
	{
		float                          Delta;
	} params = {};

	params.Delta = Delta;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.HealthInterface.IsUsingPassiveShieldRegen
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UHealthInterface::IsUsingPassiveShieldRegen()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.IsUsingPassiveShieldRegen"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.HealthInterface.IsHealthWithinGivenPercentage
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          TargetPercentage               (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bCheckForLessThanPercentage    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UHealthInterface::IsHealthWithinGivenPercentage(float TargetPercentage, bool bCheckForLessThanPercentage)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.IsHealthWithinGivenPercentage"));

	struct
	{
		float                          TargetPercentage;
		bool                           bCheckForLessThanPercentage;
		bool                           ReturnValue;
	} params = {};

	params.TargetPercentage = TargetPercentage;
	params.bCheckForLessThanPercentage = bCheckForLessThanPercentage;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.HealthInterface.IsHealthFull
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UHealthInterface::IsHealthFull()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.IsHealthFull"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.HealthInterface.IsDead
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UHealthInterface::IsDead()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.IsDead"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.HealthInterface.IsArmored
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UHealthInterface::IsArmored()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.IsArmored"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.HealthInterface.HasShieldsThatNeedRecharging
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UHealthInterface::HasShieldsThatNeedRecharging()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.HasShieldsThatNeedRecharging"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.HealthInterface.HasShields
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UHealthInterface::HasShields()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.HasShields"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.HealthInterface.HasRecentlyTakenDamage
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UHealthInterface::HasRecentlyTakenDamage()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.HasRecentlyTakenDamage"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.HealthInterface.GetTotalPercentHealth
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UHealthInterface::GetTotalPercentHealth()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.GetTotalPercentHealth"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.HealthInterface.GetTimeSinceLastDamage
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UHealthInterface::GetTimeSinceLastDamage()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.GetTimeSinceLastDamage"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.HealthInterface.GetShieldsRepairedEvent
// (FUNC_Native, FUNC_Public)
// Parameters:
// struct FMulticastScriptDelegate ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_NativeAccessSpecifierPublic)

struct FMulticastScriptDelegate UHealthInterface::GetShieldsRepairedEvent()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.GetShieldsRepairedEvent"));

	struct
	{
		struct FMulticastScriptDelegate ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.HealthInterface.GetShieldsDepletedEvent
// (FUNC_Native, FUNC_Public)
// Parameters:
// struct FMulticastScriptDelegate ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_NativeAccessSpecifierPublic)

struct FMulticastScriptDelegate UHealthInterface::GetShieldsDepletedEvent()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.GetShieldsDepletedEvent"));

	struct
	{
		struct FMulticastScriptDelegate ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.HealthInterface.GetShieldsChangedEvent
// (FUNC_Native, FUNC_Public)
// Parameters:
// struct FMulticastScriptDelegate ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_NativeAccessSpecifierPublic)

struct FMulticastScriptDelegate UHealthInterface::GetShieldsChangedEvent()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.GetShieldsChangedEvent"));

	struct
	{
		struct FMulticastScriptDelegate ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.HealthInterface.GetShields
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UHealthInterface::GetShields()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.GetShields"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.HealthInterface.GetPercentShields
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UHealthInterface::GetPercentShields()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.GetPercentShields"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.HealthInterface.GetPercentOverchargedShields
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UHealthInterface::GetPercentOverchargedShields()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.GetPercentOverchargedShields"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.HealthInterface.GetPercentHealth
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UHealthInterface::GetPercentHealth()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.GetPercentHealth"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.HealthInterface.GetOvershield
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UHealthInterface::GetOvershield()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.GetOvershield"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.HealthInterface.GetMaxShieldsWithOvercharge
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UHealthInterface::GetMaxShieldsWithOvercharge()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.GetMaxShieldsWithOvercharge"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.HealthInterface.GetMaxShields
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UHealthInterface::GetMaxShields()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.GetMaxShields"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.HealthInterface.GetMaxHealth
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UHealthInterface::GetMaxHealth()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.GetMaxHealth"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.HealthInterface.GetHealthPickupModifier
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UHealthInterface::GetHealthPickupModifier()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.GetHealthPickupModifier"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.HealthInterface.GetHealthChangedEvent
// (FUNC_Native, FUNC_Public)
// Parameters:
// struct FMulticastScriptDelegate ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_NativeAccessSpecifierPublic)

struct FMulticastScriptDelegate UHealthInterface::GetHealthChangedEvent()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.GetHealthChangedEvent"));

	struct
	{
		struct FMulticastScriptDelegate ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.HealthInterface.GetHealth
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UHealthInterface::GetHealth()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.GetHealth"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.HealthInterface.GetHealedEvent
// (FUNC_Native, FUNC_Public)
// Parameters:
// struct FMulticastScriptDelegate ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_NativeAccessSpecifierPublic)

struct FMulticastScriptDelegate UHealthInterface::GetHealedEvent()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.GetHealedEvent"));

	struct
	{
		struct FMulticastScriptDelegate ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.HealthInterface.GetExplosiveDamageResistance
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UHealthInterface::GetExplosiveDamageResistance()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.GetExplosiveDamageResistance"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.HealthInterface.GetDeathEvent
// (FUNC_Native, FUNC_Public)
// Parameters:
// struct FMulticastScriptDelegate ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_NativeAccessSpecifierPublic)

struct FMulticastScriptDelegate UHealthInterface::GetDeathEvent()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.GetDeathEvent"));

	struct
	{
		struct FMulticastScriptDelegate ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.HealthInterface.GetDamageResistance
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UHealthInterface::GetDamageResistance()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.GetDamageResistance"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.HealthInterface.GetDamageEvent
// (FUNC_Native, FUNC_Public)
// Parameters:
// struct FMulticastScriptDelegate ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_NativeAccessSpecifierPublic)

struct FMulticastScriptDelegate UHealthInterface::GetDamageEvent()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.GetDamageEvent"));

	struct
	{
		struct FMulticastScriptDelegate ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.HealthInterface.GetCachedUsesPassiveShieldRegen
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UHealthInterface::GetCachedUsesPassiveShieldRegen()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.GetCachedUsesPassiveShieldRegen"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.HealthInterface.GetCachedOvershield
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UHealthInterface::GetCachedOvershield()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.GetCachedOvershield"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.HealthInterface.GetCachedMaxShields
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UHealthInterface::GetCachedMaxShields()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.GetCachedMaxShields"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.HealthInterface.GetCachedMaxHealth
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UHealthInterface::GetCachedMaxHealth()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.GetCachedMaxHealth"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.HealthInterface.GetAfflictionComponent
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UAfflictionComponent*    ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UAfflictionComponent* UHealthInterface::GetAfflictionComponent()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.GetAfflictionComponent"));

	struct
	{
		class UAfflictionComponent*    ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.HealthInterface.ClearAllToDeathEvents
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void UHealthInterface::ClearAllToDeathEvents()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.ClearAllToDeathEvents"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.HealthInterface.ClearAllShieldsRepairedEvents
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void UHealthInterface::ClearAllShieldsRepairedEvents()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.ClearAllShieldsRepairedEvents"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.HealthInterface.ClearAllShieldsDepletedEvents
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void UHealthInterface::ClearAllShieldsDepletedEvents()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.ClearAllShieldsDepletedEvents"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.HealthInterface.ClearAllShieldsChangedEvents
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void UHealthInterface::ClearAllShieldsChangedEvents()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.ClearAllShieldsChangedEvents"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.HealthInterface.ClearAllHealthChangedEvents
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void UHealthInterface::ClearAllHealthChangedEvents()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.ClearAllHealthChangedEvents"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.HealthInterface.ClearAllHealedEvents
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void UHealthInterface::ClearAllHealedEvents()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.ClearAllHealedEvents"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.HealthInterface.ClearAllDamageEvents
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void UHealthInterface::ClearAllDamageEvents()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.ClearAllDamageEvents"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.HealthInterface.CanModifyShieldsPastOverchargeMark
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UHealthInterface::CanModifyShieldsPastOverchargeMark()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.CanModifyShieldsPastOverchargeMark"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.HealthInterface.CanBeRepaired
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AActor*                  RepairInstigator               (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UHealthInterface::CanBeRepaired(class AActor* RepairInstigator)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.CanBeRepaired"));

	struct
	{
		class AActor*                  RepairInstigator;
		bool                           ReturnValue;
	} params = {};

	params.RepairInstigator = RepairInstigator;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.HealthInterface.BlocksExplosions
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UHealthInterface::BlocksExplosions()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.BlocksExplosions"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.HealthInterface.BindToShieldsRepairedEvent
// (FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// struct FScriptDelegate         Event                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

void UHealthInterface::BindToShieldsRepairedEvent(const struct FScriptDelegate& Event)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.BindToShieldsRepairedEvent"));

	struct
	{
		struct FScriptDelegate         Event;
	} params = {};

	params.Event = Event;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.HealthInterface.BindToShieldsDepletedEvent
// (FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// struct FScriptDelegate         Event                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

void UHealthInterface::BindToShieldsDepletedEvent(const struct FScriptDelegate& Event)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.BindToShieldsDepletedEvent"));

	struct
	{
		struct FScriptDelegate         Event;
	} params = {};

	params.Event = Event;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.HealthInterface.BindToShieldsChangedEvent
// (FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// struct FScriptDelegate         Event                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

void UHealthInterface::BindToShieldsChangedEvent(const struct FScriptDelegate& Event)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.BindToShieldsChangedEvent"));

	struct
	{
		struct FScriptDelegate         Event;
	} params = {};

	params.Event = Event;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.HealthInterface.BindToHealthChangedEvent
// (FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// struct FScriptDelegate         Event                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

void UHealthInterface::BindToHealthChangedEvent(const struct FScriptDelegate& Event)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.BindToHealthChangedEvent"));

	struct
	{
		struct FScriptDelegate         Event;
	} params = {};

	params.Event = Event;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.HealthInterface.BindToHealedEvent
// (FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// struct FScriptDelegate         Event                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

void UHealthInterface::BindToHealedEvent(const struct FScriptDelegate& Event)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.BindToHealedEvent"));

	struct
	{
		struct FScriptDelegate         Event;
	} params = {};

	params.Event = Event;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.HealthInterface.BindToDeathEvent
// (FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// struct FScriptDelegate         Event                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

void UHealthInterface::BindToDeathEvent(const struct FScriptDelegate& Event)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.BindToDeathEvent"));

	struct
	{
		struct FScriptDelegate         Event;
	} params = {};

	params.Event = Event;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.HealthInterface.BindToDamageEvent
// (FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// struct FScriptDelegate         Event                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

void UHealthInterface::BindToDamageEvent(const struct FScriptDelegate& Event)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.BindToDamageEvent"));

	struct
	{
		struct FScriptDelegate         Event;
	} params = {};

	params.Event = Event;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.HealthInterface.AreShieldsOvercharged
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UHealthInterface::AreShieldsOvercharged()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.AreShieldsOvercharged"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.HealthInterface.AreShieldsFull
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UHealthInterface::AreShieldsFull()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HealthInterface.AreShieldsFull"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.HookshotComponent.Server_Unreliable_SetHookedLocation
// (FUNC_Net, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetServer, FUNC_HasDefaults)
// Parameters:
// struct FVector                 HookedLocation                 (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UHookshotComponent::Server_Unreliable_SetHookedLocation(const struct FVector& HookedLocation)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HookshotComponent.Server_Unreliable_SetHookedLocation"));

	struct
	{
		struct FVector                 HookedLocation;
	} params = {};

	params.HookedLocation = HookedLocation;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.HookshotComponent.OnRep_HookedLocation
// (FUNC_Native, FUNC_Protected)

void UHookshotComponent::OnRep_HookedLocation()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HookshotComponent.OnRep_HookedLocation"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.HookshotComponent.OnComponentHit
// (FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_HasDefaults)
// Parameters:
// class UPrimitiveComponent*     HitComponent                   (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FVector                 NormalImpulse                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FHitResult              Hit                            (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

void UHookshotComponent::OnComponentHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HookshotComponent.OnComponentHit"));

	struct
	{
		class UPrimitiveComponent*     HitComponent;
		class AActor*                  OtherActor;
		class UPrimitiveComponent*     OtherComp;
		struct FVector                 NormalImpulse;
		struct FHitResult              Hit;
	} params = {};

	params.HitComponent = HitComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.HookshotComponent.GetHookshotLocation
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FVector                 ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FVector UHookshotComponent::GetHookshotLocation()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HookshotComponent.GetHookshotLocation"));

	struct
	{
		struct FVector                 ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.HookshotComponent.GetHookedComponent
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UPrimitiveComponent*     ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UPrimitiveComponent* UHookshotComponent::GetHookedComponent()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HookshotComponent.GetHookedComponent"));

	struct
	{
		class UPrimitiveComponent*     ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.HookshotComponent.CheckCustomMovementToggle
// (FUNC_Native, FUNC_Protected)
// Parameters:
// ECustomMovementType            CustomMovementType             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bToggledState                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UHookshotComponent::CheckCustomMovementToggle(ECustomMovementType CustomMovementType, bool bToggledState)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.HookshotComponent.CheckCustomMovementToggle"));

	struct
	{
		ECustomMovementType            CustomMovementType;
		bool                           bToggledState;
	} params = {};

	params.CustomMovementType = CustomMovementType;
	params.bToggledState = bToggledState;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.InputRebindingNodes.ResetToDefault
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UDataTable*              InActionMapDataTable           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UDataTable*              InAxisMapDataTable             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UInputRebindingNodes::ResetToDefault(class UDataTable* InActionMapDataTable, class UDataTable* InAxisMapDataTable)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.InputRebindingNodes.ResetToDefault"));

	struct
	{
		class UDataTable*              InActionMapDataTable;
		class UDataTable*              InAxisMapDataTable;
	} params = {};

	params.InActionMapDataTable = InActionMapDataTable;
	params.InAxisMapDataTable = InAxisMapDataTable;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.InputRebindingNodes.RemoveAxisMapping
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// struct FInputAxisMappingStruct MappingData                    (CPF_Parm, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UInputRebindingNodes::RemoveAxisMapping(const struct FInputAxisMappingStruct& MappingData, bool* ReturnValue)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.InputRebindingNodes.RemoveAxisMapping"));

	struct
	{
		struct FInputAxisMappingStruct MappingData;
		bool                           ReturnValue;
	} params = {};

	params.MappingData = MappingData;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	if (ReturnValue != nullptr)
		*ReturnValue = params.ReturnValue;
}


// Function ProjectX.InputRebindingNodes.RemoveActionMapping
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// struct FInputActionMappingStruct MappingData                    (CPF_Parm, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UInputRebindingNodes::RemoveActionMapping(const struct FInputActionMappingStruct& MappingData, bool* ReturnValue)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.InputRebindingNodes.RemoveActionMapping"));

	struct
	{
		struct FInputActionMappingStruct MappingData;
		bool                           ReturnValue;
	} params = {};

	params.MappingData = MappingData;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	if (ReturnValue != nullptr)
		*ReturnValue = params.ReturnValue;
}


// Function ProjectX.InputRebindingNodes.RebindAxisMapping
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// struct FInputAxisMappingStruct AxisMapping                    (CPF_Parm, CPF_NativeAccessSpecifierPublic)
// struct FInputAxisMappingStruct NewData                        (CPF_Parm, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UInputRebindingNodes::RebindAxisMapping(const struct FInputAxisMappingStruct& AxisMapping, const struct FInputAxisMappingStruct& NewData, bool* ReturnValue)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.InputRebindingNodes.RebindAxisMapping"));

	struct
	{
		struct FInputAxisMappingStruct AxisMapping;
		struct FInputAxisMappingStruct NewData;
		bool                           ReturnValue;
	} params = {};

	params.AxisMapping = AxisMapping;
	params.NewData = NewData;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	if (ReturnValue != nullptr)
		*ReturnValue = params.ReturnValue;
}


// Function ProjectX.InputRebindingNodes.RebindActionMapping
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// struct FInputActionMappingStruct ActionMapping                  (CPF_Parm, CPF_NativeAccessSpecifierPublic)
// struct FInputActionMappingStruct NewData                        (CPF_Parm, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UInputRebindingNodes::RebindActionMapping(const struct FInputActionMappingStruct& ActionMapping, const struct FInputActionMappingStruct& NewData, bool* ReturnValue)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.InputRebindingNodes.RebindActionMapping"));

	struct
	{
		struct FInputActionMappingStruct ActionMapping;
		struct FInputActionMappingStruct NewData;
		bool                           ReturnValue;
	} params = {};

	params.ActionMapping = ActionMapping;
	params.NewData = NewData;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	if (ReturnValue != nullptr)
		*ReturnValue = params.ReturnValue;
}


// Function ProjectX.InputRebindingNodes.GetMouseButtonPressed
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// struct FPointerEvent           Event                          (CPF_Parm, CPF_NativeAccessSpecifierPublic)
// bool                           ValidMouseButton               (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FKey                    ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FKey UInputRebindingNodes::GetMouseButtonPressed(const struct FPointerEvent& Event, bool* ValidMouseButton)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.InputRebindingNodes.GetMouseButtonPressed"));

	struct
	{
		struct FPointerEvent           Event;
		bool                           ValidMouseButton;
		struct FKey                    ReturnValue;
	} params = {};

	params.Event = Event;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	if (ValidMouseButton != nullptr)
		*ValidMouseButton = params.ValidMouseButton;

	return params.ReturnValue;
}


// Function ProjectX.InputRebindingNodes.GetAllAxisMappings
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// struct FInputAxisMappingStruct FilterData                     (CPF_Parm, CPF_NativeAccessSpecifierPublic)
// TArray<EAxisMappingFilter>     Filters                        (CPF_Parm, CPF_ZeroConstructor, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TArray<struct FInputAxisMappingStruct> AxisMappings                   (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_NativeAccessSpecifierPublic)

void UInputRebindingNodes::GetAllAxisMappings(const struct FInputAxisMappingStruct& FilterData, TArray<EAxisMappingFilter> Filters, bool* ReturnValue, TArray<struct FInputAxisMappingStruct>* AxisMappings)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.InputRebindingNodes.GetAllAxisMappings"));

	struct
	{
		struct FInputAxisMappingStruct FilterData;
		TArray<EAxisMappingFilter>     Filters;
		bool                           ReturnValue;
		TArray<struct FInputAxisMappingStruct> AxisMappings;
	} params = {};

	params.FilterData = FilterData;
	params.Filters = Filters;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	if (ReturnValue != nullptr)
		*ReturnValue = params.ReturnValue;
	if (AxisMappings != nullptr)
		*AxisMappings = params.AxisMappings;
}


// Function ProjectX.InputRebindingNodes.GetAllActionMappings
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// struct FInputActionMappingStruct FilterData                     (CPF_Parm, CPF_NativeAccessSpecifierPublic)
// TArray<EActionMappingFilter>   Filters                        (CPF_Parm, CPF_ZeroConstructor, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TArray<struct FInputActionMappingStruct> ActionMappings                 (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_NativeAccessSpecifierPublic)

void UInputRebindingNodes::GetAllActionMappings(const struct FInputActionMappingStruct& FilterData, TArray<EActionMappingFilter> Filters, bool* ReturnValue, TArray<struct FInputActionMappingStruct>* ActionMappings)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.InputRebindingNodes.GetAllActionMappings"));

	struct
	{
		struct FInputActionMappingStruct FilterData;
		TArray<EActionMappingFilter>   Filters;
		bool                           ReturnValue;
		TArray<struct FInputActionMappingStruct> ActionMappings;
	} params = {};

	params.FilterData = FilterData;
	params.Filters = Filters;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	if (ReturnValue != nullptr)
		*ReturnValue = params.ReturnValue;
	if (ActionMappings != nullptr)
		*ActionMappings = params.ActionMappings;
}


// Function ProjectX.InputRebindingNodes.CreateNewAxisMapping
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// struct FInputAxisMappingStruct MappingData                    (CPF_Parm, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UInputRebindingNodes::CreateNewAxisMapping(const struct FInputAxisMappingStruct& MappingData, bool* ReturnValue)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.InputRebindingNodes.CreateNewAxisMapping"));

	struct
	{
		struct FInputAxisMappingStruct MappingData;
		bool                           ReturnValue;
	} params = {};

	params.MappingData = MappingData;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	if (ReturnValue != nullptr)
		*ReturnValue = params.ReturnValue;
}


// Function ProjectX.InputRebindingNodes.CreateNewActionMapping
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// struct FInputActionMappingStruct MappingData                    (CPF_Parm, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UInputRebindingNodes::CreateNewActionMapping(const struct FInputActionMappingStruct& MappingData, bool* ReturnValue)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.InputRebindingNodes.CreateNewActionMapping"));

	struct
	{
		struct FInputActionMappingStruct MappingData;
		bool                           ReturnValue;
	} params = {};

	params.MappingData = MappingData;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	if (ReturnValue != nullptr)
		*ReturnValue = params.ReturnValue;
}


// Function ProjectX.InputRebindingNodes.AxisMappingNotEqualActionMapping
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// struct FInputAxisMappingStruct A                              (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// struct FInputAxisMappingStruct B                              (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UInputRebindingNodes::AxisMappingNotEqualActionMapping(const struct FInputAxisMappingStruct& A, const struct FInputAxisMappingStruct& B)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.InputRebindingNodes.AxisMappingNotEqualActionMapping"));

	struct
	{
		struct FInputAxisMappingStruct A;
		struct FInputAxisMappingStruct B;
		bool                           ReturnValue;
	} params = {};

	params.A = A;
	params.B = B;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.InputRebindingNodes.AxisMappingEqualActionMapping
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// struct FInputAxisMappingStruct A                              (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// struct FInputAxisMappingStruct B                              (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UInputRebindingNodes::AxisMappingEqualActionMapping(const struct FInputAxisMappingStruct& A, const struct FInputAxisMappingStruct& B)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.InputRebindingNodes.AxisMappingEqualActionMapping"));

	struct
	{
		struct FInputAxisMappingStruct A;
		struct FInputAxisMappingStruct B;
		bool                           ReturnValue;
	} params = {};

	params.A = A;
	params.B = B;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.InputRebindingNodes.ActionMappingNotEqualActionMapping
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// struct FInputActionMappingStruct A                              (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// struct FInputActionMappingStruct B                              (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UInputRebindingNodes::ActionMappingNotEqualActionMapping(const struct FInputActionMappingStruct& A, const struct FInputActionMappingStruct& B)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.InputRebindingNodes.ActionMappingNotEqualActionMapping"));

	struct
	{
		struct FInputActionMappingStruct A;
		struct FInputActionMappingStruct B;
		bool                           ReturnValue;
	} params = {};

	params.A = A;
	params.B = B;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.InputRebindingNodes.ActionMappingEqualActionMapping
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// struct FInputActionMappingStruct A                              (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// struct FInputActionMappingStruct B                              (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UInputRebindingNodes::ActionMappingEqualActionMapping(const struct FInputActionMappingStruct& A, const struct FInputActionMappingStruct& B)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.InputRebindingNodes.ActionMappingEqualActionMapping"));

	struct
	{
		struct FInputActionMappingStruct A;
		struct FInputActionMappingStruct B;
		bool                           ReturnValue;
	} params = {};

	params.A = A;
	params.B = B;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.InteractableComponent.SetInteractionType
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// EInteractionType               NewInteractionType             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UInteractableComponent::SetInteractionType(EInteractionType NewInteractionType)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.InteractableComponent.SetInteractionType"));

	struct
	{
		EInteractionType               NewInteractionType;
	} params = {};

	params.NewInteractionType = NewInteractionType;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.InteractableComponent.SetHighlightText
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// struct FText                   NewHighlightText               (CPF_Parm, CPF_NativeAccessSpecifierPublic)

void UInteractableComponent::SetHighlightText(const struct FText& NewHighlightText)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.InteractableComponent.SetHighlightText"));

	struct
	{
		struct FText                   NewHighlightText;
	} params = {};

	params.NewHighlightText = NewHighlightText;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.InteractableComponent.SetHighlightable
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bHighlightable                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UInteractableComponent::SetHighlightable(bool bHighlightable)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.InteractableComponent.SetHighlightable"));

	struct
	{
		bool                           bHighlightable;
	} params = {};

	params.bHighlightable = bHighlightable;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.InteractableComponent.RequiresHoldInteraction
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UInteractableComponent::RequiresHoldInteraction()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.InteractableComponent.RequiresHoldInteraction"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.InteractableComponent.HasHoldInteraction
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UInteractableComponent::HasHoldInteraction()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.InteractableComponent.HasHoldInteraction"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.InteractableComponent.GetHoldTime
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UInteractableComponent::GetHoldTime()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.InteractableComponent.GetHoldTime"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.InteractableComponent.GetHighlightText
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UPrimitiveComponent*     Component                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class APlayerController*       EventSender                    (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FText                   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_NativeAccessSpecifierPublic)

struct FText UInteractableComponent::GetHighlightText(class UPrimitiveComponent* Component, class APlayerController* EventSender)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.InteractableComponent.GetHighlightText"));

	struct
	{
		class UPrimitiveComponent*     Component;
		class APlayerController*       EventSender;
		struct FText                   ReturnValue;
	} params = {};

	params.Component = Component;
	params.EventSender = EventSender;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.InteractableComponent.CanInteract
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UInteractableComponent::CanInteract()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.InteractableComponent.CanInteract"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.InteractableComponent.CanHighlight
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UPrimitiveComponent*     Component                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UInteractableComponent::CanHighlight(class UPrimitiveComponent* Component)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.InteractableComponent.CanHighlight"));

	struct
	{
		class UPrimitiveComponent*     Component;
		bool                           ReturnValue;
	} params = {};

	params.Component = Component;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.InteractableInterface.GetHighlightText
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UPrimitiveComponent*     Component                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class APlayerController*       EventSender                    (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FText                   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_NativeAccessSpecifierPublic)

struct FText UInteractableInterface::GetHighlightText(class UPrimitiveComponent* Component, class APlayerController* EventSender)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.InteractableInterface.GetHighlightText"));

	struct
	{
		class UPrimitiveComponent*     Component;
		class APlayerController*       EventSender;
		struct FText                   ReturnValue;
	} params = {};

	params.Component = Component;
	params.EventSender = EventSender;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.InteractionComponent.StopInteract
// (FUNC_Final, FUNC_Native, FUNC_Private)

void UInteractionComponent::StopInteract()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.InteractionComponent.StopInteract"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.InteractionComponent.Server_StopHold
// (FUNC_Final, FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Private, FUNC_NetServer, FUNC_NetValidate)

void UInteractionComponent::Server_StopHold()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.InteractionComponent.Server_StopHold"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.InteractionComponent.Server_Select
// (FUNC_Final, FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Private, FUNC_NetServer, FUNC_NetValidate)
// Parameters:
// class UInteractableComponent*  HitInteractable                (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     HitComponent                   (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UInteractionComponent::Server_Select(class UInteractableComponent* HitInteractable, class UPrimitiveComponent* HitComponent)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.InteractionComponent.Server_Select"));

	struct
	{
		class UInteractableComponent*  HitInteractable;
		class UPrimitiveComponent*     HitComponent;
	} params = {};

	params.HitInteractable = HitInteractable;
	params.HitComponent = HitComponent;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.InteractionComponent.Server_Hold
// (FUNC_Final, FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Private, FUNC_NetServer, FUNC_NetValidate)
// Parameters:
// class UInteractableComponent*  HitInteractable                (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     HitComponent                   (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UInteractionComponent::Server_Hold(class UInteractableComponent* HitInteractable, class UPrimitiveComponent* HitComponent)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.InteractionComponent.Server_Hold"));

	struct
	{
		class UInteractableComponent*  HitInteractable;
		class UPrimitiveComponent*     HitComponent;
	} params = {};

	params.HitInteractable = HitInteractable;
	params.HitComponent = HitComponent;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.InteractionComponent.Interact
// (FUNC_Final, FUNC_Native, FUNC_Private)

void UInteractionComponent::Interact()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.InteractionComponent.Interact"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.InteractionComponent.FinishHoldInteract
// (FUNC_Final, FUNC_Native, FUNC_Private)
// Parameters:
// class UInteractableComponent*  HitInteractable                (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     HitComponent                   (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UInteractionComponent::FinishHoldInteract(class UInteractableComponent* HitInteractable, class UPrimitiveComponent* HitComponent)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.InteractionComponent.FinishHoldInteract"));

	struct
	{
		class UInteractableComponent*  HitInteractable;
		class UPrimitiveComponent*     HitComponent;
	} params = {};

	params.HitInteractable = HitInteractable;
	params.HitComponent = HitComponent;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.InteractionComponent.ClearHoldInteract
// (FUNC_Final, FUNC_Native, FUNC_Private)

void UInteractionComponent::ClearHoldInteract()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.InteractionComponent.ClearHoldInteract"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.InteriorVolume.OnComponentEndOverlap
// (FUNC_Final, FUNC_Native, FUNC_Private)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AInteriorVolume::OnComponentEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.InteriorVolume.OnComponentEndOverlap"));

	struct
	{
		class UPrimitiveComponent*     OverlappedComponent;
		class AActor*                  OtherActor;
		class UPrimitiveComponent*     OtherComp;
		int                            OtherBodyIndex;
	} params = {};

	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.InteriorVolume.OnComponentBeginOverlap
// (FUNC_Final, FUNC_Native, FUNC_Private, FUNC_HasOutParms)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bFromSweep                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FHitResult              SweepResult                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

void AInteriorVolume::OnComponentBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.InteriorVolume.OnComponentBeginOverlap"));

	struct
	{
		class UPrimitiveComponent*     OverlappedComponent;
		class AActor*                  OtherActor;
		class UPrimitiveComponent*     OtherComp;
		int                            OtherBodyIndex;
		bool                           bFromSweep;
		struct FHitResult              SweepResult;
	} params = {};

	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.Interpolator.IsInterpolationActive
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 Caller                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            ID                             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AInterpolator::IsInterpolationActive(class UObject* Caller, int ID)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Interpolator.IsInterpolationActive"));

	struct
	{
		class UObject*                 Caller;
		int                            ID;
		bool                           ReturnValue;
	} params = {};

	params.Caller = Caller;
	params.ID = ID;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.Interpolator.InvertInterpolator
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UObject*                 Caller                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            ID                             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AInterpolator::InvertInterpolator(class UObject* Caller, int ID)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Interpolator.InvertInterpolator"));

	struct
	{
		class UObject*                 Caller;
		int                            ID;
	} params = {};

	params.Caller = Caller;
	params.ID = ID;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.Interpolator.InterpolateOverTimeSimple
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          TimeTotal                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TEnumAsByte<EEasingFunc>       EaseType                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FScriptDelegate         Event                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
// struct FScriptDelegate         OnCompleteEvent                (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int AInterpolator::InterpolateOverTimeSimple(class UObject* WorldContextObject, float TimeTotal, TEnumAsByte<EEasingFunc> EaseType, const struct FScriptDelegate& Event, const struct FScriptDelegate& OnCompleteEvent)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Interpolator.InterpolateOverTimeSimple"));

	struct
	{
		class UObject*                 WorldContextObject;
		float                          TimeTotal;
		TEnumAsByte<EEasingFunc>       EaseType;
		struct FScriptDelegate         Event;
		struct FScriptDelegate         OnCompleteEvent;
		int                            ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.TimeTotal = TimeTotal;
	params.EaseType = EaseType;
	params.Event = Event;
	params.OnCompleteEvent = OnCompleteEvent;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.Interpolator.InterpolateOverTimeCustomCurve
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          TimeElapsed                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          TimeTotal                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          Start                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          End                            (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UCurveFloat*             Curve                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FScriptDelegate         Event                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
// struct FScriptDelegate         OnCompleteEvent                (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int AInterpolator::InterpolateOverTimeCustomCurve(class UObject* WorldContextObject, float TimeElapsed, float TimeTotal, float Start, float End, class UCurveFloat* Curve, const struct FScriptDelegate& Event, const struct FScriptDelegate& OnCompleteEvent)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Interpolator.InterpolateOverTimeCustomCurve"));

	struct
	{
		class UObject*                 WorldContextObject;
		float                          TimeElapsed;
		float                          TimeTotal;
		float                          Start;
		float                          End;
		class UCurveFloat*             Curve;
		struct FScriptDelegate         Event;
		struct FScriptDelegate         OnCompleteEvent;
		int                            ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.TimeElapsed = TimeElapsed;
	params.TimeTotal = TimeTotal;
	params.Start = Start;
	params.End = End;
	params.Curve = Curve;
	params.Event = Event;
	params.OnCompleteEvent = OnCompleteEvent;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.Interpolator.InterpolateOverTime
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          TimeElapsed                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          TimeTotal                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          Start                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          End                            (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TEnumAsByte<EEasingFunc>       EaseType                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FScriptDelegate         Event                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
// struct FScriptDelegate         OnCompleteEvent                (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int AInterpolator::InterpolateOverTime(class UObject* WorldContextObject, float TimeElapsed, float TimeTotal, float Start, float End, TEnumAsByte<EEasingFunc> EaseType, const struct FScriptDelegate& Event, const struct FScriptDelegate& OnCompleteEvent)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Interpolator.InterpolateOverTime"));

	struct
	{
		class UObject*                 WorldContextObject;
		float                          TimeElapsed;
		float                          TimeTotal;
		float                          Start;
		float                          End;
		TEnumAsByte<EEasingFunc>       EaseType;
		struct FScriptDelegate         Event;
		struct FScriptDelegate         OnCompleteEvent;
		int                            ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.TimeElapsed = TimeElapsed;
	params.TimeTotal = TimeTotal;
	params.Start = Start;
	params.End = End;
	params.EaseType = EaseType;
	params.Event = Event;
	params.OnCompleteEvent = OnCompleteEvent;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.Interpolator.CompleteInterpolation
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UObject*                 Caller                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            ID                             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AInterpolator::CompleteInterpolation(class UObject* Caller, int ID)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Interpolator.CompleteInterpolation"));

	struct
	{
		class UObject*                 Caller;
		int                            ID;
	} params = {};

	params.Caller = Caller;
	params.ID = ID;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.Interpolator.ClearInterpolatorsForObject
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UObject*                 Object                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AInterpolator::ClearInterpolatorsForObject(class UObject* Object)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Interpolator.ClearInterpolatorsForObject"));

	struct
	{
		class UObject*                 Object;
	} params = {};

	params.Object = Object;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.Interpolator.ClearInterpolation
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UObject*                 Caller                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            ID                             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AInterpolator::ClearInterpolation(class UObject* Caller, int ID)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Interpolator.ClearInterpolation"));

	struct
	{
		class UObject*                 Caller;
		int                            ID;
	} params = {};

	params.Caller = Caller;
	params.ID = ID;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.JetPackComponent.OnRep_JetPackEnabled
// (FUNC_Native, FUNC_Protected)

void UJetPackComponent::OnRep_JetPackEnabled()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.JetPackComponent.OnRep_JetPackEnabled"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.JetPackComponent.IsEnabled
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UJetPackComponent::IsEnabled()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.JetPackComponent.IsEnabled"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.JetPackComponent.CheckCustomMovementToggle
// (FUNC_Native, FUNC_Protected)
// Parameters:
// ECustomMovementType            CustomMovementType             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bToggledState                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UJetPackComponent::CheckCustomMovementToggle(ECustomMovementType CustomMovementType, bool bToggledState)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.JetPackComponent.CheckCustomMovementToggle"));

	struct
	{
		ECustomMovementType            CustomMovementType;
		bool                           bToggledState;
	} params = {};

	params.CustomMovementType = CustomMovementType;
	params.bToggledState = bToggledState;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.KillCameraActor.UpdateSpringArmLength
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          Length                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AKillCameraActor::UpdateSpringArmLength(float Length)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.KillCameraActor.UpdateSpringArmLength"));

	struct
	{
		float                          Length;
	} params = {};

	params.Length = Length;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.KillCameraActor.SetWidgetPlacementPivot
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasDefaults, FUNC_BlueprintCallable)
// Parameters:
// struct FVector                 NewWidgetPlacementPivot        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AKillCameraActor::SetWidgetPlacementPivot(const struct FVector& NewWidgetPlacementPivot)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.KillCameraActor.SetWidgetPlacementPivot"));

	struct
	{
		struct FVector                 NewWidgetPlacementPivot;
	} params = {};

	params.NewWidgetPlacementPivot = NewWidgetPlacementPivot;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.KillCameraActor.SetKillerPivotPoint
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasDefaults, FUNC_BlueprintCallable)
// Parameters:
// struct FVector                 NewPivotPoint                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AKillCameraActor::SetKillerPivotPoint(const struct FVector& NewPivotPoint)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.KillCameraActor.SetKillerPivotPoint"));

	struct
	{
		struct FVector                 NewPivotPoint;
	} params = {};

	params.NewPivotPoint = NewPivotPoint;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.KillCameraActor.OnKillerFocused
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)

void AKillCameraActor::OnKillerFocused()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.KillCameraActor.OnKillerFocused"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.KillCameraActor.KillerFocused
// (FUNC_Final, FUNC_Native, FUNC_Public)

void AKillCameraActor::KillerFocused()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.KillCameraActor.KillerFocused"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.KillCameraActor.InitializeKillCameraActor
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent, FUNC_Const)
// Parameters:
// class AProjectXCharacter*      Killed                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  Killer                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AProjectXPlayerState*    KillerState                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UClass* /*UDamageType*/  DamageType                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AKillCameraActor::InitializeKillCameraActor(class AProjectXCharacter* Killed, class AActor* Killer, class AProjectXPlayerState* KillerState, class UClass* /*UDamageType*/ DamageType)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.KillCameraActor.InitializeKillCameraActor"));

	struct
	{
		class AProjectXCharacter*      Killed;
		class AActor*                  Killer;
		class AProjectXPlayerState*    KillerState;
		class UClass* /*UDamageType*/  DamageType;
	} params = {};

	params.Killed = Killed;
	params.Killer = Killer;
	params.KillerState = KillerState;
	params.DamageType = DamageType;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.KillCameraActor.GetSpringArm
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class USpringArmComponent*     ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class USpringArmComponent* AKillCameraActor::GetSpringArm()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.KillCameraActor.GetSpringArm"));

	struct
	{
		class USpringArmComponent*     ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.KillCameraActor.GetSnapShotPose
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FPoseSnapshot           ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)

struct FPoseSnapshot AKillCameraActor::GetSnapShotPose()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.KillCameraActor.GetSnapShotPose"));

	struct
	{
		struct FPoseSnapshot           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.KillCameraActor.GetCamera
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UCameraComponent*        ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UCameraComponent* AKillCameraActor::GetCamera()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.KillCameraActor.GetCamera"));

	struct
	{
		class UCameraComponent*        ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.KillCameraComponent.OnSpectatorPawnAvailable
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent, FUNC_Const)
// Parameters:
// class ASpectatorPawn*          SpectatorPawn                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UKillCameraComponent::OnSpectatorPawnAvailable(class ASpectatorPawn* SpectatorPawn)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.KillCameraComponent.OnSpectatorPawnAvailable"));

	struct
	{
		class ASpectatorPawn*          SpectatorPawn;
	} params = {};

	params.SpectatorPawn = SpectatorPawn;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.KillCameraComponent.OnKillCameraInitialized
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent, FUNC_Const)
// Parameters:
// class AProjectXCharacter*      Killed                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  Killer                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AProjectXPlayerState*    KillerState                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UClass* /*UDamageType*/  DamageType                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UKillCameraComponent::OnKillCameraInitialized(class AProjectXCharacter* Killed, class AActor* Killer, class AProjectXPlayerState* KillerState, class UClass* /*UDamageType*/ DamageType)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.KillCameraComponent.OnKillCameraInitialized"));

	struct
	{
		class AProjectXCharacter*      Killed;
		class AActor*                  Killer;
		class AProjectXPlayerState*    KillerState;
		class UClass* /*UDamageType*/  DamageType;
	} params = {};

	params.Killed = Killed;
	params.Killer = Killer;
	params.KillerState = KillerState;
	params.DamageType = DamageType;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.KillCameraComponent.OnKillCamComponentRegistered
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent, FUNC_Const)
// Parameters:
// class UActorComponent*         ObjectRegistered               (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UKillCameraComponent::OnKillCamComponentRegistered(class UActorComponent* ObjectRegistered)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.KillCameraComponent.OnKillCamComponentRegistered"));

	struct
	{
		class UActorComponent*         ObjectRegistered;
	} params = {};

	params.ObjectRegistered = ObjectRegistered;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.KillCameraComponent.GetPlayerController
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AProjectXPlayerController* ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class AProjectXPlayerController* UKillCameraComponent::GetPlayerController()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.KillCameraComponent.GetPlayerController"));

	struct
	{
		class AProjectXPlayerController* ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.KillCameraComponent.GetKillCameraActor
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AKillCameraActor*        ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class AKillCameraActor* UKillCameraComponent::GetKillCameraActor()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.KillCameraComponent.GetKillCameraActor"));

	struct
	{
		class AKillCameraActor*        ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.KillCameraComponent.EndKillCamera
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bFireEndEvent                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UKillCameraComponent::EndKillCamera(bool bFireEndEvent)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.KillCameraComponent.EndKillCamera"));

	struct
	{
		bool                           bFireEndEvent;
	} params = {};

	params.bFireEndEvent = bFireEndEvent;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.KillCameraComponent.CanLookAtKiller
// (FUNC_Final, FUNC_Native, FUNC_Protected, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UKillCameraComponent::CanLookAtKiller()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.KillCameraComponent.CanLookAtKiller"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.KillCamInterface.ToggleIsInKillCam
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)
// Parameters:
// bool                           bInKillCam                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UKillCamInterface::ToggleIsInKillCam(bool bInKillCam)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.KillCamInterface.ToggleIsInKillCam"));

	struct
	{
		bool                           bInKillCam;
	} params = {};

	params.bInKillCam = bInKillCam;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.LockOnContainerWidget.OnTentativeLockOn
// (FUNC_Native, FUNC_Protected)
// Parameters:
// class UWeaponInstance*         WeaponLocker                   (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ULockOnContainerWidget::OnTentativeLockOn(class UWeaponInstance* WeaponLocker)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.LockOnContainerWidget.OnTentativeLockOn"));

	struct
	{
		class UWeaponInstance*         WeaponLocker;
	} params = {};

	params.WeaponLocker = WeaponLocker;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.LockOnContainerWidget.OnTentativeLockOff
// (FUNC_Native, FUNC_Protected)
// Parameters:
// class UWeaponInstance*         WeaponLocker                   (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ULockOnContainerWidget::OnTentativeLockOff(class UWeaponInstance* WeaponLocker)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.LockOnContainerWidget.OnTentativeLockOff"));

	struct
	{
		class UWeaponInstance*         WeaponLocker;
	} params = {};

	params.WeaponLocker = WeaponLocker;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.LockOnContainerWidget.OnPawnChanged
// (FUNC_Native, FUNC_Protected)
// Parameters:
// class APawn*                   NewPawn                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ULockOnContainerWidget::OnPawnChanged(class APawn* NewPawn)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.LockOnContainerWidget.OnPawnChanged"));

	struct
	{
		class APawn*                   NewPawn;
	} params = {};

	params.NewPawn = NewPawn;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.LockOnContainerWidget.OnLockOn
// (FUNC_Native, FUNC_Protected)
// Parameters:
// class UWeaponInstance*         WeaponLocker                   (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ULockOnContainerWidget::OnLockOn(class UWeaponInstance* WeaponLocker)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.LockOnContainerWidget.OnLockOn"));

	struct
	{
		class UWeaponInstance*         WeaponLocker;
	} params = {};

	params.WeaponLocker = WeaponLocker;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.LockOnContainerWidget.OnLockOff
// (FUNC_Native, FUNC_Protected)
// Parameters:
// class UWeaponInstance*         WeaponLocker                   (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ULockOnContainerWidget::OnLockOff(class UWeaponInstance* WeaponLocker)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.LockOnContainerWidget.OnLockOff"));

	struct
	{
		class UWeaponInstance*         WeaponLocker;
	} params = {};

	params.WeaponLocker = WeaponLocker;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.LockOnContainerWidget.OnIncomingProjectileStop
// (FUNC_Native, FUNC_Protected)
// Parameters:
// class AProjectile*             IncomingProjectile             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ULockOnContainerWidget::OnIncomingProjectileStop(class AProjectile* IncomingProjectile)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.LockOnContainerWidget.OnIncomingProjectileStop"));

	struct
	{
		class AProjectile*             IncomingProjectile;
	} params = {};

	params.IncomingProjectile = IncomingProjectile;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.LockOnContainerWidget.OnIncomingProjectileStart
// (FUNC_Native, FUNC_Protected)
// Parameters:
// class AProjectile*             IncomingProjectile             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ULockOnContainerWidget::OnIncomingProjectileStart(class AProjectile* IncomingProjectile)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.LockOnContainerWidget.OnIncomingProjectileStart"));

	struct
	{
		class AProjectile*             IncomingProjectile;
	} params = {};

	params.IncomingProjectile = IncomingProjectile;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.LockOnContainerWidget.OnImminentMissileWarningStart
// (FUNC_Native, FUNC_Protected)
// Parameters:
// class AActor*                  WarningInstigator              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ULockOnContainerWidget::OnImminentMissileWarningStart(class AActor* WarningInstigator)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.LockOnContainerWidget.OnImminentMissileWarningStart"));

	struct
	{
		class AActor*                  WarningInstigator;
	} params = {};

	params.WarningInstigator = WarningInstigator;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.LockOnContainerWidget.OnImminentMissileWarningEnd
// (FUNC_Native, FUNC_Protected)
// Parameters:
// class AActor*                  WarningInstigator              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ULockOnContainerWidget::OnImminentMissileWarningEnd(class AActor* WarningInstigator)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.LockOnContainerWidget.OnImminentMissileWarningEnd"));

	struct
	{
		class AActor*                  WarningInstigator;
	} params = {};

	params.WarningInstigator = WarningInstigator;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.LockOnContainerWidget.K2_OnImminentWarningToggle
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)
// Parameters:
// class AActor*                  WarningInstigator              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bToggle                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ULockOnContainerWidget::K2_OnImminentWarningToggle(class AActor* WarningInstigator, bool bToggle)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.LockOnContainerWidget.K2_OnImminentWarningToggle"));

	struct
	{
		class AActor*                  WarningInstigator;
		bool                           bToggle;
	} params = {};

	params.WarningInstigator = WarningInstigator;
	params.bToggle = bToggle;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.LockOnNotificationWidget.OnNewYawRotation
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)
// Parameters:
// float                          YawRotation                    (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ULockOnNotificationWidget::OnNewYawRotation(float YawRotation)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.LockOnNotificationWidget.OnNewYawRotation"));

	struct
	{
		float                          YawRotation;
	} params = {};

	params.YawRotation = YawRotation;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.LockOnNotificationWidget.OnLockedOnStart
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)

void ULockOnNotificationWidget::OnLockedOnStart()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.LockOnNotificationWidget.OnLockedOnStart"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.LockOnNotificationWidget.OnLockedOnEnd
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)

void ULockOnNotificationWidget::OnLockedOnEnd()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.LockOnNotificationWidget.OnLockedOnEnd"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.LockOnNotificationWidget.OnIncomingLockStrenghtChanged
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)
// Parameters:
// float                          NewStrenght                    (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ULockOnNotificationWidget::OnIncomingLockStrenghtChanged(float NewStrenght)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.LockOnNotificationWidget.OnIncomingLockStrenghtChanged"));

	struct
	{
		float                          NewStrenght;
	} params = {};

	params.NewStrenght = NewStrenght;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.LockOnTargetInterface.IssueImminentMissileWarning
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bToggleWarning                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  WarningIntigator               (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ULockOnTargetInterface::IssueImminentMissileWarning(bool bToggleWarning, class AActor* WarningIntigator)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.LockOnTargetInterface.IssueImminentMissileWarning"));

	struct
	{
		bool                           bToggleWarning;
		class AActor*                  WarningIntigator;
	} params = {};

	params.bToggleWarning = bToggleWarning;
	params.WarningIntigator = WarningIntigator;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.LockOnTargetInterface.GetLockOnTentativeStartDelegate
// (FUNC_Native, FUNC_Public)
// Parameters:
// struct FMulticastScriptDelegate ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_NativeAccessSpecifierPublic)

struct FMulticastScriptDelegate ULockOnTargetInterface::GetLockOnTentativeStartDelegate()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.LockOnTargetInterface.GetLockOnTentativeStartDelegate"));

	struct
	{
		struct FMulticastScriptDelegate ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.LockOnTargetInterface.GetLockOnTentativeEndDelegate
// (FUNC_Native, FUNC_Public)
// Parameters:
// struct FMulticastScriptDelegate ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_NativeAccessSpecifierPublic)

struct FMulticastScriptDelegate ULockOnTargetInterface::GetLockOnTentativeEndDelegate()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.LockOnTargetInterface.GetLockOnTentativeEndDelegate"));

	struct
	{
		struct FMulticastScriptDelegate ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.LockOnTargetInterface.GetLockOnStartDelegate
// (FUNC_Native, FUNC_Public)
// Parameters:
// struct FMulticastScriptDelegate ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_NativeAccessSpecifierPublic)

struct FMulticastScriptDelegate ULockOnTargetInterface::GetLockOnStartDelegate()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.LockOnTargetInterface.GetLockOnStartDelegate"));

	struct
	{
		struct FMulticastScriptDelegate ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.LockOnTargetInterface.GetLockOnScreenPercentage
// (FUNC_Native, FUNC_Public, FUNC_HasDefaults, FUNC_BlueprintCallable)
// Parameters:
// struct FVector2D               ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FVector2D ULockOnTargetInterface::GetLockOnScreenPercentage()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.LockOnTargetInterface.GetLockOnScreenPercentage"));

	struct
	{
		struct FVector2D               ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.LockOnTargetInterface.GetLockOnMaxDistance
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float ULockOnTargetInterface::GetLockOnMaxDistance()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.LockOnTargetInterface.GetLockOnMaxDistance"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.LockOnTargetInterface.GetLockOnEndDelegate
// (FUNC_Native, FUNC_Public)
// Parameters:
// struct FMulticastScriptDelegate ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_NativeAccessSpecifierPublic)

struct FMulticastScriptDelegate ULockOnTargetInterface::GetLockOnEndDelegate()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.LockOnTargetInterface.GetLockOnEndDelegate"));

	struct
	{
		struct FMulticastScriptDelegate ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.LockOnTargetInterface.GetIncomingProjectileStartDelegate
// (FUNC_Native, FUNC_Public)
// Parameters:
// struct FMulticastScriptDelegate ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_NativeAccessSpecifierPublic)

struct FMulticastScriptDelegate ULockOnTargetInterface::GetIncomingProjectileStartDelegate()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.LockOnTargetInterface.GetIncomingProjectileStartDelegate"));

	struct
	{
		struct FMulticastScriptDelegate ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.LockOnTargetInterface.GetIncomingProjectileEndDelegate
// (FUNC_Native, FUNC_Public)
// Parameters:
// struct FMulticastScriptDelegate ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_NativeAccessSpecifierPublic)

struct FMulticastScriptDelegate ULockOnTargetInterface::GetIncomingProjectileEndDelegate()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.LockOnTargetInterface.GetIncomingProjectileEndDelegate"));

	struct
	{
		struct FMulticastScriptDelegate ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.LockOnTargetInterface.GetImminentMissileWarningStartDelegate
// (FUNC_Native, FUNC_Public)
// Parameters:
// struct FMulticastScriptDelegate ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_NativeAccessSpecifierPublic)

struct FMulticastScriptDelegate ULockOnTargetInterface::GetImminentMissileWarningStartDelegate()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.LockOnTargetInterface.GetImminentMissileWarningStartDelegate"));

	struct
	{
		struct FMulticastScriptDelegate ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.LockOnTargetInterface.GetImminentMissileWarningEndDelegate
// (FUNC_Native, FUNC_Public)
// Parameters:
// struct FMulticastScriptDelegate ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_NativeAccessSpecifierPublic)

struct FMulticastScriptDelegate ULockOnTargetInterface::GetImminentMissileWarningEndDelegate()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.LockOnTargetInterface.GetImminentMissileWarningEndDelegate"));

	struct
	{
		struct FMulticastScriptDelegate ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.LockOnTargetInterface.CanHomingReadSignature
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AProjectile*             HomingProjectile               (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool ULockOnTargetInterface::CanHomingReadSignature(class AProjectile* HomingProjectile)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.LockOnTargetInterface.CanHomingReadSignature"));

	struct
	{
		class AProjectile*             HomingProjectile;
		bool                           ReturnValue;
	} params = {};

	params.HomingProjectile = HomingProjectile;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.LockOnTargetInterface.CanBeLockedOn
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AActor*                  LockInstigator                 (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool ULockOnTargetInterface::CanBeLockedOn(class AActor* LockInstigator)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.LockOnTargetInterface.CanBeLockedOn"));

	struct
	{
		class AActor*                  LockInstigator;
		bool                           ReturnValue;
	} params = {};

	params.LockInstigator = LockInstigator;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.MainMenuGameMode.ToggleFavouriteServer
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// struct FString                 ServerID                       (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bFavourited                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AMainMenuGameMode::ToggleFavouriteServer(const struct FString& ServerID, bool bFavourited)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.MainMenuGameMode.ToggleFavouriteServer"));

	struct
	{
		struct FString                 ServerID;
		bool                           bFavourited;
	} params = {};

	params.ServerID = ServerID;
	params.bFavourited = bFavourited;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.MainMenuGameMode.PurchaseItemRequest
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// int                            ItemId                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AMainMenuGameMode::PurchaseItemRequest(int ItemId)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.MainMenuGameMode.PurchaseItemRequest"));

	struct
	{
		int                            ItemId;
	} params = {};

	params.ItemId = ItemId;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.MainMenuGameMode.OnStoreTimerExpired
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void AMainMenuGameMode::OnStoreTimerExpired()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.MainMenuGameMode.OnStoreTimerExpired"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.MainMenuGameMode.OnStoreLoaded
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void AMainMenuGameMode::OnStoreLoaded()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.MainMenuGameMode.OnStoreLoaded"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.MainMenuGameMode.OnNakamaManagerInitialized
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void AMainMenuGameMode::OnNakamaManagerInitialized()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.MainMenuGameMode.OnNakamaManagerInitialized"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.MainMenuGameMode.OnNakamaConnected
// (FUNC_Final, FUNC_Native, FUNC_Public)

void AMainMenuGameMode::OnNakamaConnected()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.MainMenuGameMode.OnNakamaConnected"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.MainMenuGameMode.IsInHistory
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FString                 ServerName                     (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AMainMenuGameMode::IsInHistory(const struct FString& ServerName)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.MainMenuGameMode.IsInHistory"));

	struct
	{
		struct FString                 ServerName;
		bool                           ReturnValue;
	} params = {};

	params.ServerName = ServerName;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.MainMenuGameMode.IsFavouriteServer
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FString                 ServerName                     (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AMainMenuGameMode::IsFavouriteServer(const struct FString& ServerName)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.MainMenuGameMode.IsFavouriteServer"));

	struct
	{
		struct FString                 ServerName;
		bool                           ReturnValue;
	} params = {};

	params.ServerName = ServerName;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.MainMenuGameMode.IncrementServerVisits
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// struct FString                 ServerID                       (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AMainMenuGameMode::IncrementServerVisits(const struct FString& ServerID)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.MainMenuGameMode.IncrementServerVisits"));

	struct
	{
		struct FString                 ServerID;
	} params = {};

	params.ServerID = ServerID;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.MainMenuGameMode.GetWeaponClassByName
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FString                 WeaponID                       (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UClass* /*UWeaponInstance*/ ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UClass* /*UWeaponInstance*/ AMainMenuGameMode::GetWeaponClassByName(const struct FString& WeaponID)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.MainMenuGameMode.GetWeaponClassByName"));

	struct
	{
		struct FString                 WeaponID;
		class UClass* /*UWeaponInstance*/ ReturnValue;
	} params = {};

	params.WeaponID = WeaponID;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.MainMenuGameMode.GetPlayerID
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Protected, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class APlayerState*            PlayerState                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FString                 ID                             (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AMainMenuGameMode::GetPlayerID(class UObject* WorldContextObject, class APlayerState* PlayerState, struct FString* ID)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.MainMenuGameMode.GetPlayerID"));

	struct
	{
		class UObject*                 WorldContextObject;
		class APlayerState*            PlayerState;
		struct FString                 ID;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.PlayerState = PlayerState;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	if (ID != nullptr)
		*ID = params.ID;
}


// Function ProjectX.MainMenuGameMode.GetMesh
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// struct FString                 ID                             (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// EStatClassifier                Type                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TSoftObjectPtr<class USkeletalMesh> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

TSoftObjectPtr<class USkeletalMesh> AMainMenuGameMode::GetMesh(const struct FString& ID, EStatClassifier Type)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.MainMenuGameMode.GetMesh"));

	struct
	{
		struct FString                 ID;
		EStatClassifier                Type;
		TSoftObjectPtr<class USkeletalMesh> ReturnValue;
	} params = {};

	params.ID = ID;
	params.Type = Type;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.MainMenuGameMode.GetClassDisplayText
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// struct FString                 ID                             (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// EStatClassifier                Type                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FText                   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_NativeAccessSpecifierPublic)

struct FText AMainMenuGameMode::GetClassDisplayText(const struct FString& ID, EStatClassifier Type)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.MainMenuGameMode.GetClassDisplayText"));

	struct
	{
		struct FString                 ID;
		EStatClassifier                Type;
		struct FText                   ReturnValue;
	} params = {};

	params.ID = ID;
	params.Type = Type;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.MainMenuGameMode.GetCharacterClassByWeaponName
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FString                 WeaponID                       (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UClass* /*AProjectXCharacter*/ ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UClass* /*AProjectXCharacter*/ AMainMenuGameMode::GetCharacterClassByWeaponName(const struct FString& WeaponID)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.MainMenuGameMode.GetCharacterClassByWeaponName"));

	struct
	{
		struct FString                 WeaponID;
		class UClass* /*AProjectXCharacter*/ ReturnValue;
	} params = {};

	params.WeaponID = WeaponID;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.MapBoundsModifier.Multicast_NetCorrectInterpolation
// (FUNC_Final, FUNC_Net, FUNC_Native, FUNC_Event, FUNC_NetMulticast, FUNC_Private)
// Parameters:
// unsigned char                  Stage                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          MovementTimeElapsed            (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          ScaleTimeElapsed               (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AMapBoundsModifier::Multicast_NetCorrectInterpolation(unsigned char Stage, float MovementTimeElapsed, float ScaleTimeElapsed)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.MapBoundsModifier.Multicast_NetCorrectInterpolation"));

	struct
	{
		unsigned char                  Stage;
		float                          MovementTimeElapsed;
		float                          ScaleTimeElapsed;
	} params = {};

	params.Stage = Stage;
	params.MovementTimeElapsed = MovementTimeElapsed;
	params.ScaleTimeElapsed = ScaleTimeElapsed;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.MapBoundsModifier.Multicast_Move
// (FUNC_Final, FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_NetMulticast, FUNC_Private)
// Parameters:
// struct FVector_NetQuantize     MoveLocation                   (CPF_ConstParm, CPF_Parm, CPF_ReferenceParm, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// unsigned char                  InCurrentInterpolationIndex    (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AMapBoundsModifier::Multicast_Move(const struct FVector_NetQuantize& MoveLocation, unsigned char InCurrentInterpolationIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.MapBoundsModifier.Multicast_Move"));

	struct
	{
		struct FVector_NetQuantize     MoveLocation;
		unsigned char                  InCurrentInterpolationIndex;
	} params = {};

	params.MoveLocation = MoveLocation;
	params.InCurrentInterpolationIndex = InCurrentInterpolationIndex;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.MapBoundsModifier.Multicast_DebugNetCorrections
// (FUNC_Final, FUNC_Net, FUNC_Native, FUNC_Event, FUNC_NetMulticast, FUNC_Private)
// Parameters:
// struct FVector_NetQuantize     Origin                         (CPF_ConstParm, CPF_Parm, CPF_ReferenceParm, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FVector_NetQuantize     BoxExtent                      (CPF_ConstParm, CPF_Parm, CPF_ReferenceParm, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AMapBoundsModifier::Multicast_DebugNetCorrections(const struct FVector_NetQuantize& Origin, const struct FVector_NetQuantize& BoxExtent)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.MapBoundsModifier.Multicast_DebugNetCorrections"));

	struct
	{
		struct FVector_NetQuantize     Origin;
		struct FVector_NetQuantize     BoxExtent;
	} params = {};

	params.Origin = Origin;
	params.BoxExtent = BoxExtent;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.MapRotationReceiverComponent.StartMapRotationSend
// (FUNC_Native, FUNC_Protected)

void UMapRotationReceiverComponent::StartMapRotationSend()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.MapRotationReceiverComponent.StartMapRotationSend"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.MapRotationReceiverComponent.Server_Reliable_AcknowledgeChunk
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetServer, FUNC_NetValidate)
// Parameters:
// int                            ChunkId                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UMapRotationReceiverComponent::Server_Reliable_AcknowledgeChunk(int ChunkId)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.MapRotationReceiverComponent.Server_Reliable_AcknowledgeChunk"));

	struct
	{
		int                            ChunkId;
	} params = {};

	params.ChunkId = ChunkId;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.MapRotationReceiverComponent.SendNextChunk
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void UMapRotationReceiverComponent::SendNextChunk()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.MapRotationReceiverComponent.SendNextChunk"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.MapRotationReceiverComponent.IsReady
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UMapRotationReceiverComponent::IsReady()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.MapRotationReceiverComponent.IsReady"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.MapRotationReceiverComponent.GetMapList
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// TArray<struct FString>         OutMapList                     (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_NativeAccessSpecifierPublic)

void UMapRotationReceiverComponent::GetMapList(TArray<struct FString>* OutMapList)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.MapRotationReceiverComponent.GetMapList"));

	struct
	{
		TArray<struct FString>         OutMapList;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	if (OutMapList != nullptr)
		*OutMapList = params.OutMapList;
}


// Function ProjectX.MapRotationReceiverComponent.Client_Reliable_SendInitialData
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetClient)
// Parameters:
// int                            Size                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UMapRotationReceiverComponent::Client_Reliable_SendInitialData(int Size)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.MapRotationReceiverComponent.Client_Reliable_SendInitialData"));

	struct
	{
		int                            Size;
	} params = {};

	params.Size = Size;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.MapRotationReceiverComponent.Client_Reliable_SendChunk
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetClient)
// Parameters:
// int                            ChunkId                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TArray<struct FString>         ChunkInfo                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)

void UMapRotationReceiverComponent::Client_Reliable_SendChunk(int ChunkId, TArray<struct FString> ChunkInfo)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.MapRotationReceiverComponent.Client_Reliable_SendChunk"));

	struct
	{
		int                            ChunkId;
		TArray<struct FString>         ChunkInfo;
	} params = {};

	params.ChunkId = ChunkId;
	params.ChunkInfo = ChunkInfo;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.MeleeDashMovementComponent.StopMovement
// (FUNC_Native, FUNC_Public)

void UMeleeDashMovementComponent::StopMovement()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.MeleeDashMovementComponent.StopMovement"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.MusicPlayer.Stop
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          FadeOutTime                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AMusicPlayer::Stop(float FadeOutTime)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.MusicPlayer.Stop"));

	struct
	{
		float                          FadeOutTime;
	} params = {};

	params.FadeOutTime = FadeOutTime;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.MusicPlayer.SetTrackList
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// TArray<struct FTrackPlayInfo>  ListOfTracks                   (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// bool                           bShuffleTracks                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bPlayTrack                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bWaitForTrackToCompleteBeforeSwitching (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AMusicPlayer::SetTrackList(TArray<struct FTrackPlayInfo> ListOfTracks, bool bShuffleTracks, bool bPlayTrack, bool bWaitForTrackToCompleteBeforeSwitching)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.MusicPlayer.SetTrackList"));

	struct
	{
		TArray<struct FTrackPlayInfo>  ListOfTracks;
		bool                           bShuffleTracks;
		bool                           bPlayTrack;
		bool                           bWaitForTrackToCompleteBeforeSwitching;
	} params = {};

	params.ListOfTracks = ListOfTracks;
	params.bShuffleTracks = bShuffleTracks;
	params.bPlayTrack = bPlayTrack;
	params.bWaitForTrackToCompleteBeforeSwitching = bWaitForTrackToCompleteBeforeSwitching;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.MusicPlayer.Resume
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          FadeInTime                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AMusicPlayer::Resume(float FadeInTime)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.MusicPlayer.Resume"));

	struct
	{
		float                          FadeInTime;
	} params = {};

	params.FadeInTime = FadeInTime;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.MusicPlayer.PlayNextTrack
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void AMusicPlayer::PlayNextTrack()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.MusicPlayer.PlayNextTrack"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.MusicPlayer.Play
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// struct FTrackPlayInfo          Track                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

void AMusicPlayer::Play(const struct FTrackPlayInfo& Track)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.MusicPlayer.Play"));

	struct
	{
		struct FTrackPlayInfo          Track;
	} params = {};

	params.Track = Track;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.MusicPlayer.OnTrack2PlaybackPercentChanged
// (FUNC_Final, FUNC_Native, FUNC_Protected)
// Parameters:
// class USoundWave*              PlayingSoundWave               (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          PlaybackPercent                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AMusicPlayer::OnTrack2PlaybackPercentChanged(class USoundWave* PlayingSoundWave, float PlaybackPercent)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.MusicPlayer.OnTrack2PlaybackPercentChanged"));

	struct
	{
		class USoundWave*              PlayingSoundWave;
		float                          PlaybackPercent;
	} params = {};

	params.PlayingSoundWave = PlayingSoundWave;
	params.PlaybackPercent = PlaybackPercent;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.MusicPlayer.OnTrack1PlaybackPercentChanged
// (FUNC_Final, FUNC_Native, FUNC_Protected)
// Parameters:
// class USoundWave*              PlayingSoundWave               (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          PlaybackPercent                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AMusicPlayer::OnTrack1PlaybackPercentChanged(class USoundWave* PlayingSoundWave, float PlaybackPercent)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.MusicPlayer.OnTrack1PlaybackPercentChanged"));

	struct
	{
		class USoundWave*              PlayingSoundWave;
		float                          PlaybackPercent;
	} params = {};

	params.PlayingSoundWave = PlayingSoundWave;
	params.PlaybackPercent = PlaybackPercent;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.MusicPlayer.GetMusicPlayer
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AMusicPlayer*            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class AMusicPlayer* AMusicPlayer::GetMusicPlayer(class UObject* WorldContextObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.MusicPlayer.GetMusicPlayer"));

	struct
	{
		class UObject*                 WorldContextObject;
		class AMusicPlayer*            ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.NakamaManager.Reconnect
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UNakamaManager::Reconnect(class UObject* WorldContextObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.NakamaManager.Reconnect"));

	struct
	{
		class UObject*                 WorldContextObject;
	} params = {};

	params.WorldContextObject = WorldContextObject;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.NakamaManager.IsAvailable
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UNakamaManager::IsAvailable(class UObject* WorldContextObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.NakamaManager.IsAvailable"));

	struct
	{
		class UObject*                 WorldContextObject;
		bool                           ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.NakamaManager.GetNakamaUserId
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FString                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FString UNakamaManager::GetNakamaUserId(class UObject* WorldContextObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.NakamaManager.GetNakamaUserId"));

	struct
	{
		class UObject*                 WorldContextObject;
		struct FString                 ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.NakamaManager.Get
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UNakamaManager*          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UNakamaManager* UNakamaManager::Get(class UObject* WorldContextObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.NakamaManager.Get"));

	struct
	{
		class UObject*                 WorldContextObject;
		class UNakamaManager*          ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ObjectInfoInterface.GetOwnerName
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FString                 ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FString UObjectInfoInterface::GetOwnerName()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ObjectInfoInterface.GetOwnerName"));

	struct
	{
		struct FString                 ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ObjectInfoInterface.GetObjectName
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FText                   ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)

struct FText UObjectInfoInterface::GetObjectName()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ObjectInfoInterface.GetObjectName"));

	struct
	{
		struct FText                   ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ObjectInfoInterface.GetObjectDescription
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FText                   ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)

struct FText UObjectInfoInterface::GetObjectDescription()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ObjectInfoInterface.GetObjectDescription"));

	struct
	{
		struct FText                   ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ObjectiveCapturePoint.OnRep_ObjectiveActor
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void AObjectiveCapturePoint::OnRep_ObjectiveActor()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ObjectiveCapturePoint.OnRep_ObjectiveActor"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ObjectiveCapturePoint.OnActorSpawned
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)
// Parameters:
// class AActor*                  SpawnedInActor                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AObjectiveCapturePoint::OnActorSpawned(class AActor* SpawnedInActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ObjectiveCapturePoint.OnActorSpawned"));

	struct
	{
		class AActor*                  SpawnedInActor;
	} params = {};

	params.SpawnedInActor = SpawnedInActor;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ObjectiveCapturePoint.GetObjectiveActor
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AActor*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class AActor* AObjectiveCapturePoint::GetObjectiveActor()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ObjectiveCapturePoint.GetObjectiveActor"));

	struct
	{
		class AActor*                  ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ObjectiveRandomizer.OnObjectiveSpawned
// (FUNC_Native, FUNC_Protected)
// Parameters:
// class UObject*                 Spawner                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AObjectiveRandomizer::OnObjectiveSpawned(class UObject* Spawner)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ObjectiveRandomizer.OnObjectiveSpawned"));

	struct
	{
		class UObject*                 Spawner;
	} params = {};

	params.Spawner = Spawner;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ObjectiveRandomizer.OnObjectiveCompleted
// (FUNC_Native, FUNC_Protected)
// Parameters:
// bool                           bSuccess                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AObjectiveRandomizer::OnObjectiveCompleted(bool bSuccess)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ObjectiveRandomizer.OnObjectiveCompleted"));

	struct
	{
		bool                           bSuccess;
	} params = {};

	params.bSuccess = bSuccess;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ObjectiveWidget.IntializeObjectiveOwnedObject
// (FUNC_Native, FUNC_Public)
// Parameters:
// class AProjectXSpawnerObjective* ObjectiveController            (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UObjectiveWidget::IntializeObjectiveOwnedObject(class AProjectXSpawnerObjective* ObjectiveController)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ObjectiveWidget.IntializeObjectiveOwnedObject"));

	struct
	{
		class AProjectXSpawnerObjective* ObjectiveController;
	} params = {};

	params.ObjectiveController = ObjectiveController;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ObjectiveWidget.GetObjectiveOwner
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AProjectXSpawnerObjective* ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class AProjectXSpawnerObjective* UObjectiveWidget::GetObjectiveOwner()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ObjectiveWidget.GetObjectiveOwner"));

	struct
	{
		class AProjectXSpawnerObjective* ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ObjectPoolInterface.K2_OnSpawnedFromObjectPool
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)

void UObjectPoolInterface::K2_OnSpawnedFromObjectPool()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ObjectPoolInterface.K2_OnSpawnedFromObjectPool"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ObjectPoolInterface.K2_OnReleasedToObjectPool
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)

void UObjectPoolInterface::K2_OnReleasedToObjectPool()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ObjectPoolInterface.K2_OnReleasedToObjectPool"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.OrbitalLaser.SetExplosionRadius
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          NewExplosionRadius             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AOrbitalLaser::SetExplosionRadius(float NewExplosionRadius)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.OrbitalLaser.SetExplosionRadius"));

	struct
	{
		float                          NewExplosionRadius;
	} params = {};

	params.NewExplosionRadius = NewExplosionRadius;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.OrbitalLaser.OnRep_State
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void AOrbitalLaser::OnRep_State()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.OrbitalLaser.OnRep_State"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.OrbitalLaser.OnFiringStart
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)

void AOrbitalLaser::OnFiringStart()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.OrbitalLaser.OnFiringStart"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.OrbitalLaser.OnFinishingStart
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)

void AOrbitalLaser::OnFinishingStart()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.OrbitalLaser.OnFinishingStart"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.OrbitalLaser.OnChargingStart
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)

void AOrbitalLaser::OnChargingStart()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.OrbitalLaser.OnChargingStart"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.OrbitalLaser.GetState
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// EOrbitalLaserState             ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

EOrbitalLaserState AOrbitalLaser::GetState()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.OrbitalLaser.GetState"));

	struct
	{
		EOrbitalLaserState             ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.OrbitalLaser.GetFiringTime
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AOrbitalLaser::GetFiringTime()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.OrbitalLaser.GetFiringTime"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.OrbitalLaser.GetFinishingTime
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AOrbitalLaser::GetFinishingTime()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.OrbitalLaser.GetFinishingTime"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.OrbitalLaser.GetExplosionRadius
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AOrbitalLaser::GetExplosionRadius()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.OrbitalLaser.GetExplosionRadius"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.OrbitalLaser.GetDamageRadius
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AOrbitalLaser::GetDamageRadius()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.OrbitalLaser.GetDamageRadius"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.OrbitalLaser.GetChargeTime
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AOrbitalLaser::GetChargeTime()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.OrbitalLaser.GetChargeTime"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.OrbitalLaser.Explosion
// (FUNC_Final, FUNC_Native, FUNC_Protected, FUNC_BlueprintCallable)

void AOrbitalLaser::Explosion()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.OrbitalLaser.Explosion"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.OwnedInterface.OnOwnerLeave
// (FUNC_Native, FUNC_Public)

void UOwnedInterface::OnOwnerLeave()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.OwnedInterface.OnOwnerLeave"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.OwnedInterface.OnOwnerDied
// (FUNC_Native, FUNC_Public)

void UOwnedInterface::OnOwnerDied()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.OwnedInterface.OnOwnerDied"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.OwnedInterface.GetOwningController
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AController*             ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class AController* UOwnedInterface::GetOwningController()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.OwnedInterface.GetOwningController"));

	struct
	{
		class AController*             ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.OwnedInterface.GetOwnedPlayerState
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class APlayerState*            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class APlayerState* UOwnedInterface::GetOwnedPlayerState()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.OwnedInterface.GetOwnedPlayerState"));

	struct
	{
		class APlayerState*            ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.OwnedInterfaceHelper.GetPlayerStateFromActor
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class AActor*                  Actor                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class APlayerState*            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class APlayerState* UOwnedInterfaceHelper::GetPlayerStateFromActor(class AActor* Actor)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.OwnedInterfaceHelper.GetPlayerStateFromActor"));

	struct
	{
		class AActor*                  Actor;
		class APlayerState*            ReturnValue;
	} params = {};

	params.Actor = Actor;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.PainCausingComponent.RemovePainActor
// (FUNC_Final, FUNC_Native, FUNC_Private)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UPainCausingComponent::RemovePainActor(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.PainCausingComponent.RemovePainActor"));

	struct
	{
		class UPrimitiveComponent*     OverlappedComponent;
		class AActor*                  OtherActor;
		class UPrimitiveComponent*     OtherComp;
		int                            OtherBodyIndex;
	} params = {};

	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.PainCausingComponent.AddPainActor
// (FUNC_Final, FUNC_Native, FUNC_Private, FUNC_HasOutParms)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bFromSweep                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FHitResult              SweepResult                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

void UPainCausingComponent::AddPainActor(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.PainCausingComponent.AddPainActor"));

	struct
	{
		class UPrimitiveComponent*     OverlappedComponent;
		class AActor*                  OtherActor;
		class UPrimitiveComponent*     OtherComp;
		int                            OtherBodyIndex;
		bool                           bFromSweep;
		struct FHitResult              SweepResult;
	} params = {};

	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.Pickup.OnWaitingToReachRadiusExpired
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void APickup::OnWaitingToReachRadiusExpired()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Pickup.OnWaitingToReachRadiusExpired"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.Pickup.OnItemPickedUp
// (FUNC_Event, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintEvent)
// Parameters:
// class AActor*                  OtherActor                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void APickup::OnItemPickedUp(class AActor* OtherActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Pickup.OnItemPickedUp"));

	struct
	{
		class AActor*                  OtherActor;
	} params = {};

	params.OtherActor = OtherActor;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.Pickup.OnComponentBeginOverlap
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bFromSweep                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FHitResult              SweepResult                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

void APickup::OnComponentBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Pickup.OnComponentBeginOverlap"));

	struct
	{
		class UPrimitiveComponent*     OverlappedComponent;
		class AActor*                  OtherActor;
		class UPrimitiveComponent*     OtherComp;
		int                            OtherBodyIndex;
		bool                           bFromSweep;
		struct FHitResult              SweepResult;
	} params = {};

	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.Pickup.CanPickup
// (FUNC_Native, FUNC_Event, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintEvent)
// Parameters:
// class AProjectXCharacter*      Player                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool APickup::CanPickup(class AProjectXCharacter* Player)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Pickup.CanPickup"));

	struct
	{
		class AProjectXCharacter*      Player;
		bool                           ReturnValue;
	} params = {};

	params.Player = Player;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.PickupReviveBeacon.Server_Reliable_RequestHelp
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetServer, FUNC_NetValidate)

void APickupReviveBeacon::Server_Reliable_RequestHelp()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.PickupReviveBeacon.Server_Reliable_RequestHelp"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.PickupReviveBeacon.OnSelected
// (FUNC_Final, FUNC_Native, FUNC_Protected)
// Parameters:
// class APlayerController*       Sender                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     Component                      (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void APickupReviveBeacon::OnSelected(class APlayerController* Sender, class UPrimitiveComponent* Component)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.PickupReviveBeacon.OnSelected"));

	struct
	{
		class APlayerController*       Sender;
		class UPrimitiveComponent*     Component;
	} params = {};

	params.Sender = Sender;
	params.Component = Component;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.PickupReviveBeacon.OnReviveStartTimeReplicated
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)
// Parameters:
// float                          InReviveStartTime              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void APickupReviveBeacon::OnReviveStartTimeReplicated(float InReviveStartTime)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.PickupReviveBeacon.OnReviveStartTimeReplicated"));

	struct
	{
		float                          InReviveStartTime;
	} params = {};

	params.InReviveStartTime = InReviveStartTime;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.PickupReviveBeacon.OnReviveRespawnActive
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)

void APickupReviveBeacon::OnReviveRespawnActive()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.PickupReviveBeacon.OnReviveRespawnActive"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.PickupReviveBeacon.OnRequestHelp
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)

void APickupReviveBeacon::OnRequestHelp()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.PickupReviveBeacon.OnRequestHelp"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.PickupReviveBeacon.OnRep_ReviveStartTime
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void APickupReviveBeacon::OnRep_ReviveStartTime()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.PickupReviveBeacon.OnRep_ReviveStartTime"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.PickupReviveBeacon.OnRep_ReviveRespawnActive
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void APickupReviveBeacon::OnRep_ReviveRespawnActive()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.PickupReviveBeacon.OnRep_ReviveRespawnActive"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.PickupReviveBeacon.OnRep_DeadPlayerCanRedeploy
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void APickupReviveBeacon::OnRep_DeadPlayerCanRedeploy()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.PickupReviveBeacon.OnRep_DeadPlayerCanRedeploy"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.PickupReviveBeacon.OnNextRespawnTimeChanged
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void APickupReviveBeacon::OnNextRespawnTimeChanged()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.PickupReviveBeacon.OnNextRespawnTimeChanged"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.PickupReviveBeacon.OnHoldStarted
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)

void APickupReviveBeacon::OnHoldStarted()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.PickupReviveBeacon.OnHoldStarted"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.PickupReviveBeacon.OnHoldExited
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)

void APickupReviveBeacon::OnHoldExited()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.PickupReviveBeacon.OnHoldExited"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.PickupReviveBeacon.OnFocusBeacon
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)

void APickupReviveBeacon::OnFocusBeacon()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.PickupReviveBeacon.OnFocusBeacon"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.PickupReviveBeacon.OnDeadPlayerCanRedeploy
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)

void APickupReviveBeacon::OnDeadPlayerCanRedeploy()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.PickupReviveBeacon.OnDeadPlayerCanRedeploy"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.PickupReviveBeacon.MultiCast_Reliable_RequestHelp
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_NetMulticast, FUNC_Protected, FUNC_NetValidate)

void APickupReviveBeacon::MultiCast_Reliable_RequestHelp()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.PickupReviveBeacon.MultiCast_Reliable_RequestHelp"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.PickupReviveBeacon.IsReviveRespawnActive
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool APickupReviveBeacon::IsReviveRespawnActive()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.PickupReviveBeacon.IsReviveRespawnActive"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.PickupReviveBeacon.HoldStarted
// (FUNC_Final, FUNC_Native, FUNC_Protected)
// Parameters:
// class APlayerController*       Sender                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     Component                      (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void APickupReviveBeacon::HoldStarted(class APlayerController* Sender, class UPrimitiveComponent* Component)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.PickupReviveBeacon.HoldStarted"));

	struct
	{
		class APlayerController*       Sender;
		class UPrimitiveComponent*     Component;
	} params = {};

	params.Sender = Sender;
	params.Component = Component;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.PickupReviveBeacon.HoldExited
// (FUNC_Final, FUNC_Native, FUNC_Protected)
// Parameters:
// class APlayerController*       Sender                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     Component                      (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void APickupReviveBeacon::HoldExited(class APlayerController* Sender, class UPrimitiveComponent* Component)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.PickupReviveBeacon.HoldExited"));

	struct
	{
		class APlayerController*       Sender;
		class UPrimitiveComponent*     Component;
	} params = {};

	params.Sender = Sender;
	params.Component = Component;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.PickupReviveBeacon.GetReviveTriggerPlayerState
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AProjectXPlayerState*    ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class AProjectXPlayerState* APickupReviveBeacon::GetReviveTriggerPlayerState()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.PickupReviveBeacon.GetReviveTriggerPlayerState"));

	struct
	{
		class AProjectXPlayerState*    ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.PickupReviveBeacon.GetReviveStartTime
// (FUNC_Final, FUNC_Native, FUNC_Protected, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float APickupReviveBeacon::GetReviveStartTime()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.PickupReviveBeacon.GetReviveStartTime"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.PickupReviveBeacon.GetReviveBroadcastMessage
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UClass* /*ULocalMessage*/ ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UClass* /*ULocalMessage*/ APickupReviveBeacon::GetReviveBroadcastMessage()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.PickupReviveBeacon.GetReviveBroadcastMessage"));

	struct
	{
		class UClass* /*ULocalMessage*/ ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.PickupReviveBeacon.GetHoverHeight
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float APickupReviveBeacon::GetHoverHeight()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.PickupReviveBeacon.GetHoverHeight"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.PlatformDependentEngagement.EngageUser
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FScriptDelegate         Callback                       (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
// struct FInputEvent             InputEvent                     (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)

void UPlatformDependentEngagement::EngageUser(class UObject* WorldContextObject, const struct FScriptDelegate& Callback, const struct FInputEvent& InputEvent)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.PlatformDependentEngagement.EngageUser"));

	struct
	{
		class UObject*                 WorldContextObject;
		struct FScriptDelegate         Callback;
		struct FInputEvent             InputEvent;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.Callback = Callback;
	params.InputEvent = InputEvent;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.PlayerProgressionManager.SortWeaponsByUnlockLevel
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// TMap<class UClass* /*UWeaponInstance*/, unsigned char> MapIn                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// TArray<class UClass* /*UWeaponInstance*/> SortedWeaponList               (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_UObjectWrapper, CPF_NativeAccessSpecifierPublic)

void UPlayerProgressionManager::SortWeaponsByUnlockLevel(TMap<class UClass* /*UWeaponInstance*/, unsigned char> MapIn, TArray<class UClass* /*UWeaponInstance*/>* SortedWeaponList)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.PlayerProgressionManager.SortWeaponsByUnlockLevel"));

	struct
	{
		TMap<class UClass* /*UWeaponInstance*/, unsigned char> MapIn;
		TArray<class UClass* /*UWeaponInstance*/> SortedWeaponList;
	} params = {};

	params.MapIn = MapIn;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	if (SortedWeaponList != nullptr)
		*SortedWeaponList = params.SortedWeaponList;
}


// Function ProjectX.PlayerProgressionManager.OnNakamaConnected
// (FUNC_Final, FUNC_Native, FUNC_Public)

void UPlayerProgressionManager::OnNakamaConnected()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.PlayerProgressionManager.OnNakamaConnected"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.PlayerProgressionManager.GetProgressionUnlocks
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// struct FString                 ClassID                        (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            CurrentLevel                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TArray<class UCosmeticAssetBase*> Unlocks                        (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_NativeAccessSpecifierPublic)
// int                            Currency                       (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UPlayerProgressionManager::GetProgressionUnlocks(const struct FString& ClassID, int CurrentLevel, TArray<class UCosmeticAssetBase*>* Unlocks, int* Currency)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.PlayerProgressionManager.GetProgressionUnlocks"));

	struct
	{
		struct FString                 ClassID;
		int                            CurrentLevel;
		TArray<class UCosmeticAssetBase*> Unlocks;
		int                            Currency;
		bool                           ReturnValue;
	} params = {};

	params.ClassID = ClassID;
	params.CurrentLevel = CurrentLevel;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	if (Unlocks != nullptr)
		*Unlocks = params.Unlocks;
	if (Currency != nullptr)
		*Currency = params.Currency;

	return params.ReturnValue;
}


// Function ProjectX.PlayerProgressionManager.GetProgresisonInfo
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FString                 ClassID                        (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            Level                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FProgressionInfo        ProgressionInfo                (CPF_Parm, CPF_OutParm, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UPlayerProgressionManager::GetProgresisonInfo(const struct FString& ClassID, int Level, struct FProgressionInfo* ProgressionInfo)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.PlayerProgressionManager.GetProgresisonInfo"));

	struct
	{
		struct FString                 ClassID;
		int                            Level;
		struct FProgressionInfo        ProgressionInfo;
		bool                           ReturnValue;
	} params = {};

	params.ClassID = ClassID;
	params.Level = Level;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	if (ProgressionInfo != nullptr)
		*ProgressionInfo = params.ProgressionInfo;

	return params.ReturnValue;
}


// Function ProjectX.PlayerProgressionManager.GetPlayerProgression
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UPlayerProgressionManager* ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UPlayerProgressionManager* UPlayerProgressionManager::GetPlayerProgression(class UObject* WorldContextObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.PlayerProgressionManager.GetPlayerProgression"));

	struct
	{
		class UObject*                 WorldContextObject;
		class UPlayerProgressionManager* ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.PlayerProgressionManager.GetMaxLevel
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// struct FString                 ClassID                        (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int UPlayerProgressionManager::GetMaxLevel(const struct FString& ClassID)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.PlayerProgressionManager.GetMaxLevel"));

	struct
	{
		struct FString                 ClassID;
		int                            ReturnValue;
	} params = {};

	params.ClassID = ClassID;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.PlayerProgressionManager.GetMatchBonusExperience
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int UPlayerProgressionManager::GetMatchBonusExperience()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.PlayerProgressionManager.GetMatchBonusExperience"));

	struct
	{
		int                            ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.PostGameScreen.PlayerSpawned
// (FUNC_Event, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintEvent)
// Parameters:
// TArray<struct FPodiumPawn>     PodiumPawns                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)

void APostGameScreen::PlayerSpawned(TArray<struct FPodiumPawn> PodiumPawns)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.PostGameScreen.PlayerSpawned"));

	struct
	{
		TArray<struct FPodiumPawn>     PodiumPawns;
	} params = {};

	params.PodiumPawns = PodiumPawns;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.PostGameScreen.K2_InitPostGameScreen
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)
// Parameters:
// float                          Duration                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void APostGameScreen::K2_InitPostGameScreen(float Duration)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.PostGameScreen.K2_InitPostGameScreen"));

	struct
	{
		float                          Duration;
	} params = {};

	params.Duration = Duration;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.PostGameScreen.InitPostGameScreen
// (FUNC_Final, FUNC_Native, FUNC_Public)
// Parameters:
// float                          Duration                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void APostGameScreen::InitPostGameScreen(float Duration)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.PostGameScreen.InitPostGameScreen"));

	struct
	{
		float                          Duration;
	} params = {};

	params.Duration = Duration;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.Projectile.UpdateProjectilePath
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void AProjectile::UpdateProjectilePath()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Projectile.UpdateProjectilePath"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.Projectile.OnHit
// (FUNC_Native, FUNC_Protected, FUNC_HasOutParms, FUNC_HasDefaults)
// Parameters:
// class AActor*                  SelfActor                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FVector                 NormalImpulse                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FHitResult              Hit                            (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

void AProjectile::OnHit(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Projectile.OnHit"));

	struct
	{
		class AActor*                  SelfActor;
		class AActor*                  OtherActor;
		struct FVector                 NormalImpulse;
		struct FHitResult              Hit;
	} params = {};

	params.SelfActor = SelfActor;
	params.OtherActor = OtherActor;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.Projectile.OnAccelerationTowardsHomingTargetNotify
// (FUNC_Final, FUNC_Native, FUNC_Protected)
// Parameters:
// bool                           bIsAccelerating                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectile::OnAccelerationTowardsHomingTargetNotify(bool bIsAccelerating)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Projectile.OnAccelerationTowardsHomingTargetNotify"));

	struct
	{
		bool                           bIsAccelerating;
	} params = {};

	params.bIsAccelerating = bIsAccelerating;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.Projectile.Multicast_OnHit
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_NetMulticast, FUNC_Protected, FUNC_HasDefaults)
// Parameters:
// class AActor*                  SelfActor                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FVector                 NormalImpulse                  (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FHitResult              Hit                            (CPF_ConstParm, CPF_Parm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

void AProjectile::Multicast_OnHit(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Projectile.Multicast_OnHit"));

	struct
	{
		class AActor*                  SelfActor;
		class AActor*                  OtherActor;
		struct FVector                 NormalImpulse;
		struct FHitResult              Hit;
	} params = {};

	params.SelfActor = SelfActor;
	params.OtherActor = OtherActor;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.Projectile.InitializeMovementComponent
// (FUNC_Native, FUNC_Protected)

void AProjectile::InitializeMovementComponent()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Projectile.InitializeMovementComponent"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.Projectile.GetTicketUsageCount
// (FUNC_Native, FUNC_Public, FUNC_Const)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int AProjectile::GetTicketUsageCount()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Projectile.GetTicketUsageCount"));

	struct
	{
		int                            ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.Projectile.GetStartLocation
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasDefaults, FUNC_Const)
// Parameters:
// struct FVector                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FVector AProjectile::GetStartLocation()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Projectile.GetStartLocation"));

	struct
	{
		struct FVector                 ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.Projectile.GetProjectilePath
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_Const)
// Parameters:
// TArray<struct FVector_NetQuantize> ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)

TArray<struct FVector_NetQuantize> AProjectile::GetProjectilePath()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Projectile.GetProjectilePath"));

	struct
	{
		TArray<struct FVector_NetQuantize> ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.Projectile.GetProjectileID
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_Const)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int AProjectile::GetProjectileID()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Projectile.GetProjectileID"));

	struct
	{
		int                            ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.Projectile.GetDamageModifier
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AProjectile::GetDamageModifier()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Projectile.GetDamageModifier"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.Projectile.GetActorToSpawnOnHit
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UClass* /*AActor*/       ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UClass* /*AActor*/ AProjectile::GetActorToSpawnOnHit()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Projectile.GetActorToSpawnOnHit"));

	struct
	{
		class UClass* /*AActor*/       ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.Projectile.GenerateHitRequest
// (FUNC_Native, FUNC_Protected, FUNC_HasOutParms, FUNC_HasDefaults)
// Parameters:
// class AActor*                  OtherActor                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FVector                 NormalImpulse                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FHitResult              Hit                            (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)
// struct FRotator                CustomRotator                  (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
// TArray<class AActor*>          DamagedActors                  (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_NativeAccessSpecifierPublic)

void AProjectile::GenerateHitRequest(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit, const struct FRotator& CustomRotator, TArray<class AActor*> DamagedActors)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.Projectile.GenerateHitRequest"));

	struct
	{
		class AActor*                  OtherActor;
		class UPrimitiveComponent*     OtherComp;
		struct FVector                 NormalImpulse;
		struct FHitResult              Hit;
		struct FRotator                CustomRotator;
		TArray<class AActor*>          DamagedActors;
	} params = {};

	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;
	params.CustomRotator = CustomRotator;
	params.DamagedActors = DamagedActors;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectileExplosive.GetExplosiveDamage
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AProjectileExplosive::GetExplosiveDamage()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectileExplosive.GetExplosiveDamage"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectileReflectionInterface.IsReflectionActive
// (FUNC_Native, FUNC_Event, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintEvent)
// Parameters:
// class UClass* /*AProjectile*/  ProjectileClass                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UClass* /*UWeaponInstanceRanged*/ Weapon                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FHitResult              HitResult                      (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UProjectileReflectionInterface::IsReflectionActive(class UClass* /*AProjectile*/ ProjectileClass, class UClass* /*UWeaponInstanceRanged*/ Weapon, const struct FHitResult& HitResult)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectileReflectionInterface.IsReflectionActive"));

	struct
	{
		class UClass* /*AProjectile*/  ProjectileClass;
		class UClass* /*UWeaponInstanceRanged*/ Weapon;
		struct FHitResult              HitResult;
		bool                           ReturnValue;
	} params = {};

	params.ProjectileClass = ProjectileClass;
	params.Weapon = Weapon;
	params.HitResult = HitResult;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectileReflectionInterface.HandleProjectileReflection
// (FUNC_Native, FUNC_Event, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintEvent)
// Parameters:
// class UClass* /*AProjectile*/  ProjectileClass                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UClass* /*UWeaponInstanceRanged*/ Weapon                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FHitResult              HitResult                      (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UProjectileReflectionInterface::HandleProjectileReflection(class UClass* /*AProjectile*/ ProjectileClass, class UClass* /*UWeaponInstanceRanged*/ Weapon, const struct FHitResult& HitResult)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectileReflectionInterface.HandleProjectileReflection"));

	struct
	{
		class UClass* /*AProjectile*/  ProjectileClass;
		class UClass* /*UWeaponInstanceRanged*/ Weapon;
		struct FHitResult              HitResult;
		bool                           ReturnValue;
	} params = {};

	params.ProjectileClass = ProjectileClass;
	params.Weapon = Weapon;
	params.HitResult = HitResult;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXAIController.SetTarget
// (FUNC_BlueprintAuthorityOnly, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class AActor*                  Target                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// ESetTargetEvent                Context                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bAllowDelays                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          TargetThreatLevel              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXAIController::SetTarget(class AActor* Target, ESetTargetEvent Context, bool bAllowDelays, float TargetThreatLevel)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXAIController.SetTarget"));

	struct
	{
		class AActor*                  Target;
		ESetTargetEvent                Context;
		bool                           bAllowDelays;
		float                          TargetThreatLevel;
	} params = {};

	params.Target = Target;
	params.Context = Context;
	params.bAllowDelays = bAllowDelays;
	params.TargetThreatLevel = TargetThreatLevel;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXAIController.SelectTarget
// (FUNC_BlueprintAuthorityOnly, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bDontReselectSameTarget        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// EAcquireTargetType             SearchType                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXAIController::SelectTarget(bool bDontReselectSameTarget, EAcquireTargetType SearchType)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXAIController.SelectTarget"));

	struct
	{
		bool                           bDontReselectSameTarget;
		EAcquireTargetType             SearchType;
		bool                           ReturnValue;
	} params = {};

	params.bDontReselectSameTarget = bDontReselectSameTarget;
	params.SearchType = SearchType;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXAIController.OnTargetVehicleExit
// (FUNC_Final, FUNC_Native, FUNC_Protected)
// Parameters:
// class AProjectXVehicle*        Vehicle                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UVehicleSeatComponent*   Seat                           (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AProjectXCharacter*      PreviousPassenger              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXAIController::OnTargetVehicleExit(class AProjectXVehicle* Vehicle, class UVehicleSeatComponent* Seat, class AProjectXCharacter* PreviousPassenger)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXAIController.OnTargetVehicleExit"));

	struct
	{
		class AProjectXVehicle*        Vehicle;
		class UVehicleSeatComponent*   Seat;
		class AProjectXCharacter*      PreviousPassenger;
	} params = {};

	params.Vehicle = Vehicle;
	params.Seat = Seat;
	params.PreviousPassenger = PreviousPassenger;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXAIController.OnTargetVehicleEnter
// (FUNC_Final, FUNC_Native, FUNC_Protected)
// Parameters:
// class AProjectXCharacter*      Driver                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AProjectXVehicle*        CurrentVehicle                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AProjectXVehicle*        PreviousVehicle                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXAIController::OnTargetVehicleEnter(class AProjectXCharacter* Driver, class AProjectXVehicle* CurrentVehicle, class AProjectXVehicle* PreviousVehicle)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXAIController.OnTargetVehicleEnter"));

	struct
	{
		class AProjectXCharacter*      Driver;
		class AProjectXVehicle*        CurrentVehicle;
		class AProjectXVehicle*        PreviousVehicle;
	} params = {};

	params.Driver = Driver;
	params.CurrentVehicle = CurrentVehicle;
	params.PreviousVehicle = PreviousVehicle;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXAIController.OnTargetKilled
// (FUNC_Final, FUNC_Native, FUNC_Protected, FUNC_HasOutParms)
// Parameters:
// class AActor*                  Victim                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          Damage                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FDamageEvent            DamageEvent                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// class AController*             EventInstigator                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class APlayerState*            InstigatorPlayerState          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXAIController::OnTargetKilled(class AActor* Victim, float Damage, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser, class APlayerState* InstigatorPlayerState)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXAIController.OnTargetKilled"));

	struct
	{
		class AActor*                  Victim;
		float                          Damage;
		struct FDamageEvent            DamageEvent;
		class AController*             EventInstigator;
		class AActor*                  DamageCauser;
		class APlayerState*            InstigatorPlayerState;
	} params = {};

	params.Victim = Victim;
	params.Damage = Damage;
	params.DamageEvent = DamageEvent;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;
	params.InstigatorPlayerState = InstigatorPlayerState;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXAIController.OnPerceptionUpdated
// (FUNC_Native, FUNC_Protected)
// Parameters:
// TArray<struct FProjectXPerceptionInfo> Perceptions                    (CPF_Parm, CPF_ZeroConstructor, CPF_NativeAccessSpecifierPublic)

void AProjectXAIController::OnPerceptionUpdated(TArray<struct FProjectXPerceptionInfo> Perceptions)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXAIController.OnPerceptionUpdated"));

	struct
	{
		TArray<struct FProjectXPerceptionInfo> Perceptions;
	} params = {};

	params.Perceptions = Perceptions;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXAIController.OnPawnDeath
// (FUNC_Final, FUNC_Native, FUNC_Protected, FUNC_HasOutParms)
// Parameters:
// class AActor*                  Victim                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          Damage                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FDamageEvent            DamageEvent                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// class AController*             EventInstigator                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class APlayerState*            InstigatorPlayerState          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXAIController::OnPawnDeath(class AActor* Victim, float Damage, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser, class APlayerState* InstigatorPlayerState)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXAIController.OnPawnDeath"));

	struct
	{
		class AActor*                  Victim;
		float                          Damage;
		struct FDamageEvent            DamageEvent;
		class AController*             EventInstigator;
		class AActor*                  DamageCauser;
		class APlayerState*            InstigatorPlayerState;
	} params = {};

	params.Victim = Victim;
	params.Damage = Damage;
	params.DamageEvent = DamageEvent;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;
	params.InstigatorPlayerState = InstigatorPlayerState;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXAIController.IsWithinFiringRangeOfTarget
// (FUNC_BlueprintAuthorityOnly, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXAIController::IsWithinFiringRangeOfTarget()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXAIController.IsWithinFiringRangeOfTarget"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXAIController.IsWithinEngagementRangeOfTarget
// (FUNC_BlueprintAuthorityOnly, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXAIController::IsWithinEngagementRangeOfTarget()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXAIController.IsWithinEngagementRangeOfTarget"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXAIController.IsWithinEngagementMaxRangeOfTarget
// (FUNC_BlueprintAuthorityOnly, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXAIController::IsWithinEngagementMaxRangeOfTarget()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXAIController.IsWithinEngagementMaxRangeOfTarget"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXAIController.HasTarget
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXAIController::HasTarget()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXAIController.HasTarget"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXAIController.GetTargetThreatLevel
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AProjectXAIController::GetTargetThreatLevel()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXAIController.GetTargetThreatLevel"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXAIController.GetTarget
// (FUNC_BlueprintAuthorityOnly, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UObject*                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UObject* AProjectXAIController::GetTarget()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXAIController.GetTarget"));

	struct
	{
		class UObject*                 ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXAIController.GetSquareFiringDistance
// (FUNC_BlueprintAuthorityOnly, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AProjectXAIController::GetSquareFiringDistance()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXAIController.GetSquareFiringDistance"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXAIController.GetSquareEngagementDistance
// (FUNC_BlueprintAuthorityOnly, FUNC_Native, FUNC_Public, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FVector2D               ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FVector2D AProjectXAIController::GetSquareEngagementDistance()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXAIController.GetSquareEngagementDistance"));

	struct
	{
		struct FVector2D               ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXAIController.GetProjectXAI
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AProjectXCharacter*      ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class AProjectXCharacter* AProjectXAIController::GetProjectXAI()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXAIController.GetProjectXAI"));

	struct
	{
		class AProjectXCharacter*      ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXAIController.GetMoveActor
// (FUNC_BlueprintAuthorityOnly, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AActor*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class AActor* AProjectXAIController::GetMoveActor()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXAIController.GetMoveActor"));

	struct
	{
		class AActor*                  ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXAIController.CanSeeTarget
// (FUNC_BlueprintAuthorityOnly, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXAIController::CanSeeTarget()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXAIController.CanSeeTarget"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXAIPerception.ReportDamageEvent
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms)
// Parameters:
// class AActor*                  Victim                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          Damage                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FDamageEvent            DamageEvent                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// class AController*             EventInstigator                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class APlayerState*            InstigatorPlayerState          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UProjectXAIPerception::ReportDamageEvent(class AActor* Victim, float Damage, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser, class APlayerState* InstigatorPlayerState)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXAIPerception.ReportDamageEvent"));

	struct
	{
		class AActor*                  Victim;
		float                          Damage;
		struct FDamageEvent            DamageEvent;
		class AController*             EventInstigator;
		class AActor*                  DamageCauser;
		class APlayerState*            InstigatorPlayerState;
	} params = {};

	params.Victim = Victim;
	params.Damage = Damage;
	params.DamageEvent = DamageEvent;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;
	params.InstigatorPlayerState = InstigatorPlayerState;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXAIPerception.OnPawnPosessed
// (FUNC_Final, FUNC_Native, FUNC_Public)
// Parameters:
// class APawn*                   InPawn                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UProjectXAIPerception::OnPawnPosessed(class APawn* InPawn)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXAIPerception.OnPawnPosessed"));

	struct
	{
		class APawn*                   InPawn;
	} params = {};

	params.InPawn = InPawn;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXAISpawner.OnAISpawned
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)
// Parameters:
// class AProjectXCharacter*      SpawnedActor                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXAISpawner::OnAISpawned(class AProjectXCharacter* SpawnedActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXAISpawner.OnAISpawned"));

	struct
	{
		class AProjectXCharacter*      SpawnedActor;
	} params = {};

	params.SpawnedActor = SpawnedActor;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXAISpawner.OnAIDeath
// (FUNC_Native, FUNC_Public, FUNC_HasOutParms)
// Parameters:
// class AActor*                  Victim                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          Damage                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FDamageEvent            DamageEvent                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// class AController*             EventInstigator                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class APlayerState*            InstigatorPlayerState          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXAISpawner::OnAIDeath(class AActor* Victim, float Damage, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser, class APlayerState* InstigatorPlayerState)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXAISpawner.OnAIDeath"));

	struct
	{
		class AActor*                  Victim;
		float                          Damage;
		struct FDamageEvent            DamageEvent;
		class AController*             EventInstigator;
		class AActor*                  DamageCauser;
		class APlayerState*            InstigatorPlayerState;
	} params = {};

	params.Victim = Victim;
	params.Damage = Damage;
	params.DamageEvent = DamageEvent;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;
	params.InstigatorPlayerState = InstigatorPlayerState;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXBlueprintAsyncAction.EvaluateRequest
// (FUNC_Native, FUNC_Protected)

void UProjectXBlueprintAsyncAction::EvaluateRequest()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXBlueprintAsyncAction.EvaluateRequest"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.BlueprintAsyncActionGetPawn.AsyncGetPawn
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class AController*             Controller                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UBlueprintAsyncActionGetPawn* ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UBlueprintAsyncActionGetPawn* UBlueprintAsyncActionGetPawn::AsyncGetPawn(class AController* Controller)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.BlueprintAsyncActionGetPawn.AsyncGetPawn"));

	struct
	{
		class AController*             Controller;
		class UBlueprintAsyncActionGetPawn* ReturnValue;
	} params = {};

	params.Controller = Controller;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.BlueprintAsyncActionGetPlayerState.AsyncGetPlayerState
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class AController*             Controller                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UBlueprintAsyncActionGetPlayerState* ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UBlueprintAsyncActionGetPlayerState* UBlueprintAsyncActionGetPlayerState::AsyncGetPlayerState(class AController* Controller)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.BlueprintAsyncActionGetPlayerState.AsyncGetPlayerState"));

	struct
	{
		class AController*             Controller;
		class UBlueprintAsyncActionGetPlayerState* ReturnValue;
	} params = {};

	params.Controller = Controller;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.BlueprintAsyncActionGetGameState.AsyncGetGameState
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class AController*             Controller                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UBlueprintAsyncActionGetGameState* ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UBlueprintAsyncActionGetGameState* UBlueprintAsyncActionGetGameState::AsyncGetGameState(class AController* Controller)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.BlueprintAsyncActionGetGameState.AsyncGetGameState"));

	struct
	{
		class AController*             Controller;
		class UBlueprintAsyncActionGetGameState* ReturnValue;
	} params = {};

	params.Controller = Controller;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.BlueprintAsyncActionGeneric.BeginAsyncTask
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UObject*                 Owner                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FScriptDelegate         Task                           (CPF_Parm, CPF_ZeroConstructor, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
// class UBlueprintAsyncActionGeneric* ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UBlueprintAsyncActionGeneric* UBlueprintAsyncActionGeneric::BeginAsyncTask(class UObject* Owner, const struct FScriptDelegate& Task)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.BlueprintAsyncActionGeneric.BeginAsyncTask"));

	struct
	{
		class UObject*                 Owner;
		struct FScriptDelegate         Task;
		class UBlueprintAsyncActionGeneric* ReturnValue;
	} params = {};

	params.Owner = Owner;
	params.Task = Task;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.UpdateVehicleSpeedModifier
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          NewVehicleSpeedModifier        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXCharacter::UpdateVehicleSpeedModifier(float NewVehicleSpeedModifier)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.UpdateVehicleSpeedModifier"));

	struct
	{
		float                          NewVehicleSpeedModifier;
	} params = {};

	params.NewVehicleSpeedModifier = NewVehicleSpeedModifier;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacter.UpdateDashCoolDown
// (FUNC_Final, FUNC_Native, FUNC_Public)

void AProjectXCharacter::UpdateDashCoolDown()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.UpdateDashCoolDown"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacter.TriggerDash
// (FUNC_Final, FUNC_Native, FUNC_Public)

void AProjectXCharacter::TriggerDash()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.TriggerDash"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacter.ToggleView
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bIsFirstPerson                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXCharacter::ToggleView(bool bIsFirstPerson)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.ToggleView"));

	struct
	{
		bool                           bIsFirstPerson;
	} params = {};

	params.bIsFirstPerson = bIsFirstPerson;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacter.ToggleMeshes
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bIsFirstPerson                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXCharacter::ToggleMeshes(bool bIsFirstPerson)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.ToggleMeshes"));

	struct
	{
		bool                           bIsFirstPerson;
	} params = {};

	params.bIsFirstPerson = bIsFirstPerson;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacter.StopCosmeticDash
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)

void AProjectXCharacter::StopCosmeticDash()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.StopCosmeticDash"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacter.StopContextualInteract
// (FUNC_Native, FUNC_Public)

void AProjectXCharacter::StopContextualInteract()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.StopContextualInteract"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacter.StaticGetWeaponList
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UClass* /*AProjectXCharacter*/ Class                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// EEquipSlot                     Slot                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TArray<class UClass* /*UWeaponInstance*/> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_UObjectWrapper, CPF_NativeAccessSpecifierPublic)

TArray<class UClass* /*UWeaponInstance*/> AProjectXCharacter::StaticGetWeaponList(class UClass* /*AProjectXCharacter*/ Class, EEquipSlot Slot)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.StaticGetWeaponList"));

	struct
	{
		class UClass* /*AProjectXCharacter*/ Class;
		EEquipSlot                     Slot;
		TArray<class UClass* /*UWeaponInstance*/> ReturnValue;
	} params = {};

	params.Class = Class;
	params.Slot = Slot;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.StaticGetPerkSlots
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UClass* /*AProjectXCharacter*/ Class                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TArray<EPerkType>              ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_NativeAccessSpecifierPublic)

TArray<EPerkType> AProjectXCharacter::StaticGetPerkSlots(class UClass* /*AProjectXCharacter*/ Class)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.StaticGetPerkSlots"));

	struct
	{
		class UClass* /*AProjectXCharacter*/ Class;
		TArray<EPerkType>              ReturnValue;
	} params = {};

	params.Class = Class;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.StaticGetNumberOfPerksSlots
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UClass* /*AProjectXCharacter*/ Class                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// unsigned char                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

unsigned char AProjectXCharacter::StaticGetNumberOfPerksSlots(class UClass* /*AProjectXCharacter*/ Class)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.StaticGetNumberOfPerksSlots"));

	struct
	{
		class UClass* /*AProjectXCharacter*/ Class;
		unsigned char                  ReturnValue;
	} params = {};

	params.Class = Class;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.StaticGetMaxShields
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UClass* /*AProjectXCharacter*/ Class                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int AProjectXCharacter::StaticGetMaxShields(class UClass* /*AProjectXCharacter*/ Class)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.StaticGetMaxShields"));

	struct
	{
		class UClass* /*AProjectXCharacter*/ Class;
		int                            ReturnValue;
	} params = {};

	params.Class = Class;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.StaticGetMaxJumps
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UClass* /*AProjectXCharacter*/ Class                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int AProjectXCharacter::StaticGetMaxJumps(class UClass* /*AProjectXCharacter*/ Class)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.StaticGetMaxJumps"));

	struct
	{
		class UClass* /*AProjectXCharacter*/ Class;
		int                            ReturnValue;
	} params = {};

	params.Class = Class;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.StaticGetMaxHealth
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UClass* /*AProjectXCharacter*/ Class                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int AProjectXCharacter::StaticGetMaxHealth(class UClass* /*AProjectXCharacter*/ Class)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.StaticGetMaxHealth"));

	struct
	{
		class UClass* /*AProjectXCharacter*/ Class;
		int                            ReturnValue;
	} params = {};

	params.Class = Class;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.StaticGetGroundSpeed
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UClass* /*AProjectXCharacter*/ Class                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AProjectXCharacter::StaticGetGroundSpeed(class UClass* /*AProjectXCharacter*/ Class)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.StaticGetGroundSpeed"));

	struct
	{
		class UClass* /*AProjectXCharacter*/ Class;
		float                          ReturnValue;
	} params = {};

	params.Class = Class;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.StaticGetDefaultCosmeticComponent
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UClass* /*AProjectXCharacter*/ Class                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UCosmeticsComponent*     ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UCosmeticsComponent* AProjectXCharacter::StaticGetDefaultCosmeticComponent(class UClass* /*AProjectXCharacter*/ Class)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.StaticGetDefaultCosmeticComponent"));

	struct
	{
		class UClass* /*AProjectXCharacter*/ Class;
		class UCosmeticsComponent*     ReturnValue;
	} params = {};

	params.Class = Class;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.StaticGetClassName
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UClass* /*AProjectXCharacter*/ Class                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FText                   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_NativeAccessSpecifierPublic)

struct FText AProjectXCharacter::StaticGetClassName(class UClass* /*AProjectXCharacter*/ Class)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.StaticGetClassName"));

	struct
	{
		class UClass* /*AProjectXCharacter*/ Class;
		struct FText                   ReturnValue;
	} params = {};

	params.Class = Class;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.StaticGetClassID
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UClass* /*AProjectXCharacter*/ Class                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FString                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FString AProjectXCharacter::StaticGetClassID(class UClass* /*AProjectXCharacter*/ Class)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.StaticGetClassID"));

	struct
	{
		class UClass* /*AProjectXCharacter*/ Class;
		struct FString                 ReturnValue;
	} params = {};

	params.Class = Class;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.StaticGetClassIcon
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UClass* /*AProjectXCharacter*/ Class                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UMaterialInstance> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

TSoftObjectPtr<class UMaterialInstance> AProjectXCharacter::StaticGetClassIcon(class UClass* /*AProjectXCharacter*/ Class)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.StaticGetClassIcon"));

	struct
	{
		class UClass* /*AProjectXCharacter*/ Class;
		TSoftObjectPtr<class UMaterialInstance> ReturnValue;
	} params = {};

	params.Class = Class;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.ShouldResetDashesOnKill
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXCharacter::ShouldResetDashesOnKill()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.ShouldResetDashesOnKill"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.SetOwnedPlayerState
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class APlayerState*            NewOwnedPlayerState            (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXCharacter::SetOwnedPlayerState(class APlayerState* NewOwnedPlayerState)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.SetOwnedPlayerState"));

	struct
	{
		class APlayerState*            NewOwnedPlayerState;
	} params = {};

	params.NewOwnedPlayerState = NewOwnedPlayerState;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacter.SetHealthRegenRate
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          NewRate                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXCharacter::SetHealthRegenRate(float NewRate)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.SetHealthRegenRate"));

	struct
	{
		float                          NewRate;
	} params = {};

	params.NewRate = NewRate;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacter.SetClassID
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// struct FString                 NewID                          (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXCharacter::SetClassID(const struct FString& NewID)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.SetClassID"));

	struct
	{
		struct FString                 NewID;
	} params = {};

	params.NewID = NewID;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacter.Server_UpdateBaseEyeHeightCache
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetServer)
// Parameters:
// float                          InBaseEyeHeight                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXCharacter::Server_UpdateBaseEyeHeightCache(float InBaseEyeHeight)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.Server_UpdateBaseEyeHeightCache"));

	struct
	{
		float                          InBaseEyeHeight;
	} params = {};

	params.InBaseEyeHeight = InBaseEyeHeight;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacter.Server_Unreliable_SendYawValue
// (FUNC_Net, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetServer)
// Parameters:
// uint16_t                       NewPawnPitchValue              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXCharacter::Server_Unreliable_SendYawValue(uint16_t NewPawnPitchValue)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.Server_Unreliable_SendYawValue"));

	struct
	{
		uint16_t                       NewPawnPitchValue;
	} params = {};

	params.NewPawnPitchValue = NewPawnPitchValue;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacter.Server_Unreliable_SendPitchValue
// (FUNC_Net, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetServer)
// Parameters:
// uint16_t                       NewPawnPitchValue              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXCharacter::Server_Unreliable_SendPitchValue(uint16_t NewPawnPitchValue)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.Server_Unreliable_SendPitchValue"));

	struct
	{
		uint16_t                       NewPawnPitchValue;
	} params = {};

	params.NewPawnPitchValue = NewPawnPitchValue;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacter.Server_Unreliable_SendPackedInput
// (FUNC_Net, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetServer)
// Parameters:
// unsigned char                  NewInput                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXCharacter::Server_Unreliable_SendPackedInput(unsigned char NewInput)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.Server_Unreliable_SendPackedInput"));

	struct
	{
		unsigned char                  NewInput;
	} params = {};

	params.NewInput = NewInput;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacter.Server_ToggleRun
// (FUNC_Final, FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Private, FUNC_NetServer, FUNC_NetValidate)
// Parameters:
// bool                           bToggle                        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXCharacter::Server_ToggleRun(bool bToggle)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.Server_ToggleRun"));

	struct
	{
		bool                           bToggle;
	} params = {};

	params.bToggle = bToggle;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacter.Server_ToggleHoldingBreath
// (FUNC_Final, FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Private, FUNC_NetServer, FUNC_NetValidate)
// Parameters:
// bool                           bToggle                        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXCharacter::Server_ToggleHoldingBreath(bool bToggle)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.Server_ToggleHoldingBreath"));

	struct
	{
		bool                           bToggle;
	} params = {};

	params.bToggle = bToggle;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacter.Server_ToggleFastFall
// (FUNC_Final, FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Private, FUNC_NetServer, FUNC_NetValidate)
// Parameters:
// bool                           bToggle                        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXCharacter::Server_ToggleFastFall(bool bToggle)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.Server_ToggleFastFall"));

	struct
	{
		bool                           bToggle;
	} params = {};

	params.bToggle = bToggle;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacter.Server_ToggleBoosting
// (FUNC_Final, FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Private, FUNC_NetServer, FUNC_NetValidate)
// Parameters:
// bool                           bToggle                        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXCharacter::Server_ToggleBoosting(bool bToggle)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.Server_ToggleBoosting"));

	struct
	{
		bool                           bToggle;
	} params = {};

	params.bToggle = bToggle;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacter.Server_SpawnGraffiti
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetServer)
// Parameters:
// struct FHitResult              Hit                            (CPF_ConstParm, CPF_Parm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

void AProjectXCharacter::Server_SpawnGraffiti(const struct FHitResult& Hit)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.Server_SpawnGraffiti"));

	struct
	{
		struct FHitResult              Hit;
	} params = {};

	params.Hit = Hit;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacter.Server_Reliable_StartDashMovement
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetServer)

void AProjectXCharacter::Server_Reliable_StartDashMovement()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.Server_Reliable_StartDashMovement"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacter.Server_Reliable_EnterVehicle
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetServer, FUNC_NetValidate)
// Parameters:
// class AProjectXVehicle*        InVehicle                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UVehicleSeatComponent*   PreferredSeat                  (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXCharacter::Server_Reliable_EnterVehicle(class AProjectXVehicle* InVehicle, class UVehicleSeatComponent* PreferredSeat)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.Server_Reliable_EnterVehicle"));

	struct
	{
		class AProjectXVehicle*        InVehicle;
		class UVehicleSeatComponent*   PreferredSeat;
	} params = {};

	params.InVehicle = InVehicle;
	params.PreferredSeat = PreferredSeat;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacter.ResetPlayerMovement
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void AProjectXCharacter::ResetPlayerMovement()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.ResetPlayerMovement"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacter.PlayTaunt
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// unsigned char                  TauntNumber                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXCharacter::PlayTaunt(unsigned char TauntNumber)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.PlayTaunt"));

	struct
	{
		unsigned char                  TauntNumber;
	} params = {};

	params.TauntNumber = TauntNumber;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacter.OnWeaponAdded
// (FUNC_Final, FUNC_Native, FUNC_Public)
// Parameters:
// class UWeaponInstance*         Weapon                         (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXCharacter::OnWeaponAdded(class UWeaponInstance* Weapon)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.OnWeaponAdded"));

	struct
	{
		class UWeaponInstance*         Weapon;
	} params = {};

	params.Weapon = Weapon;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacter.OnTightAimingStop
// (FUNC_Native, FUNC_Public)

void AProjectXCharacter::OnTightAimingStop()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.OnTightAimingStop"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacter.OnTauntToggled
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)
// Parameters:
// bool                           bTauntOn                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXCharacter::OnTauntToggled(bool bTauntOn)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.OnTauntToggled"));

	struct
	{
		bool                           bTauntOn;
	} params = {};

	params.bTauntOn = bTauntOn;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacter.OnRep_YawPitch
// (FUNC_Native, FUNC_Public)

void AProjectXCharacter::OnRep_YawPitch()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.OnRep_YawPitch"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacter.OnRep_Visibility
// (FUNC_Native, FUNC_Public)

void AProjectXCharacter::OnRep_Visibility()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.OnRep_Visibility"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacter.OnRep_Vehicle
// (FUNC_Native, FUNC_Public)

void AProjectXCharacter::OnRep_Vehicle()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.OnRep_Vehicle"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacter.OnRep_Stamina
// (FUNC_Final, FUNC_Native, FUNC_Public)

void AProjectXCharacter::OnRep_Stamina()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.OnRep_Stamina"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacter.OnRep_Shields
// (FUNC_Native, FUNC_Public)
// Parameters:
// float                          PreviousShields                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXCharacter::OnRep_Shields(float PreviousShields)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.OnRep_Shields"));

	struct
	{
		float                          PreviousShields;
	} params = {};

	params.PreviousShields = PreviousShields;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacter.OnRep_IsHoldingBreath
// (FUNC_Native, FUNC_Public)

void AProjectXCharacter::OnRep_IsHoldingBreath()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.OnRep_IsHoldingBreath"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacter.OnRep_IsDashing
// (FUNC_Native, FUNC_Public)

void AProjectXCharacter::OnRep_IsDashing()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.OnRep_IsDashing"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacter.OnRep_IsBoosting
// (FUNC_Native, FUNC_Public)

void AProjectXCharacter::OnRep_IsBoosting()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.OnRep_IsBoosting"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacter.OnRep_Health
// (FUNC_Native, FUNC_Public)
// Parameters:
// float                          PreviousHealth                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXCharacter::OnRep_Health(float PreviousHealth)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.OnRep_Health"));

	struct
	{
		float                          PreviousHealth;
	} params = {};

	params.PreviousHealth = PreviousHealth;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacter.OnRep_CanStealth
// (FUNC_Native, FUNC_Public)

void AProjectXCharacter::OnRep_CanStealth()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.OnRep_CanStealth"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacter.OnRep_CanRotate
// (FUNC_Native, FUNC_Public)

void AProjectXCharacter::OnRep_CanRotate()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.OnRep_CanRotate"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacter.OnEnterVehicle
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class AProjectXVehicle*        InVehicle                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UVehicleSeatComponent*   Seat                           (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXCharacter::OnEnterVehicle(class AProjectXVehicle* InVehicle, class UVehicleSeatComponent* Seat)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.OnEnterVehicle"));

	struct
	{
		class AProjectXVehicle*        InVehicle;
		class UVehicleSeatComponent*   Seat;
	} params = {};

	params.InVehicle = InVehicle;
	params.Seat = Seat;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacter.Multicast_SpawnGraffiti
// (FUNC_Net, FUNC_Native, FUNC_Event, FUNC_NetMulticast, FUNC_Public)
// Parameters:
// struct FHitResult              Hit                            (CPF_ConstParm, CPF_Parm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

void AProjectXCharacter::Multicast_SpawnGraffiti(const struct FHitResult& Hit)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.Multicast_SpawnGraffiti"));

	struct
	{
		struct FHitResult              Hit;
	} params = {};

	params.Hit = Hit;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacter.Multicast_PlayMontage
// (FUNC_Net, FUNC_Native, FUNC_Event, FUNC_NetMulticast, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UAnimMontage*            Montage                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXCharacter::Multicast_PlayMontage(class UAnimMontage* Montage)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.Multicast_PlayMontage"));

	struct
	{
		class UAnimMontage*            Montage;
	} params = {};

	params.Montage = Montage;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacter.Multicast_Die
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_NetMulticast, FUNC_Public)
// Parameters:
// float                          Damage                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FDamageEvent            DamageEvent                    (CPF_ConstParm, CPF_Parm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// class AController*             EventInstigator                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FHitResult              Hit                            (CPF_ConstParm, CPF_Parm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)
// class APlayerState*            InstigatorPlayerState          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXCharacter::Multicast_Die(float Damage, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser, const struct FHitResult& Hit, class APlayerState* InstigatorPlayerState)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.Multicast_Die"));

	struct
	{
		float                          Damage;
		struct FDamageEvent            DamageEvent;
		class AController*             EventInstigator;
		class AActor*                  DamageCauser;
		struct FHitResult              Hit;
		class APlayerState*            InstigatorPlayerState;
	} params = {};

	params.Damage = Damage;
	params.DamageEvent = DamageEvent;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;
	params.Hit = Hit;
	params.InstigatorPlayerState = InstigatorPlayerState;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacter.ModifyStatOverTime
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// ECharacterStat                 StatType                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          StatDelta                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          Time                           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXCharacter::ModifyStatOverTime(ECharacterStat StatType, float StatDelta, float Time)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.ModifyStatOverTime"));

	struct
	{
		ECharacterStat                 StatType;
		float                          StatDelta;
		float                          Time;
	} params = {};

	params.StatType = StatType;
	params.StatDelta = StatDelta;
	params.Time = Time;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacter.ModifyStamina
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          StaminaDelta                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXCharacter::ModifyStamina(float StaminaDelta)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.ModifyStamina"));

	struct
	{
		float                          StaminaDelta;
	} params = {};

	params.StaminaDelta = StaminaDelta;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacter.MenuToggled
// (FUNC_Native, FUNC_Public)
// Parameters:
// class UAdvancedUserWidget*     Widget                         (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bToggle                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXCharacter::MenuToggled(class UAdvancedUserWidget* Widget, bool bToggle)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.MenuToggled"));

	struct
	{
		class UAdvancedUserWidget*     Widget;
		bool                           bToggle;
	} params = {};

	params.Widget = Widget;
	params.bToggle = bToggle;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacter.LeaveCurrentVehicle
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bForce                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bEject                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXCharacter::LeaveCurrentVehicle(bool bForce, bool bEject)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.LeaveCurrentVehicle"));

	struct
	{
		bool                           bForce;
		bool                           bEject;
		bool                           ReturnValue;
	} params = {};

	params.bForce = bForce;
	params.bEject = bEject;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.IsValidTarget
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXCharacter::IsValidTarget()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.IsValidTarget"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.IsRunning
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXCharacter::IsRunning()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.IsRunning"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.IsProvidingInput
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// EInputDirection                Direction                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXCharacter::IsProvidingInput(EInputDirection Direction)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.IsProvidingInput"));

	struct
	{
		EInputDirection                Direction;
		bool                           ReturnValue;
	} params = {};

	params.Direction = Direction;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.IsMovingForward
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXCharacter::IsMovingForward()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.IsMovingForward"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.IsMoving
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXCharacter::IsMoving()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.IsMoving"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.IsLocallyPlayerControlled
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXCharacter::IsLocallyPlayerControlled()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.IsLocallyPlayerControlled"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.IsInVehicle
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXCharacter::IsInVehicle()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.IsInVehicle"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.IsInPersonalVehicle
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXCharacter::IsInPersonalVehicle()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.IsInPersonalVehicle"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.IsHoldingBreath
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXCharacter::IsHoldingBreath()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.IsHoldingBreath"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.IsFastFalling
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXCharacter::IsFastFalling()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.IsFastFalling"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.IsDriving
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXCharacter::IsDriving()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.IsDriving"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.IsDeferingDashChargesInAir
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXCharacter::IsDeferingDashChargesInAir()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.IsDeferingDashChargesInAir"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.IsBoosting
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXCharacter::IsBoosting()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.IsBoosting"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.IsAllowedToStealth
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXCharacter::IsAllowedToStealth()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.IsAllowedToStealth"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.IsAllowedToJump
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXCharacter::IsAllowedToJump()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.IsAllowedToJump"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.HandleDeathEffects
// (FUNC_Event, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintEvent)
// Parameters:
// struct FDeathEffectInfo        DeathEffectInfo                (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

void AProjectXCharacter::HandleDeathEffects(const struct FDeathEffectInfo& DeathEffectInfo)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.HandleDeathEffects"));

	struct
	{
		struct FDeathEffectInfo        DeathEffectInfo;
	} params = {};

	params.DeathEffectInfo = DeathEffectInfo;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacter.GetWeaponList
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// EEquipSlot                     Slot                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TArray<class UClass* /*UWeaponInstance*/> ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_ReferenceParm, CPF_UObjectWrapper, CPF_NativeAccessSpecifierPublic)

TArray<class UClass* /*UWeaponInstance*/> AProjectXCharacter::GetWeaponList(EEquipSlot Slot)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.GetWeaponList"));

	struct
	{
		EEquipSlot                     Slot;
		TArray<class UClass* /*UWeaponInstance*/> ReturnValue;
	} params = {};

	params.Slot = Slot;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.GetWeaponComponent
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UWeaponComponent*        ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UWeaponComponent* AProjectXCharacter::GetWeaponComponent()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.GetWeaponComponent"));

	struct
	{
		class UWeaponComponent*        ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.GetVisibilityChangedTimeStamp
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AProjectXCharacter::GetVisibilityChangedTimeStamp()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.GetVisibilityChangedTimeStamp"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.GetVehicleSpeedModifier
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AProjectXCharacter::GetVehicleSpeedModifier()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.GetVehicleSpeedModifier"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.GetVehicle
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AProjectXVehicle*        ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class AProjectXVehicle* AProjectXCharacter::GetVehicle()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.GetVehicle"));

	struct
	{
		class AProjectXVehicle*        ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.GetTimeSinceLostGroundedness
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AProjectXCharacter::GetTimeSinceLostGroundedness()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.GetTimeSinceLostGroundedness"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.GetTicketPickupMultiplier
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AProjectXCharacter::GetTicketPickupMultiplier()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.GetTicketPickupMultiplier"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.GetTeam
// (FUNC_Native, FUNC_Public, FUNC_Const)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int AProjectXCharacter::GetTeam()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.GetTeam"));

	struct
	{
		int                            ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.GetStamina
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AProjectXCharacter::GetStamina()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.GetStamina"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.GetRunMultiplier
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AProjectXCharacter::GetRunMultiplier()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.GetRunMultiplier"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.GetReviveBeaconClass
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UClass* /*APickupReviveBeacon*/ ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UClass* /*APickupReviveBeacon*/ AProjectXCharacter::GetReviveBeaconClass()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.GetReviveBeaconClass"));

	struct
	{
		class UClass* /*APickupReviveBeacon*/ ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.GetProjectXCharacterMovement
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UProjectXCharacterMovement* ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UProjectXCharacterMovement* AProjectXCharacter::GetProjectXCharacterMovement()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.GetProjectXCharacterMovement"));

	struct
	{
		class UProjectXCharacterMovement* ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.GetPlayerController
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AProjectXPlayerController* ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class AProjectXPlayerController* AProjectXCharacter::GetPlayerController()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.GetPlayerController"));

	struct
	{
		class AProjectXPlayerController* ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.GetPlayerClassName
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FText                   ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)

struct FText AProjectXCharacter::GetPlayerClassName()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.GetPlayerClassName"));

	struct
	{
		struct FText                   ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.GetPerkSlots
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// TArray<EPerkType>              ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)

TArray<EPerkType> AProjectXCharacter::GetPerkSlots()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.GetPerkSlots"));

	struct
	{
		TArray<EPerkType>              ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.GetMaxDashes
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int AProjectXCharacter::GetMaxDashes()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.GetMaxDashes"));

	struct
	{
		int                            ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.GetKillCamWidgetPlacementPivot
// (FUNC_Event, FUNC_Public, FUNC_HasDefaults, FUNC_BlueprintEvent, FUNC_Const)
// Parameters:
// struct FVector                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FVector AProjectXCharacter::GetKillCamWidgetPlacementPivot()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.GetKillCamWidgetPlacementPivot"));

	struct
	{
		struct FVector                 ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.GetKillCamMeshes
// (FUNC_Native, FUNC_Public, FUNC_Const)
// Parameters:
// TArray<class UMeshComponent*>  ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

TArray<class UMeshComponent*> AProjectXCharacter::GetKillCamMeshes()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.GetKillCamMeshes"));

	struct
	{
		TArray<class UMeshComponent*>  ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.GetJumpStaminaCost
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AProjectXCharacter::GetJumpStaminaCost()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.GetJumpStaminaCost"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.GetInteractionComponent
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UInteractionComponent*   ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UInteractionComponent* AProjectXCharacter::GetInteractionComponent()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.GetInteractionComponent"));

	struct
	{
		class UInteractionComponent*   ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.GetIcon
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// TSoftObjectPtr<class UMaterialInstance> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

TSoftObjectPtr<class UMaterialInstance> AProjectXCharacter::GetIcon()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.GetIcon"));

	struct
	{
		TSoftObjectPtr<class UMaterialInstance> ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.GetHookshotComponent
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UHookshotComponent*      ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UHookshotComponent* AProjectXCharacter::GetHookshotComponent()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.GetHookshotComponent"));

	struct
	{
		class UHookshotComponent*      ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.GetHealthReturnOnExpEvent
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// EXPEventType                   Event                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AProjectXCharacter::GetHealthReturnOnExpEvent(EXPEventType Event)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.GetHealthReturnOnExpEvent"));

	struct
	{
		EXPEventType                   Event;
		float                          ReturnValue;
	} params = {};

	params.Event = Event;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.GetFollowCamera
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UCameraComponent*        ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UCameraComponent* AProjectXCharacter::GetFollowCamera()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.GetFollowCamera"));

	struct
	{
		class UCameraComponent*        ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.GetFirstPersonFollowComponent
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class USceneComponent*         ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class USceneComponent* AProjectXCharacter::GetFirstPersonFollowComponent()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.GetFirstPersonFollowComponent"));

	struct
	{
		class USceneComponent*         ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.GetFirstPersonCamera
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UCameraComponent*        ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UCameraComponent* AProjectXCharacter::GetFirstPersonCamera()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.GetFirstPersonCamera"));

	struct
	{
		class UCameraComponent*        ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.GetEquippedWeaponList
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AProjectXPlayerState*    OwningPlayerState              (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TMap<EEquipSlot, class UClass* /*UWeaponInstance*/> FoundEquippedWeapons           (CPF_Parm, CPF_OutParm, CPF_UObjectWrapper, CPF_NativeAccessSpecifierPublic)

void AProjectXCharacter::GetEquippedWeaponList(class AProjectXPlayerState* OwningPlayerState, TMap<EEquipSlot, class UClass* /*UWeaponInstance*/>* FoundEquippedWeapons)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.GetEquippedWeaponList"));

	struct
	{
		class AProjectXPlayerState*    OwningPlayerState;
		TMap<EEquipSlot, class UClass* /*UWeaponInstance*/> FoundEquippedWeapons;
	} params = {};

	params.OwningPlayerState = OwningPlayerState;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	if (FoundEquippedWeapons != nullptr)
		*FoundEquippedWeapons = params.FoundEquippedWeapons;
}


// Function ProjectX.ProjectXCharacter.GetDamageHistoryComponent
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UDamageHistoryComponent* ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UDamageHistoryComponent* AProjectXCharacter::GetDamageHistoryComponent()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.GetDamageHistoryComponent"));

	struct
	{
		class UDamageHistoryComponent* ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.GetCrouchedRunMultiplier
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AProjectXCharacter::GetCrouchedRunMultiplier()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.GetCrouchedRunMultiplier"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.GetCosmeticsComponent
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UCosmeticsComponent*     ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UCosmeticsComponent* AProjectXCharacter::GetCosmeticsComponent()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.GetCosmeticsComponent"));

	struct
	{
		class UCosmeticsComponent*     ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.GetClassID
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FString                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FString AProjectXCharacter::GetClassID()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.GetClassID"));

	struct
	{
		struct FString                 ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.GetCameraBoom
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class USpringArmComponent*     ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class USpringArmComponent* AProjectXCharacter::GetCameraBoom()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.GetCameraBoom"));

	struct
	{
		class USpringArmComponent*     ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.GetAmbianceComponent
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UAmbianceComponent*      ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UAmbianceComponent* AProjectXCharacter::GetAmbianceComponent()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.GetAmbianceComponent"));

	struct
	{
		class UAmbianceComponent*      ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.GetActorUnderControl
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AActor*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class AActor* AProjectXCharacter::GetActorUnderControl()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.GetActorUnderControl"));

	struct
	{
		class AActor*                  ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.FindCameraFollowTarget
// (FUNC_Final, FUNC_Native, FUNC_Private)

void AProjectXCharacter::FindCameraFollowTarget()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.FindCameraFollowTarget"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacter.ContextualInteract
// (FUNC_Native, FUNC_Public)

void AProjectXCharacter::ContextualInteract()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.ContextualInteract"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacter.Client_ToggleRun
// (FUNC_Final, FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Private, FUNC_NetClient)
// Parameters:
// bool                           bToggle                        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXCharacter::Client_ToggleRun(bool bToggle)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.Client_ToggleRun"));

	struct
	{
		bool                           bToggle;
	} params = {};

	params.bToggle = bToggle;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacter.Client_ToggleFastFall
// (FUNC_Final, FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Private, FUNC_NetClient)
// Parameters:
// bool                           bToggle                        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXCharacter::Client_ToggleFastFall(bool bToggle)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.Client_ToggleFastFall"));

	struct
	{
		bool                           bToggle;
	} params = {};

	params.bToggle = bToggle;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacter.Client_StatOverTimeStarted
// (FUNC_Final, FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Private, FUNC_NetClient)
// Parameters:
// ECharacterStat                 StatType                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          StatDelta                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          Time                           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXCharacter::Client_StatOverTimeStarted(ECharacterStat StatType, float StatDelta, float Time)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.Client_StatOverTimeStarted"));

	struct
	{
		ECharacterStat                 StatType;
		float                          StatDelta;
		float                          Time;
	} params = {};

	params.StatType = StatType;
	params.StatDelta = StatDelta;
	params.Time = Time;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacter.Client_HitNotification
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetClient)
// Parameters:
// float                          Damage                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bHeadshot                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UClass* /*UDamageType*/  DamageType                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  DamagingActor                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          RadialDamageLerp               (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXCharacter::Client_HitNotification(float Damage, bool bHeadshot, class UClass* /*UDamageType*/ DamageType, class AActor* DamagingActor, float RadialDamageLerp)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.Client_HitNotification"));

	struct
	{
		float                          Damage;
		bool                           bHeadshot;
		class UClass* /*UDamageType*/  DamageType;
		class AActor*                  DamagingActor;
		float                          RadialDamageLerp;
	} params = {};

	params.Damage = Damage;
	params.bHeadshot = bHeadshot;
	params.DamageType = DamageType;
	params.DamagingActor = DamagingActor;
	params.RadialDamageLerp = RadialDamageLerp;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacter.CanWaterRun
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXCharacter::CanWaterRun()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.CanWaterRun"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.CanRagdoll
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXCharacter::CanRagdoll()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.CanRagdoll"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.CanEnterVehicle
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AProjectXVehicle*        InVehicle                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXCharacter::CanEnterVehicle(class AProjectXVehicle* InVehicle)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.CanEnterVehicle"));

	struct
	{
		class AProjectXVehicle*        InVehicle;
		bool                           ReturnValue;
	} params = {};

	params.InVehicle = InVehicle;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.CanDash
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXCharacter::CanDash()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.CanDash"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacter.ApplyDamageTypeResistance
// (FUNC_Native, FUNC_Public)
// Parameters:
// float                          InDamage                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UClass* /*UDamageType*/  InDamageType                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AProjectXCharacter::ApplyDamageTypeResistance(float InDamage, class UClass* /*UDamageType*/ InDamageType)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacter.ApplyDamageTypeResistance"));

	struct
	{
		float                          InDamage;
		class UClass* /*UDamageType*/  InDamageType;
		float                          ReturnValue;
	} params = {};

	params.InDamage = InDamage;
	params.InDamageType = InDamageType;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacterAnimInstance3P.TightAimStop
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void UProjectXCharacterAnimInstance3P::TightAimStop()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacterAnimInstance3P.TightAimStop"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacterAnimInstance3P.TightAimStart
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void UProjectXCharacterAnimInstance3P::TightAimStart()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacterAnimInstance3P.TightAimStart"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacterAnimInstance3P.OnVehicleChanged
// (FUNC_Final, FUNC_Native, FUNC_Protected)
// Parameters:
// class AProjectXCharacter*      Driver                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AProjectXVehicle*        CurrentVehicle                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AProjectXVehicle*        PreviousVehicle                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UProjectXCharacterAnimInstance3P::OnVehicleChanged(class AProjectXCharacter* Driver, class AProjectXVehicle* CurrentVehicle, class AProjectXVehicle* PreviousVehicle)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacterAnimInstance3P.OnVehicleChanged"));

	struct
	{
		class AProjectXCharacter*      Driver;
		class AProjectXVehicle*        CurrentVehicle;
		class AProjectXVehicle*        PreviousVehicle;
	} params = {};

	params.Driver = Driver;
	params.CurrentVehicle = CurrentVehicle;
	params.PreviousVehicle = PreviousVehicle;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacterAnimInstance3P.HookshotStop
// (FUNC_Final, FUNC_Native, FUNC_Protected)
// Parameters:
// class UHookshotComponent*      HookshotComponent              (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UProjectXCharacterAnimInstance3P::HookshotStop(class UHookshotComponent* HookshotComponent)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacterAnimInstance3P.HookshotStop"));

	struct
	{
		class UHookshotComponent*      HookshotComponent;
	} params = {};

	params.HookshotComponent = HookshotComponent;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacterAnimInstance3P.HookshotStart
// (FUNC_Final, FUNC_Native, FUNC_Protected)
// Parameters:
// class UHookshotComponent*      HookshotComponent              (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UProjectXCharacterAnimInstance3P::HookshotStart(class UHookshotComponent* HookshotComponent)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacterAnimInstance3P.HookshotStart"));

	struct
	{
		class UHookshotComponent*      HookshotComponent;
	} params = {};

	params.HookshotComponent = HookshotComponent;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacterAnimInstance3P.CrouchChanged
// (FUNC_Final, FUNC_Native, FUNC_Protected)
// Parameters:
// bool                           bToggle                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UProjectXCharacterAnimInstance3P::CrouchChanged(bool bToggle)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacterAnimInstance3P.CrouchChanged"));

	struct
	{
		bool                           bToggle;
	} params = {};

	params.bToggle = bToggle;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacterMovement.SetSlopeInstanceMultiplierFromSpeed
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// float                          Speed                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UProjectXCharacterMovement::SetSlopeInstanceMultiplierFromSpeed(float Speed)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacterMovement.SetSlopeInstanceMultiplierFromSpeed"));

	struct
	{
		float                          Speed;
	} params = {};

	params.Speed = Speed;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacterMovement.OnLanded
// (FUNC_Native, FUNC_Protected, FUNC_HasOutParms)
// Parameters:
// struct FHitResult              HitResult                      (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

void UProjectXCharacterMovement::OnLanded(const struct FHitResult& HitResult)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacterMovement.OnLanded"));

	struct
	{
		struct FHitResult              HitResult;
	} params = {};

	params.HitResult = HitResult;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacterMovement.OnCharacterInputDisabled
// (FUNC_Native, FUNC_Protected)

void UProjectXCharacterMovement::OnCharacterInputDisabled()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacterMovement.OnCharacterInputDisabled"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacterMovement.IsRunningOnWater
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UProjectXCharacterMovement::IsRunningOnWater()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacterMovement.IsRunningOnWater"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacterMovement.GetTimeMovementStoppedAt
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UProjectXCharacterMovement::GetTimeMovementStoppedAt()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacterMovement.GetTimeMovementStoppedAt"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacterMovement.GetTimeMovementStartedAt
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UProjectXCharacterMovement::GetTimeMovementStartedAt()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacterMovement.GetTimeMovementStartedAt"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacterMovement.GetSlopeInstanceMultiplier
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UProjectXCharacterMovement::GetSlopeInstanceMultiplier()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacterMovement.GetSlopeInstanceMultiplier"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacterMovement.GetSlopeInstance
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UProjectXCharacterMovement::GetSlopeInstance()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacterMovement.GetSlopeInstance"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacterMovement.GetMaxPossibleSpeed
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UProjectXCharacterMovement::GetMaxPossibleSpeed()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacterMovement.GetMaxPossibleSpeed"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacterMovement.GetHookShotLength
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UProjectXCharacterMovement::GetHookShotLength()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacterMovement.GetHookShotLength"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacterMovement.GetGroundFrictionCache
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UProjectXCharacterMovement::GetGroundFrictionCache()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacterMovement.GetGroundFrictionCache"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacterMovement.GetDeltaSlope
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UProjectXCharacterMovement::GetDeltaSlope()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacterMovement.GetDeltaSlope"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacterMovement.GetCrouchSpeedModifier
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UProjectXCharacterMovement::GetCrouchSpeedModifier()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacterMovement.GetCrouchSpeedModifier"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXCharacterMovement.Client_Reliable_JetPackShutdown
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetClient)
// Parameters:
// float                          WorldTime                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UProjectXCharacterMovement::Client_Reliable_JetPackShutdown(float WorldTime)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacterMovement.Client_Reliable_JetPackShutdown"));

	struct
	{
		float                          WorldTime;
	} params = {};

	params.WorldTime = WorldTime;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXCharacterMovement.Client_Reliable_HookshotShutdown
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetClient)

void UProjectXCharacterMovement::Client_Reliable_HookshotShutdown()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXCharacterMovement.Client_Reliable_HookshotShutdown"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameInstance.UpdateSortParameters
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// ESortParameter                 SortParamater                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bSortDescending                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TArray<struct FServerInfo>     Info                           (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// TArray<struct FServerInfo>     SortedInfos                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_NativeAccessSpecifierPublic)

void UProjectXGameInstance::UpdateSortParameters(ESortParameter SortParamater, bool bSortDescending, TArray<struct FServerInfo> Info, TArray<struct FServerInfo>* SortedInfos)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.UpdateSortParameters"));

	struct
	{
		ESortParameter                 SortParamater;
		bool                           bSortDescending;
		TArray<struct FServerInfo>     Info;
		TArray<struct FServerInfo>     SortedInfos;
	} params = {};

	params.SortParamater = SortParamater;
	params.bSortDescending = bSortDescending;
	params.Info = Info;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	if (SortedInfos != nullptr)
		*SortedInfos = params.SortedInfos;
}


// Function ProjectX.ProjectXGameInstance.UpdateClientPassword
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// struct FString                 NewPassword                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UProjectXGameInstance::UpdateClientPassword(struct FString* NewPassword)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.UpdateClientPassword"));

	struct
	{
		struct FString                 NewPassword;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	if (NewPassword != nullptr)
		*NewPassword = params.NewPassword;
}


// Function ProjectX.ProjectXGameInstance.UnlinkTwitchAccount
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void UProjectXGameInstance::UnlinkTwitchAccount()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.UnlinkTwitchAccount"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameInstance.ShowFoundersPrompt
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UProjectXGameInstance::ShowFoundersPrompt()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.ShowFoundersPrompt"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameInstance.SetKickReason
// (FUNC_Native, FUNC_Public)
// Parameters:
// struct FString                 InKickReason                   (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UProjectXGameInstance::SetKickReason(const struct FString& InKickReason)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.SetKickReason"));

	struct
	{
		struct FString                 InKickReason;
	} params = {};

	params.InKickReason = InKickReason;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameInstance.SetCaptureBackBuffer
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bCaptureBackBuffer             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UProjectXGameInstance::SetCaptureBackBuffer(bool bCaptureBackBuffer)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.SetCaptureBackBuffer"));

	struct
	{
		bool                           bCaptureBackBuffer;
	} params = {};

	params.bCaptureBackBuffer = bCaptureBackBuffer;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameInstance.RequestUserInfo
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// struct FString                 PlayerID                       (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UProjectXGameInstance::RequestUserInfo(const struct FString& PlayerID)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.RequestUserInfo"));

	struct
	{
		struct FString                 PlayerID;
	} params = {};

	params.PlayerID = PlayerID;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameInstance.OverrideAuthoritativeStat
// (FUNC_Final, FUNC_Exec, FUNC_Native, FUNC_Public)
// Parameters:
// struct FString                 StatKey                        (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            Value                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UProjectXGameInstance::OverrideAuthoritativeStat(const struct FString& StatKey, int Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.OverrideAuthoritativeStat"));

	struct
	{
		struct FString                 StatKey;
		int                            Value;
	} params = {};

	params.StatKey = StatKey;
	params.Value = Value;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameInstance.OnSearchSessionsComplete
// (FUNC_Final, FUNC_Native, FUNC_Private)
// Parameters:
// bool                           bWasSuccessful                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UProjectXGameInstance::OnSearchSessionsComplete(bool bWasSuccessful)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.OnSearchSessionsComplete"));

	struct
	{
		bool                           bWasSuccessful;
	} params = {};

	params.bWasSuccessful = bWasSuccessful;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameInstance.OnReadFriendListCompleteResponse
// (FUNC_Final, FUNC_Native, FUNC_Private)
// Parameters:
// int                            LocalUserNum                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bWasSuccessful                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FString                 ListName                       (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FString                 ErrorStr                       (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UProjectXGameInstance::OnReadFriendListCompleteResponse(int LocalUserNum, bool bWasSuccessful, const struct FString& ListName, const struct FString& ErrorStr)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.OnReadFriendListCompleteResponse"));

	struct
	{
		int                            LocalUserNum;
		bool                           bWasSuccessful;
		struct FString                 ListName;
		struct FString                 ErrorStr;
	} params = {};

	params.LocalUserNum = LocalUserNum;
	params.bWasSuccessful = bWasSuccessful;
	params.ListName = ListName;
	params.ErrorStr = ErrorStr;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameInstance.OnPostWorldOriginOffset
// (FUNC_Final, FUNC_Native, FUNC_Private, FUNC_HasDefaults)
// Parameters:
// class UWorld*                  InWorld                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FIntVector              PreviousOriginLocation         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FIntVector              NewOriginLocation              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UProjectXGameInstance::OnPostWorldOriginOffset(class UWorld* InWorld, const struct FIntVector& PreviousOriginLocation, const struct FIntVector& NewOriginLocation)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.OnPostWorldOriginOffset"));

	struct
	{
		class UWorld*                  InWorld;
		struct FIntVector              PreviousOriginLocation;
		struct FIntVector              NewOriginLocation;
	} params = {};

	params.InWorld = InWorld;
	params.PreviousOriginLocation = PreviousOriginLocation;
	params.NewOriginLocation = NewOriginLocation;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameInstance.OnPlatformDependentEngagementCompleted
// (FUNC_Native, FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)

void UProjectXGameInstance::OnPlatformDependentEngagementCompleted()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.OnPlatformDependentEngagementCompleted"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameInstance.OnNakamaConnected
// (FUNC_Native, FUNC_Public)

void UProjectXGameInstance::OnNakamaConnected()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.OnNakamaConnected"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameInstance.OnFriendsChanged
// (FUNC_Final, FUNC_Native, FUNC_Private)

void UProjectXGameInstance::OnFriendsChanged()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.OnFriendsChanged"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameInstance.LoadNakamaUsers
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// TArray<struct FString>         NakamaIds                      (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)

void UProjectXGameInstance::LoadNakamaUsers(TArray<struct FString> NakamaIds)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.LoadNakamaUsers"));

	struct
	{
		TArray<struct FString>         NakamaIds;
	} params = {};

	params.NakamaIds = NakamaIds;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameInstance.LinkTwitchAccount
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void UProjectXGameInstance::LinkTwitchAccount()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.LinkTwitchAccount"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameInstance.LevelToTarget
// (FUNC_Final, FUNC_Exec, FUNC_Native, FUNC_Public)
// Parameters:
// struct FString                 StatKey                        (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            Value                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UProjectXGameInstance::LevelToTarget(const struct FString& StatKey, int Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.LevelToTarget"));

	struct
	{
		struct FString                 StatKey;
		int                            Value;
	} params = {};

	params.StatKey = StatKey;
	params.Value = Value;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameInstance.LeaveSession
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void UProjectXGameInstance::LeaveSession()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.LeaveSession"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameInstance.JoinSession
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// struct FServerInfo             SessionInfo                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)

void UProjectXGameInstance::JoinSession(const struct FServerInfo& SessionInfo)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.JoinSession"));

	struct
	{
		struct FServerInfo             SessionInfo;
	} params = {};

	params.SessionInfo = SessionInfo;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameInstance.JoinBestSession
// (FUNC_Final, FUNC_Native, FUNC_Protected, FUNC_HasOutParms)
// Parameters:
// TArray<struct FServerInfo>     ServerInfos                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)

void UProjectXGameInstance::JoinBestSession(TArray<struct FServerInfo> ServerInfos)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.JoinBestSession"));

	struct
	{
		TArray<struct FServerInfo>     ServerInfos;
	} params = {};

	params.ServerInfos = ServerInfos;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameInstance.IsMatchmaking
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UProjectXGameInstance::IsMatchmaking()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.IsMatchmaking"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameInstance.IsLoginBonusAvailable
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UProjectXGameInstance::IsLoginBonusAvailable()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.IsLoginBonusAvailable"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameInstance.InitTwitch
// (FUNC_Final, FUNC_Native, FUNC_Public)

void UProjectXGameInstance::InitTwitch()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.InitTwitch"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameInstance.HasValidTwitchAccountLinked
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UProjectXGameInstance::HasValidTwitchAccountLinked()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.HasValidTwitchAccountLinked"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameInstance.HasOnlinePermissions
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// EProjectXPrivileges            PrivelegeToCheck               (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FScriptDelegate         Callback                       (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

void UProjectXGameInstance::HasOnlinePermissions(EProjectXPrivileges PrivelegeToCheck, const struct FScriptDelegate& Callback)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.HasOnlinePermissions"));

	struct
	{
		EProjectXPrivileges            PrivelegeToCheck;
		struct FScriptDelegate         Callback;
	} params = {};

	params.PrivelegeToCheck = PrivelegeToCheck;
	params.Callback = Callback;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameInstance.GetWeaponList
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// TArray<class UClass* /*UWeaponInstance*/> WeaponList                     (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_UObjectWrapper, CPF_NativeAccessSpecifierPublic)
// EEquipSlot                     Slot                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UProjectXGameInstance::GetWeaponList(EEquipSlot Slot, TArray<class UClass* /*UWeaponInstance*/>* WeaponList)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.GetWeaponList"));

	struct
	{
		TArray<class UClass* /*UWeaponInstance*/> WeaponList;
		EEquipSlot                     Slot;
	} params = {};

	params.Slot = Slot;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	if (WeaponList != nullptr)
		*WeaponList = params.WeaponList;
}


// Function ProjectX.ProjectXGameInstance.GetVehicleClassList
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// TArray<class UClass* /*AProjectXVehicle*/> ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_ReferenceParm, CPF_UObjectWrapper, CPF_NativeAccessSpecifierPublic)

TArray<class UClass* /*AProjectXVehicle*/> UProjectXGameInstance::GetVehicleClassList()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.GetVehicleClassList"));

	struct
	{
		TArray<class UClass* /*AProjectXVehicle*/> ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameInstance.GetUnlockedItemsPlayerMayHaveMissed
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// ERewardType                    Type                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FRewardShowcase         FoundReward                    (CPF_Parm, CPF_OutParm, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UProjectXGameInstance::GetUnlockedItemsPlayerMayHaveMissed(ERewardType Type, struct FRewardShowcase* FoundReward)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.GetUnlockedItemsPlayerMayHaveMissed"));

	struct
	{
		ERewardType                    Type;
		struct FRewardShowcase         FoundReward;
		bool                           ReturnValue;
	} params = {};

	params.Type = Type;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	if (FoundReward != nullptr)
		*FoundReward = params.FoundReward;

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameInstance.GetTwitchAccountInfo
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FString                 Username                       (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FString                 Avatar                         (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UProjectXGameInstance::GetTwitchAccountInfo(struct FString* Username, struct FString* Avatar)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.GetTwitchAccountInfo"));

	struct
	{
		struct FString                 Username;
		struct FString                 Avatar;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	if (Username != nullptr)
		*Username = params.Username;
	if (Avatar != nullptr)
		*Avatar = params.Avatar;
}


// Function ProjectX.ProjectXGameInstance.GetSupportedLanguages
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// TArray<struct FText>           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_NativeAccessSpecifierPublic)

TArray<struct FText> UProjectXGameInstance::GetSupportedLanguages()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.GetSupportedLanguages"));

	struct
	{
		TArray<struct FText>           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameInstance.GetStatsTrackingManager
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UStatsTrackingManager*   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UStatsTrackingManager* UProjectXGameInstance::GetStatsTrackingManager()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.GetStatsTrackingManager"));

	struct
	{
		class UStatsTrackingManager*   ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameInstance.GetSquadmateColour
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FLinearColor            ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FLinearColor UProjectXGameInstance::GetSquadmateColour()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.GetSquadmateColour"));

	struct
	{
		struct FLinearColor            ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameInstance.GetSessionState
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// ESessionState                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

ESessionState UProjectXGameInstance::GetSessionState()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.GetSessionState"));

	struct
	{
		ESessionState                  ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameInstance.GetServerInfos
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// TArray<struct FServerInfo>     ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)

TArray<struct FServerInfo> UProjectXGameInstance::GetServerInfos()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.GetServerInfos"));

	struct
	{
		TArray<struct FServerInfo>     ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameInstance.GetRarityWeightTable
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UDataTable*              ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UDataTable* UProjectXGameInstance::GetRarityWeightTable()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.GetRarityWeightTable"));

	struct
	{
		class UDataTable*              ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameInstance.GetRarityColour
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// ERarity                        Rarity                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FLinearColor            ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FLinearColor UProjectXGameInstance::GetRarityColour(ERarity Rarity)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.GetRarityColour"));

	struct
	{
		ERarity                        Rarity;
		struct FLinearColor            ReturnValue;
	} params = {};

	params.Rarity = Rarity;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameInstance.GetPlayerClassList
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// TArray<class UClass* /*AProjectXCharacter*/> ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_ReferenceParm, CPF_UObjectWrapper, CPF_NativeAccessSpecifierPublic)

TArray<class UClass* /*AProjectXCharacter*/> UProjectXGameInstance::GetPlayerClassList()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.GetPlayerClassList"));

	struct
	{
		TArray<class UClass* /*AProjectXCharacter*/> ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameInstance.GetPerkTable
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UDataTable*              ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UDataTable* UProjectXGameInstance::GetPerkTable()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.GetPerkTable"));

	struct
	{
		class UDataTable*              ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameInstance.GetNakamaManager
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UNakamaManager*          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UNakamaManager* UProjectXGameInstance::GetNakamaManager()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.GetNakamaManager"));

	struct
	{
		class UNakamaManager*          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameInstance.GetMapCameraClass
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UClass* /*AProjectXMapCamera*/ ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UClass* /*AProjectXMapCamera*/ UProjectXGameInstance::GetMapCameraClass()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.GetMapCameraClass"));

	struct
	{
		class UClass* /*AProjectXMapCamera*/ ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameInstance.GetLastOriginShiftDelta
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FIntVector              ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FIntVector UProjectXGameInstance::GetLastOriginShiftDelta()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.GetLastOriginShiftDelta"));

	struct
	{
		struct FIntVector              ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameInstance.GetInstanceUptime
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UProjectXGameInstance::GetInstanceUptime()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.GetInstanceUptime"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameInstance.GetFriendsList
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// TArray<struct FString>         ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)

TArray<struct FString> UProjectXGameInstance::GetFriendsList()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.GetFriendsList"));

	struct
	{
		TArray<struct FString>         ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameInstance.GetFoundersDLC
// (FUNC_Final, FUNC_Native, FUNC_Private)

void UProjectXGameInstance::GetFoundersDLC()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.GetFoundersDLC"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameInstance.GetEnemyColour
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FName                   ColourName                     (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FLinearColor            ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FLinearColor UProjectXGameInstance::GetEnemyColour(const struct FName& ColourName)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.GetEnemyColour"));

	struct
	{
		struct FName                   ColourName;
		struct FLinearColor            ReturnValue;
	} params = {};

	params.ColourName = ColourName;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameInstance.GetCurrentLevelNameForClients
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// struct FString                 LevelName                      (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UProjectXGameInstance::GetCurrentLevelNameForClients(struct FString* LevelName)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.GetCurrentLevelNameForClients"));

	struct
	{
		struct FString                 LevelName;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	if (LevelName != nullptr)
		*LevelName = params.LevelName;
}


// Function ProjectX.ProjectXGameInstance.GetCurrentLevelName
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// struct FString                 LevelName                      (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UProjectXGameInstance::GetCurrentLevelName(struct FString* LevelName)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.GetCurrentLevelName"));

	struct
	{
		struct FString                 LevelName;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	if (LevelName != nullptr)
		*LevelName = params.LevelName;
}


// Function ProjectX.ProjectXGameInstance.GetCurrentCulture
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FName                   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FName UProjectXGameInstance::GetCurrentCulture()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.GetCurrentCulture"));

	struct
	{
		struct FName                   ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameInstance.GetCosmeticsTable
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UDataTable*              ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UDataTable* UProjectXGameInstance::GetCosmeticsTable()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.GetCosmeticsTable"));

	struct
	{
		class UDataTable*              ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameInstance.GetCosmeticsManager
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UCosmeticsManager*       ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UCosmeticsManager* UProjectXGameInstance::GetCosmeticsManager()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.GetCosmeticsManager"));

	struct
	{
		class UCosmeticsManager*       ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameInstance.GetChallengeTable
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UDataTable*              ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UDataTable* UProjectXGameInstance::GetChallengeTable()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.GetChallengeTable"));

	struct
	{
		class UDataTable*              ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameInstance.GetAllyColour
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FName                   ColourName                     (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FLinearColor            ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FLinearColor UProjectXGameInstance::GetAllyColour(const struct FName& ColourName)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.GetAllyColour"));

	struct
	{
		struct FName                   ColourName;
		struct FLinearColor            ReturnValue;
	} params = {};

	params.ColourName = ColourName;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameInstance.GetAchievementMapNameList
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// TArray<struct FString>         ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)

TArray<struct FString> UProjectXGameInstance::GetAchievementMapNameList()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.GetAchievementMapNameList"));

	struct
	{
		TArray<struct FString>         ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameInstance.FindAndJoinBestSessionForTypes
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// TArray<EGameType>              GameTypes                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_NativeAccessSpecifierPublic)
// TArray<EDifficultyLevel>       Difficultylevels               (CPF_Parm, CPF_ZeroConstructor, CPF_NativeAccessSpecifierPublic)
// bool                           bShouldSearchFreshServersOnly  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UProjectXGameInstance::FindAndJoinBestSessionForTypes(TArray<EGameType> GameTypes, TArray<EDifficultyLevel> Difficultylevels, bool bShouldSearchFreshServersOnly)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.FindAndJoinBestSessionForTypes"));

	struct
	{
		TArray<EGameType>              GameTypes;
		TArray<EDifficultyLevel>       Difficultylevels;
		bool                           bShouldSearchFreshServersOnly;
	} params = {};

	params.GameTypes = GameTypes;
	params.Difficultylevels = Difficultylevels;
	params.bShouldSearchFreshServersOnly = bShouldSearchFreshServersOnly;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameInstance.FindAndJoinBestSession
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// EGameType                      GameType                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UProjectXGameInstance::FindAndJoinBestSession(EGameType GameType)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.FindAndJoinBestSession"));

	struct
	{
		EGameType                      GameType;
	} params = {};

	params.GameType = GameType;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameInstance.FindAllSessionsResponse
// (FUNC_Final, FUNC_Native, FUNC_Protected, FUNC_HasOutParms)
// Parameters:
// TArray<struct FServerInfo>     ServerInfos                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)

void UProjectXGameInstance::FindAllSessionsResponse(TArray<struct FServerInfo> ServerInfos)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.FindAllSessionsResponse"));

	struct
	{
		TArray<struct FServerInfo>     ServerInfos;
	} params = {};

	params.ServerInfos = ServerInfos;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameInstance.FindAllSessions
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bLan                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UProjectXGameInstance::FindAllSessions(bool bLan)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.FindAllSessions"));

	struct
	{
		bool                           bLan;
	} params = {};

	params.bLan = bLan;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameInstance.DoesServerOnlyAllowWhitelistedPlayers
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UProjectXGameInstance::DoesServerOnlyAllowWhitelistedPlayers()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.DoesServerOnlyAllowWhitelistedPlayers"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameInstance.ConsumeLoginBonus
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// struct FScriptDelegate         OnLoginBonusFound              (CPF_Parm, CPF_ZeroConstructor, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

void UProjectXGameInstance::ConsumeLoginBonus(const struct FScriptDelegate& OnLoginBonusFound)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.ConsumeLoginBonus"));

	struct
	{
		struct FScriptDelegate         OnLoginBonusFound;
	} params = {};

	params.OnLoginBonusFound = OnLoginBonusFound;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameInstance.ConsumeKickReason
// (FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// struct FString                 OutKickReason                  (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UProjectXGameInstance::ConsumeKickReason(struct FString* OutKickReason)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.ConsumeKickReason"));

	struct
	{
		struct FString                 OutKickReason;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	if (OutKickReason != nullptr)
		*OutKickReason = params.OutKickReason;
}


// Function ProjectX.ProjectXGameInstance.CheckReferAFriend
// (FUNC_Final, FUNC_Native, FUNC_Public)

void UProjectXGameInstance::CheckReferAFriend()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.CheckReferAFriend"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameInstance.CheckLoginBonus
// (FUNC_Final, FUNC_Native, FUNC_Public)

void UProjectXGameInstance::CheckLoginBonus()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.CheckLoginBonus"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameInstance.ChangeCulture
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// struct FName                   LanguageCode                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bPromptRestart                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bForce                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UProjectXGameInstance::ChangeCulture(const struct FName& LanguageCode, bool bPromptRestart, bool bForce)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.ChangeCulture"));

	struct
	{
		struct FName                   LanguageCode;
		bool                           bPromptRestart;
		bool                           bForce;
	} params = {};

	params.LanguageCode = LanguageCode;
	params.bPromptRestart = bPromptRestart;
	params.bForce = bForce;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameInstance.CanUpdateSessionState
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UProjectXGameInstance::CanUpdateSessionState()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.CanUpdateSessionState"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameInstance.CancelJoinSession
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void UProjectXGameInstance::CancelJoinSession()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.CancelJoinSession"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameInstance.AskForNakamaIdFromSteamID
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// struct FString                 SteamID                        (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FScriptDelegate         Callback                       (CPF_Parm, CPF_ZeroConstructor, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

void UProjectXGameInstance::AskForNakamaIdFromSteamID(const struct FString& SteamID, const struct FScriptDelegate& Callback)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameInstance.AskForNakamaIdFromSteamID"));

	struct
	{
		struct FString                 SteamID;
		struct FScriptDelegate         Callback;
	} params = {};

	params.SteamID = SteamID;
	params.Callback = Callback;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameMode.RequestServerTravel
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// struct FString                 URL                            (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXGameMode::RequestServerTravel(const struct FString& URL)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameMode.RequestServerTravel"));

	struct
	{
		struct FString                 URL;
		bool                           ReturnValue;
	} params = {};

	params.URL = URL;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameMode.GetGameModeDefaultObject
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AProjectXGameMode*       ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class AProjectXGameMode* AProjectXGameMode::GetGameModeDefaultObject(class UObject* WorldContextObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameMode.GetGameModeDefaultObject"));

	struct
	{
		class UObject*                 WorldContextObject;
		class AProjectXGameMode*       ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameMode.EndMatchTimer
// (FUNC_Native, FUNC_Public)

void AProjectXGameMode::EndMatchTimer()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameMode.EndMatchTimer"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameMode.ConsumeTicket
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// int                            Team                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            Amount                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXGameMode::ConsumeTicket(int Team, int Amount)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameMode.ConsumeTicket"));

	struct
	{
		int                            Team;
		int                            Amount;
		bool                           ReturnValue;
	} params = {};

	params.Team = Team;
	params.Amount = Amount;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameMode.AreLoadoutsEnabled
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXGameMode::AreLoadoutsEnabled()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameMode.AreLoadoutsEnabled"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameModeAllOutWarfare.OnShieldGeneratorDestroyed
// (FUNC_Native, FUNC_Protected)
// Parameters:
// class AShieldGenerator*        ShieldGenerator                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXGameModeAllOutWarfare::OnShieldGeneratorDestroyed(class AShieldGenerator* ShieldGenerator)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameModeAllOutWarfare.OnShieldGeneratorDestroyed"));

	struct
	{
		class AShieldGenerator*        ShieldGenerator;
	} params = {};

	params.ShieldGenerator = ShieldGenerator;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameModeAllOutWarfare.OnCommandCenterDestroyed
// (FUNC_Native, FUNC_Protected)
// Parameters:
// class ACommandCenter*          CommandCenter                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXGameModeAllOutWarfare::OnCommandCenterDestroyed(class ACommandCenter* CommandCenter)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameModeAllOutWarfare.OnCommandCenterDestroyed"));

	struct
	{
		class ACommandCenter*          CommandCenter;
	} params = {};

	params.CommandCenter = CommandCenter;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameModeAllOutWarfare.OnCapturePointOwnerChanged
// (FUNC_Native, FUNC_Protected)
// Parameters:
// int                            NewOwner                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class ACapturePoint*           Point                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXGameModeAllOutWarfare::OnCapturePointOwnerChanged(int NewOwner, class ACapturePoint* Point)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameModeAllOutWarfare.OnCapturePointOwnerChanged"));

	struct
	{
		int                            NewOwner;
		class ACapturePoint*           Point;
	} params = {};

	params.NewOwner = NewOwner;
	params.Point = Point;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameModeAllOutWarfare.OnCapturePointAttacked
// (FUNC_Native, FUNC_Protected)
// Parameters:
// int                            TeamTakingPoint                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class ACapturePoint*           Point                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXGameModeAllOutWarfare::OnCapturePointAttacked(int TeamTakingPoint, class ACapturePoint* Point)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameModeAllOutWarfare.OnCapturePointAttacked"));

	struct
	{
		int                            TeamTakingPoint;
		class ACapturePoint*           Point;
	} params = {};

	params.TeamTakingPoint = TeamTakingPoint;
	params.Point = Point;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameModeAssault.OnDeath
// (FUNC_Native, FUNC_Public)
// Parameters:
// class AController*             Killed                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AController*             Killer                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UClass* /*UProjectXDamageType*/ DamageType                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bWasHeadshot                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXGameModeAssault::OnDeath(class AController* Killed, class AController* Killer, class UClass* /*UProjectXDamageType*/ DamageType, bool bWasHeadshot)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameModeAssault.OnDeath"));

	struct
	{
		class AController*             Killed;
		class AController*             Killer;
		class UClass* /*UProjectXDamageType*/ DamageType;
		bool                           bWasHeadshot;
	} params = {};

	params.Killed = Killed;
	params.Killer = Killer;
	params.DamageType = DamageType;
	params.bWasHeadshot = bWasHeadshot;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameModeAssault.OnAssaultPointDestroyed
// (FUNC_Native, FUNC_Public)
// Parameters:
// class AAssaultPoint*           AssaultPoint                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXGameModeAssault::OnAssaultPointDestroyed(class AAssaultPoint* AssaultPoint)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameModeAssault.OnAssaultPointDestroyed"));

	struct
	{
		class AAssaultPoint*           AssaultPoint;
	} params = {};

	params.AssaultPoint = AssaultPoint;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameModeAssault.GetTeam
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// EAssaultRole                   AssaultRole                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// unsigned char                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

unsigned char AProjectXGameModeAssault::GetTeam(EAssaultRole AssaultRole)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameModeAssault.GetTeam"));

	struct
	{
		EAssaultRole                   AssaultRole;
		unsigned char                  ReturnValue;
	} params = {};

	params.AssaultRole = AssaultRole;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameModeBaseControl.TicketConsumeTimer
// (FUNC_Native, FUNC_Protected)

void AProjectXGameModeBaseControl::TicketConsumeTimer()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameModeBaseControl.TicketConsumeTimer"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameModeBaseControl.OnCapturePointOwnerChanged
// (FUNC_Native, FUNC_Public)
// Parameters:
// int                            NewOwner                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class ACapturePoint*           Point                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXGameModeBaseControl::OnCapturePointOwnerChanged(int NewOwner, class ACapturePoint* Point)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameModeBaseControl.OnCapturePointOwnerChanged"));

	struct
	{
		int                            NewOwner;
		class ACapturePoint*           Point;
	} params = {};

	params.NewOwner = NewOwner;
	params.Point = Point;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameModeBaseControl.OnCapturePointAttacked
// (FUNC_Native, FUNC_Public)
// Parameters:
// int                            TeamTakingPoint                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class ACapturePoint*           Point                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXGameModeBaseControl::OnCapturePointAttacked(int TeamTakingPoint, class ACapturePoint* Point)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameModeBaseControl.OnCapturePointAttacked"));

	struct
	{
		int                            TeamTakingPoint;
		class ACapturePoint*           Point;
	} params = {};

	params.TeamTakingPoint = TeamTakingPoint;
	params.Point = Point;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameModeBaseControl.GetTicketsLostPerBase
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int AProjectXGameModeBaseControl::GetTicketsLostPerBase()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameModeBaseControl.GetTicketsLostPerBase"));

	struct
	{
		int                            ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameModeHorde.OnWaveSpawnerGameOver
// (FUNC_Native, FUNC_Public)
// Parameters:
// class AWaveSpawner*            WaveSpawner                    (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bSuccess                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXGameModeHorde::OnWaveSpawnerGameOver(class AWaveSpawner* WaveSpawner, bool bSuccess)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameModeHorde.OnWaveSpawnerGameOver"));

	struct
	{
		class AWaveSpawner*            WaveSpawner;
		bool                           bSuccess;
	} params = {};

	params.WaveSpawner = WaveSpawner;
	params.bSuccess = bSuccess;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameModeHorde.OnWavesCompleted
// (FUNC_Native, FUNC_Public)
// Parameters:
// class AWaveSpawner*            WaveSpawner                    (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bSuccess                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXGameModeHorde::OnWavesCompleted(class AWaveSpawner* WaveSpawner, bool bSuccess)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameModeHorde.OnWavesCompleted"));

	struct
	{
		class AWaveSpawner*            WaveSpawner;
		bool                           bSuccess;
	} params = {};

	params.WaveSpawner = WaveSpawner;
	params.bSuccess = bSuccess;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameModeHorde.OnDeath
// (FUNC_Native, FUNC_Public)
// Parameters:
// class AController*             Killed                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AController*             Killer                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UClass* /*UProjectXDamageType*/ DamageType                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bWasHeadshot                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXGameModeHorde::OnDeath(class AController* Killed, class AController* Killer, class UClass* /*UProjectXDamageType*/ DamageType, bool bWasHeadshot)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameModeHorde.OnDeath"));

	struct
	{
		class AController*             Killed;
		class AController*             Killer;
		class UClass* /*UProjectXDamageType*/ DamageType;
		bool                           bWasHeadshot;
	} params = {};

	params.Killed = Killed;
	params.Killer = Killer;
	params.DamageType = DamageType;
	params.bWasHeadshot = bWasHeadshot;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameModeHorde.GetTeamByHordeRoleStatic
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// EHordeModeRoles                HordeRole                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// unsigned char                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

unsigned char AProjectXGameModeHorde::GetTeamByHordeRoleStatic(EHordeModeRoles HordeRole, class UObject* WorldContextObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameModeHorde.GetTeamByHordeRoleStatic"));

	struct
	{
		EHordeModeRoles                HordeRole;
		class UObject*                 WorldContextObject;
		unsigned char                  ReturnValue;
	} params = {};

	params.HordeRole = HordeRole;
	params.WorldContextObject = WorldContextObject;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameModeKingofTheHill.UpdatePhase
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void AProjectXGameModeKingofTheHill::UpdatePhase()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameModeKingofTheHill.UpdatePhase"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameModeKingofTheHill.TicketConsumeTimer
// (FUNC_Native, FUNC_Protected)

void AProjectXGameModeKingofTheHill::TicketConsumeTimer()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameModeKingofTheHill.TicketConsumeTimer"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameModeKingofTheHill.OnCapturePointOwnerChanged
// (FUNC_Native, FUNC_Public)
// Parameters:
// int                            NewOwner                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class ACapturePoint*           Point                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXGameModeKingofTheHill::OnCapturePointOwnerChanged(int NewOwner, class ACapturePoint* Point)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameModeKingofTheHill.OnCapturePointOwnerChanged"));

	struct
	{
		int                            NewOwner;
		class ACapturePoint*           Point;
	} params = {};

	params.NewOwner = NewOwner;
	params.Point = Point;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameModeKingofTheHill.OnCapturePointAttacked
// (FUNC_Native, FUNC_Public)
// Parameters:
// int                            TeamOwner                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class ACapturePoint*           Point                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXGameModeKingofTheHill::OnCapturePointAttacked(int TeamOwner, class ACapturePoint* Point)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameModeKingofTheHill.OnCapturePointAttacked"));

	struct
	{
		int                            TeamOwner;
		class ACapturePoint*           Point;
	} params = {};

	params.TeamOwner = TeamOwner;
	params.Point = Point;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameModeTDCapFlag.OnFlagUpdated
// (FUNC_Native, FUNC_Protected)
// Parameters:
// class AFlag*                   Flag                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bNewFlag                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXGameModeTDCapFlag::OnFlagUpdated(class AFlag* Flag, bool bNewFlag)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameModeTDCapFlag.OnFlagUpdated"));

	struct
	{
		class AFlag*                   Flag;
		bool                           bNewFlag;
	} params = {};

	params.Flag = Flag;
	params.bNewFlag = bNewFlag;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameModeTDCapFlag.FlagReturned
// (FUNC_Native, FUNC_Protected)
// Parameters:
// class AFlag*                   Flag                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AProjectXCharacter*      PickingUpActor                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            Team                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXGameModeTDCapFlag::FlagReturned(class AFlag* Flag, class AProjectXCharacter* PickingUpActor, int Team)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameModeTDCapFlag.FlagReturned"));

	struct
	{
		class AFlag*                   Flag;
		class AProjectXCharacter*      PickingUpActor;
		int                            Team;
	} params = {};

	params.Flag = Flag;
	params.PickingUpActor = PickingUpActor;
	params.Team = Team;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameModeTDCapFlag.FlagPickedUp
// (FUNC_Native, FUNC_Protected)
// Parameters:
// class AFlag*                   Flag                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AProjectXCharacter*      PickingUpActor                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            Team                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXGameModeTDCapFlag::FlagPickedUp(class AFlag* Flag, class AProjectXCharacter* PickingUpActor, int Team)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameModeTDCapFlag.FlagPickedUp"));

	struct
	{
		class AFlag*                   Flag;
		class AProjectXCharacter*      PickingUpActor;
		int                            Team;
	} params = {};

	params.Flag = Flag;
	params.PickingUpActor = PickingUpActor;
	params.Team = Team;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameModeTDCapFlag.FlagDropped
// (FUNC_Native, FUNC_Protected)
// Parameters:
// class AFlag*                   Flag                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AProjectXCharacter*      PickingUpActor                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            Team                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXGameModeTDCapFlag::FlagDropped(class AFlag* Flag, class AProjectXCharacter* PickingUpActor, int Team)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameModeTDCapFlag.FlagDropped"));

	struct
	{
		class AFlag*                   Flag;
		class AProjectXCharacter*      PickingUpActor;
		int                            Team;
	} params = {};

	params.Flag = Flag;
	params.PickingUpActor = PickingUpActor;
	params.Team = Team;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameModeTDCapFlag.FlagCaptured
// (FUNC_Native, FUNC_Protected)
// Parameters:
// class AFlag*                   Flag                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AProjectXCharacter*      PickingUpActor                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            Team                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXGameModeTDCapFlag::FlagCaptured(class AFlag* Flag, class AProjectXCharacter* PickingUpActor, int Team)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameModeTDCapFlag.FlagCaptured"));

	struct
	{
		class AFlag*                   Flag;
		class AProjectXCharacter*      PickingUpActor;
		int                            Team;
	} params = {};

	params.Flag = Flag;
	params.PickingUpActor = PickingUpActor;
	params.Team = Team;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameModeTeamDeathmatch.OnDeath
// (FUNC_Native, FUNC_Public)
// Parameters:
// class AController*             Killed                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AController*             Killer                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UClass* /*UProjectXDamageType*/ DamageType                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bWasHeadshot                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXGameModeTeamDeathmatch::OnDeath(class AController* Killed, class AController* Killer, class UClass* /*UProjectXDamageType*/ DamageType, bool bWasHeadshot)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameModeTeamDeathmatch.OnDeath"));

	struct
	{
		class AController*             Killed;
		class AController*             Killer;
		class UClass* /*UProjectXDamageType*/ DamageType;
		bool                           bWasHeadshot;
	} params = {};

	params.Killed = Killed;
	params.Killer = Killer;
	params.DamageType = DamageType;
	params.bWasHeadshot = bWasHeadshot;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameModeVIP.UpdateVIPTeamList
// (FUNC_Final, FUNC_Native, FUNC_Protected)
// Parameters:
// unsigned char                  Team                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// unsigned char                  VIPID                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXGameModeVIP::UpdateVIPTeamList(unsigned char Team, unsigned char VIPID)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameModeVIP.UpdateVIPTeamList"));

	struct
	{
		unsigned char                  Team;
		unsigned char                  VIPID;
	} params = {};

	params.Team = Team;
	params.VIPID = VIPID;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameModeVIP.OnVIPCharacterSpawned
// (FUNC_Final, FUNC_Native, FUNC_Protected)
// Parameters:
// class APawn*                   NewPawn                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXGameModeVIP::OnVIPCharacterSpawned(class APawn* NewPawn)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameModeVIP.OnVIPCharacterSpawned"));

	struct
	{
		class APawn*                   NewPawn;
	} params = {};

	params.NewPawn = NewPawn;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameModeVIP.IsValidVIPID
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// unsigned char                  VIPID                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXGameModeVIP::IsValidVIPID(unsigned char VIPID)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameModeVIP.IsValidVIPID"));

	struct
	{
		unsigned char                  VIPID;
		bool                           ReturnValue;
	} params = {};

	params.VIPID = VIPID;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameModeVIP.GetNumberOfVIPS
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int AProjectXGameModeVIP::GetNumberOfVIPS()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameModeVIP.GetNumberOfVIPS"));

	struct
	{
		int                            ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.VRandRange2D
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// struct FVector2D               A                              (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FVector2D               B                              (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FVector2D               ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FVector2D UProjectXGameplayStatics::VRandRange2D(const struct FVector2D& A, const struct FVector2D& B)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.VRandRange2D"));

	struct
	{
		struct FVector2D               A;
		struct FVector2D               B;
		struct FVector2D               ReturnValue;
	} params = {};

	params.A = A;
	params.B = B;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.VRandRange
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// struct FVector                 A                              (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FVector                 B                              (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FVector                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FVector UProjectXGameplayStatics::VRandRange(const struct FVector& A, const struct FVector& B)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.VRandRange"));

	struct
	{
		struct FVector                 A;
		struct FVector                 B;
		struct FVector                 ReturnValue;
	} params = {};

	params.A = A;
	params.B = B;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.SpaceText
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// struct FText                   Text                           (CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)

void UProjectXGameplayStatics::SpaceText(struct FText* Text)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.SpaceText"));

	struct
	{
		struct FText                   Text;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	if (Text != nullptr)
		*Text = params.Text;
}


// Function ProjectX.ProjectXGameplayStatics.SortObjects
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// TArray<class UObject*>         InObjectArray                  (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// TArray<class UObject*>         ObjectArray                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_NativeAccessSpecifierPublic)
// struct FScriptDelegate         Condition                      (CPF_Parm, CPF_ZeroConstructor, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

void UProjectXGameplayStatics::SortObjects(TArray<class UObject*> InObjectArray, const struct FScriptDelegate& Condition, TArray<class UObject*>* ObjectArray)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.SortObjects"));

	struct
	{
		TArray<class UObject*>         InObjectArray;
		TArray<class UObject*>         ObjectArray;
		struct FScriptDelegate         Condition;
	} params = {};

	params.InObjectArray = InObjectArray;
	params.Condition = Condition;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	if (ObjectArray != nullptr)
		*ObjectArray = params.ObjectArray;
}


// Function ProjectX.ProjectXGameplayStatics.SmoothStep
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// float                          A                              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          B                              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          X                              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UProjectXGameplayStatics::SmoothStep(float A, float B, float X)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.SmoothStep"));

	struct
	{
		float                          A;
		float                          B;
		float                          X;
		float                          ReturnValue;
	} params = {};

	params.A = A;
	params.B = B;
	params.X = X;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.SetPostProcessTextureParameter
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// class UPostProcessComponent*   PostProcess                    (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            Index                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FName                   ParamName                      (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UTexture*                Texture                        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UProjectXGameplayStatics::SetPostProcessTextureParameter(class UPostProcessComponent* PostProcess, int Index, const struct FName& ParamName, class UTexture* Texture)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.SetPostProcessTextureParameter"));

	struct
	{
		class UPostProcessComponent*   PostProcess;
		int                            Index;
		struct FName                   ParamName;
		class UTexture*                Texture;
	} params = {};

	params.PostProcess = PostProcess;
	params.Index = Index;
	params.ParamName = ParamName;
	params.Texture = Texture;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameplayStatics.SetPostProcessMaterialVectorParameter
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_BlueprintCallable)
// Parameters:
// class UPostProcessComponent*   PostProcess                    (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            Index                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FName                   ParamName                      (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FLinearColor            Value                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UProjectXGameplayStatics::SetPostProcessMaterialVectorParameter(class UPostProcessComponent* PostProcess, int Index, const struct FName& ParamName, const struct FLinearColor& Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.SetPostProcessMaterialVectorParameter"));

	struct
	{
		class UPostProcessComponent*   PostProcess;
		int                            Index;
		struct FName                   ParamName;
		struct FLinearColor            Value;
	} params = {};

	params.PostProcess = PostProcess;
	params.Index = Index;
	params.ParamName = ParamName;
	params.Value = Value;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameplayStatics.SetPostProcessMaterialScalarParameter
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// class UPostProcessComponent*   PostProcess                    (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            Index                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FName                   ParamName                      (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          Value                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UProjectXGameplayStatics::SetPostProcessMaterialScalarParameter(class UPostProcessComponent* PostProcess, int Index, const struct FName& ParamName, float Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.SetPostProcessMaterialScalarParameter"));

	struct
	{
		class UPostProcessComponent*   PostProcess;
		int                            Index;
		struct FName                   ParamName;
		float                          Value;
	} params = {};

	params.PostProcess = PostProcess;
	params.Index = Index;
	params.ParamName = ParamName;
	params.Value = Value;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameplayStatics.SetFocusOnFirstFocuseableChild
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UUserWidget*             Widget                         (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UProjectXGameplayStatics::SetFocusOnFirstFocuseableChild(class UUserWidget* Widget)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.SetFocusOnFirstFocuseableChild"));

	struct
	{
		class UUserWidget*             Widget;
		bool                           ReturnValue;
	} params = {};

	params.Widget = Widget;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.ScaleAnimationToTime
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UAnimMontage*            Montage                        (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          Time                           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UProjectXGameplayStatics::ScaleAnimationToTime(float Time, class UAnimMontage** Montage)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.ScaleAnimationToTime"));

	struct
	{
		class UAnimMontage*            Montage;
		float                          Time;
	} params = {};

	params.Time = Time;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	if (Montage != nullptr)
		*Montage = params.Montage;
}


// Function ProjectX.ProjectXGameplayStatics.RemoveBlendableOnTarget
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class AActor*                  Target                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TScriptInterface<class UBlendableInterface> InBlendableObject              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_NativeAccessSpecifierPublic)

void UProjectXGameplayStatics::RemoveBlendableOnTarget(class AActor* Target, const TScriptInterface<class UBlendableInterface>& InBlendableObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.RemoveBlendableOnTarget"));

	struct
	{
		class AActor*                  Target;
		TScriptInterface<class UBlendableInterface> InBlendableObject;
	} params = {};

	params.Target = Target;
	params.InBlendableObject = InBlendableObject;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameplayStatics.PXTimeSecondsToString
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// float                          InSeconds                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FString                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FString UProjectXGameplayStatics::PXTimeSecondsToString(float InSeconds)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.PXTimeSecondsToString"));

	struct
	{
		float                          InSeconds;
		struct FString                 ReturnValue;
	} params = {};

	params.InSeconds = InSeconds;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.PXApplyRadialDamageWithFalloff
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UWeaponInstance*         WeaponInstance                 (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          BaseDamage                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          MinimumDamage                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FVector                 Origin                         (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          DamageInnerRadius              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          DamageOuterRadius              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          DamageFalloff                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UClass* /*UDamageType*/  DamageTypeClass                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TArray<class AActor*>          IgnoreActors                   (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// TArray<class AActor*>          OutHitActors                   (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AController*             InstigatedByController         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TEnumAsByte<ECollisionChannel> DamagePreventionChannel        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bActorsInRadiusAsIgnoredActors (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bIgnoreAllies                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UProjectXGameplayStatics::PXApplyRadialDamageWithFalloff(class UObject* WorldContextObject, class UWeaponInstance* WeaponInstance, float BaseDamage, float MinimumDamage, const struct FVector& Origin, float DamageInnerRadius, float DamageOuterRadius, float DamageFalloff, class UClass* /*UDamageType*/ DamageTypeClass, TArray<class AActor*> IgnoreActors, class AActor* DamageCauser, class AController* InstigatedByController, TEnumAsByte<ECollisionChannel> DamagePreventionChannel, bool bActorsInRadiusAsIgnoredActors, bool bIgnoreAllies, TArray<class AActor*>* OutHitActors)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.PXApplyRadialDamageWithFalloff"));

	struct
	{
		class UObject*                 WorldContextObject;
		class UWeaponInstance*         WeaponInstance;
		float                          BaseDamage;
		float                          MinimumDamage;
		struct FVector                 Origin;
		float                          DamageInnerRadius;
		float                          DamageOuterRadius;
		float                          DamageFalloff;
		class UClass* /*UDamageType*/  DamageTypeClass;
		TArray<class AActor*>          IgnoreActors;
		TArray<class AActor*>          OutHitActors;
		class AActor*                  DamageCauser;
		class AController*             InstigatedByController;
		TEnumAsByte<ECollisionChannel> DamagePreventionChannel;
		bool                           bActorsInRadiusAsIgnoredActors;
		bool                           bIgnoreAllies;
		float                          ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.WeaponInstance = WeaponInstance;
	params.BaseDamage = BaseDamage;
	params.MinimumDamage = MinimumDamage;
	params.Origin = Origin;
	params.DamageInnerRadius = DamageInnerRadius;
	params.DamageOuterRadius = DamageOuterRadius;
	params.DamageFalloff = DamageFalloff;
	params.DamageTypeClass = DamageTypeClass;
	params.IgnoreActors = IgnoreActors;
	params.DamageCauser = DamageCauser;
	params.InstigatedByController = InstigatedByController;
	params.DamagePreventionChannel = DamagePreventionChannel;
	params.bActorsInRadiusAsIgnoredActors = bActorsInRadiusAsIgnoredActors;
	params.bIgnoreAllies = bIgnoreAllies;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	if (OutHitActors != nullptr)
		*OutHitActors = params.OutHitActors;

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.ProjectPointToNavigation
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FVector                 Point                          (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UClass* /*AActor*/       NavAgentClass                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FVector                 Extents                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UProjectXGameplayStatics::ProjectPointToNavigation(class UObject* WorldContextObject, class UClass* /*AActor*/ NavAgentClass, const struct FVector& Extents, struct FVector* Point)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.ProjectPointToNavigation"));

	struct
	{
		class UObject*                 WorldContextObject;
		struct FVector                 Point;
		class UClass* /*AActor*/       NavAgentClass;
		struct FVector                 Extents;
		bool                           ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.NavAgentClass = NavAgentClass;
	params.Extents = Extents;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	if (Point != nullptr)
		*Point = params.Point;

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.PlayLocalSound
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class USoundBase*              Sound                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          VolumeMultiplier               (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          PitchMultiplier                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AdvancedDisplay, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          StartTime                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AdvancedDisplay, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class USoundConcurrency*       ConcurrencySettings            (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AdvancedDisplay, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  OwningActor                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AdvancedDisplay, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UProjectXGameplayStatics::PlayLocalSound(class UObject* WorldContextObject, class USoundBase* Sound, float VolumeMultiplier, float PitchMultiplier, float StartTime, class USoundConcurrency* ConcurrencySettings, class AActor* OwningActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.PlayLocalSound"));

	struct
	{
		class UObject*                 WorldContextObject;
		class USoundBase*              Sound;
		float                          VolumeMultiplier;
		float                          PitchMultiplier;
		float                          StartTime;
		class USoundConcurrency*       ConcurrencySettings;
		class AActor*                  OwningActor;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.Sound = Sound;
	params.VolumeMultiplier = VolumeMultiplier;
	params.PitchMultiplier = PitchMultiplier;
	params.StartTime = StartTime;
	params.ConcurrencySettings = ConcurrencySettings;
	params.OwningActor = OwningActor;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameplayStatics.PlayAnnouncerVoice
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FString                 VoiceToPlay                    (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UProjectXGameplayStatics::PlayAnnouncerVoice(class UObject* WorldContextObject, const struct FString& VoiceToPlay)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.PlayAnnouncerVoice"));

	struct
	{
		class UObject*                 WorldContextObject;
		struct FString                 VoiceToPlay;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.VoiceToPlay = VoiceToPlay;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameplayStatics.ModifyAmbientCubemapTint
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasDefaults, FUNC_BlueprintCallable)
// Parameters:
// class APostProcessVolume*      PostProcess                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FLinearColor            NewColor                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UProjectXGameplayStatics::ModifyAmbientCubemapTint(class APostProcessVolume* PostProcess, const struct FLinearColor& NewColor)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.ModifyAmbientCubemapTint"));

	struct
	{
		class APostProcessVolume*      PostProcess;
		struct FLinearColor            NewColor;
	} params = {};

	params.PostProcess = PostProcess;
	params.NewColor = NewColor;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameplayStatics.ModifyAmbientCubemapIntensity
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class APostProcessVolume*      PostProcess                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          NewValue                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UProjectXGameplayStatics::ModifyAmbientCubemapIntensity(class APostProcessVolume* PostProcess, float NewValue)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.ModifyAmbientCubemapIntensity"));

	struct
	{
		class APostProcessVolume*      PostProcess;
		float                          NewValue;
	} params = {};

	params.PostProcess = PostProcess;
	params.NewValue = NewValue;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameplayStatics.MakeDamageEventFromClass
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UClass* /*UDamageType*/  DamageType                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FDamageEvent            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_NativeAccessSpecifierPublic)

struct FDamageEvent UProjectXGameplayStatics::MakeDamageEventFromClass(class UClass* /*UDamageType*/ DamageType)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.MakeDamageEventFromClass"));

	struct
	{
		class UClass* /*UDamageType*/  DamageType;
		struct FDamageEvent            ReturnValue;
	} params = {};

	params.DamageType = DamageType;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.KeyMatchesAction
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FName                   ActionName                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FKeyEvent               KeyEvent                       (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UProjectXGameplayStatics::KeyMatchesAction(class UObject* WorldContextObject, const struct FName& ActionName, const struct FKeyEvent& KeyEvent)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.KeyMatchesAction"));

	struct
	{
		class UObject*                 WorldContextObject;
		struct FName                   ActionName;
		struct FKeyEvent               KeyEvent;
		bool                           ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.ActionName = ActionName;
	params.KeyEvent = KeyEvent;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.IsXboxOne
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UProjectXGameplayStatics::IsXboxOne()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.IsXboxOne"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.IsValidVersion
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// int                            VersionNumberIn                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            BranchNumberIn                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UProjectXGameplayStatics::IsValidVersion(int VersionNumberIn, int BranchNumberIn)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.IsValidVersion"));

	struct
	{
		int                            VersionNumberIn;
		int                            BranchNumberIn;
		bool                           ReturnValue;
	} params = {};

	params.VersionNumberIn = VersionNumberIn;
	params.BranchNumberIn = BranchNumberIn;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.IsUsingGamePad
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UProjectXGameplayStatics::IsUsingGamePad(class UObject* WorldContextObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.IsUsingGamePad"));

	struct
	{
		class UObject*                 WorldContextObject;
		bool                           ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.IsShippingBuild
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UProjectXGameplayStatics::IsShippingBuild()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.IsShippingBuild"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.IsReleaseBuild
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UProjectXGameplayStatics::IsReleaseBuild()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.IsReleaseBuild"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.IsPS4
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UProjectXGameplayStatics::IsPS4()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.IsPS4"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.IsPathable
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FVector                 EndPosition                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FVector                 StartPosition                  (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UClass* /*AActor*/       NavAgentClass                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UProjectXGameplayStatics::IsPathable(class UObject* WorldContextObject, const struct FVector& EndPosition, const struct FVector& StartPosition, class UClass* /*AActor*/ NavAgentClass)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.IsPathable"));

	struct
	{
		class UObject*                 WorldContextObject;
		struct FVector                 EndPosition;
		struct FVector                 StartPosition;
		class UClass* /*AActor*/       NavAgentClass;
		bool                           ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.EndPosition = EndPosition;
	params.StartPosition = StartPosition;
	params.NavAgentClass = NavAgentClass;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.IsPatchBuild
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UProjectXGameplayStatics::IsPatchBuild()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.IsPatchBuild"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.IsEditor
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UProjectXGameplayStatics::IsEditor()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.IsEditor"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.IsDevBuild
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UProjectXGameplayStatics::IsDevBuild()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.IsDevBuild"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.IsConsolePlatform
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UProjectXGameplayStatics::IsConsolePlatform()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.IsConsolePlatform"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.IsCDO
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UObject*                 Object                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UProjectXGameplayStatics::IsCDO(class UObject* Object)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.IsCDO"));

	struct
	{
		class UObject*                 Object;
		bool                           ReturnValue;
	} params = {};

	params.Object = Object;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.IsAnnouncerSpeaking
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UProjectXGameplayStatics::IsAnnouncerSpeaking(class UObject* WorldContextObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.IsAnnouncerSpeaking"));

	struct
	{
		class UObject*                 WorldContextObject;
		bool                           ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.InverseLerp
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// float                          A                              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          B                              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          X                              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bClamped                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UProjectXGameplayStatics::InverseLerp(float A, float B, float X, bool bClamped)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.InverseLerp"));

	struct
	{
		float                          A;
		float                          B;
		float                          X;
		bool                           bClamped;
		float                          ReturnValue;
	} params = {};

	params.A = A;
	params.B = B;
	params.X = X;
	params.bClamped = bClamped;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.GetWidgetPath
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UWidget*                 Widget                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FString                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FString UProjectXGameplayStatics::GetWidgetPath(class UWidget* Widget)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.GetWidgetPath"));

	struct
	{
		class UWidget*                 Widget;
		struct FString                 ReturnValue;
	} params = {};

	params.Widget = Widget;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.GetUniqueID
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 Object                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int64_t                        ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int64_t UProjectXGameplayStatics::GetUniqueID(class UObject* Object)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.GetUniqueID"));

	struct
	{
		class UObject*                 Object;
		int64_t                        ReturnValue;
	} params = {};

	params.Object = Object;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.GetTargetsInRadius
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FVector                 StartLocation                  (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          Radius                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TArray<class AActor*>          Targets                        (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_NativeAccessSpecifierPublic)

void UProjectXGameplayStatics::GetTargetsInRadius(class UObject* WorldContextObject, const struct FVector& StartLocation, float Radius, TArray<class AActor*>* Targets)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.GetTargetsInRadius"));

	struct
	{
		class UObject*                 WorldContextObject;
		struct FVector                 StartLocation;
		float                          Radius;
		TArray<class AActor*>          Targets;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.StartLocation = StartLocation;
	params.Radius = Radius;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	if (Targets != nullptr)
		*Targets = params.Targets;
}


// Function ProjectX.ProjectXGameplayStatics.GetSocketTransformRelativeToRoot
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// struct FName                   Socket                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class USkeletalMeshComponent*  SkeletalMesh                   (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FTransform              OutTransform                   (CPF_Parm, CPF_OutParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

void UProjectXGameplayStatics::GetSocketTransformRelativeToRoot(const struct FName& Socket, class USkeletalMeshComponent* SkeletalMesh, struct FTransform* OutTransform)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.GetSocketTransformRelativeToRoot"));

	struct
	{
		struct FName                   Socket;
		class USkeletalMeshComponent*  SkeletalMesh;
		struct FTransform              OutTransform;
	} params = {};

	params.Socket = Socket;
	params.SkeletalMesh = SkeletalMesh;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	if (OutTransform != nullptr)
		*OutTransform = params.OutTransform;
}


// Function ProjectX.ProjectXGameplayStatics.GetScaledAnimationTime
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UAnimMontage*            Montage                        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          Time                           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UProjectXGameplayStatics::GetScaledAnimationTime(class UAnimMontage* Montage, float Time)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.GetScaledAnimationTime"));

	struct
	{
		class UAnimMontage*            Montage;
		float                          Time;
		float                          ReturnValue;
	} params = {};

	params.Montage = Montage;
	params.Time = Time;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.GetRandomPointInActorBounds
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class AActor*                  Actor                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FVector                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FVector UProjectXGameplayStatics::GetRandomPointInActorBounds(class AActor* Actor)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.GetRandomPointInActorBounds"));

	struct
	{
		class AActor*                  Actor;
		struct FVector                 ReturnValue;
	} params = {};

	params.Actor = Actor;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.GetPostProcessMaterialVectorParameter
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UPostProcessComponent*   PostProcess                    (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            Index                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FName                   ParamName                      (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FLinearColor            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FLinearColor UProjectXGameplayStatics::GetPostProcessMaterialVectorParameter(class UPostProcessComponent* PostProcess, int Index, const struct FName& ParamName)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.GetPostProcessMaterialVectorParameter"));

	struct
	{
		class UPostProcessComponent*   PostProcess;
		int                            Index;
		struct FName                   ParamName;
		struct FLinearColor            ReturnValue;
	} params = {};

	params.PostProcess = PostProcess;
	params.Index = Index;
	params.ParamName = ParamName;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.GetPostProcessMaterialScalarParameter
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UPostProcessComponent*   PostProcess                    (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            Index                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FName                   ParamName                      (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UProjectXGameplayStatics::GetPostProcessMaterialScalarParameter(class UPostProcessComponent* PostProcess, int Index, const struct FName& ParamName)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.GetPostProcessMaterialScalarParameter"));

	struct
	{
		class UPostProcessComponent*   PostProcess;
		int                            Index;
		struct FName                   ParamName;
		float                          ReturnValue;
	} params = {};

	params.PostProcess = PostProcess;
	params.Index = Index;
	params.ParamName = ParamName;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.GetPostProcessMaterialDynamic
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UPostProcessComponent*   PostProcess                    (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            Index                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic* ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UMaterialInstanceDynamic* UProjectXGameplayStatics::GetPostProcessMaterialDynamic(class UPostProcessComponent* PostProcess, int Index)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.GetPostProcessMaterialDynamic"));

	struct
	{
		class UPostProcessComponent*   PostProcess;
		int                            Index;
		class UMaterialInstanceDynamic* ReturnValue;
	} params = {};

	params.PostProcess = PostProcess;
	params.Index = Index;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.GetPostProcessMaterial
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UPostProcessComponent*   PostProcess                    (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            Index                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UMaterialInstance*       ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UMaterialInstance* UProjectXGameplayStatics::GetPostProcessMaterial(class UPostProcessComponent* PostProcess, int Index)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.GetPostProcessMaterial"));

	struct
	{
		class UPostProcessComponent*   PostProcess;
		int                            Index;
		class UMaterialInstance*       ReturnValue;
	} params = {};

	params.PostProcess = PostProcess;
	params.Index = Index;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.GetPlayerID
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// struct FUniqueNetIdRepl        NetID                          (CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FString                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FString UProjectXGameplayStatics::GetPlayerID(struct FUniqueNetIdRepl* NetID)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.GetPlayerID"));

	struct
	{
		struct FUniqueNetIdRepl        NetID;
		struct FString                 ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	if (NetID != nullptr)
		*NetID = params.NetID;

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.GetPlayerAvatar
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// struct FString                 PlayerID                       (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UTexture2D*              ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UTexture2D* UProjectXGameplayStatics::GetPlayerAvatar(const struct FString& PlayerID)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.GetPlayerAvatar"));

	struct
	{
		struct FString                 PlayerID;
		class UTexture2D*              ReturnValue;
	} params = {};

	params.PlayerID = PlayerID;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.GetPlatformKeyIcon
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FName                   KeyName                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UTexture2D*              ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UTexture2D* UProjectXGameplayStatics::GetPlatformKeyIcon(class UObject* WorldContextObject, const struct FName& KeyName)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.GetPlatformKeyIcon"));

	struct
	{
		class UObject*                 WorldContextObject;
		struct FName                   KeyName;
		class UTexture2D*              ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.KeyName = KeyName;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.GetPenetrationAdjustment
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_HasDefaults)
// Parameters:
// class UWorld*                  World                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  TestActor                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     PrimComp                       (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FTransform              TestWorldTransform             (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
// struct FVector                 OutProposedAdjustment          (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TArray<class AActor*>          IgnoreActors                   (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UProjectXGameplayStatics::GetPenetrationAdjustment(class UWorld* World, class AActor* TestActor, class UPrimitiveComponent* PrimComp, const struct FTransform& TestWorldTransform, TArray<class AActor*> IgnoreActors, struct FVector* OutProposedAdjustment)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.GetPenetrationAdjustment"));

	struct
	{
		class UWorld*                  World;
		class AActor*                  TestActor;
		class UPrimitiveComponent*     PrimComp;
		struct FTransform              TestWorldTransform;
		struct FVector                 OutProposedAdjustment;
		TArray<class AActor*>          IgnoreActors;
		bool                           ReturnValue;
	} params = {};

	params.World = World;
	params.TestActor = TestActor;
	params.PrimComp = PrimComp;
	params.TestWorldTransform = TestWorldTransform;
	params.IgnoreActors = IgnoreActors;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	if (OutProposedAdjustment != nullptr)
		*OutProposedAdjustment = params.OutProposedAdjustment;

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.GetLoadoutMenuWidget
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UAdvancedUserWidget*     ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UAdvancedUserWidget* UProjectXGameplayStatics::GetLoadoutMenuWidget(class UObject* WorldContextObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.GetLoadoutMenuWidget"));

	struct
	{
		class UObject*                 WorldContextObject;
		class UAdvancedUserWidget*     ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.GetKeysForAction
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FName                   ActionName                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TArray<struct FInputActionKeyMapping> Bindings                       (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_NativeAccessSpecifierPublic)

void UProjectXGameplayStatics::GetKeysForAction(class UObject* WorldContextObject, const struct FName& ActionName, TArray<struct FInputActionKeyMapping>* Bindings)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.GetKeysForAction"));

	struct
	{
		class UObject*                 WorldContextObject;
		struct FName                   ActionName;
		TArray<struct FInputActionKeyMapping> Bindings;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.ActionName = ActionName;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	if (Bindings != nullptr)
		*Bindings = params.Bindings;
}


// Function ProjectX.ProjectXGameplayStatics.GetGamepadPlatformKeyIcon
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FName                   KeyName                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UTexture2D*              ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UTexture2D* UProjectXGameplayStatics::GetGamepadPlatformKeyIcon(class UObject* WorldContextObject, const struct FName& KeyName)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.GetGamepadPlatformKeyIcon"));

	struct
	{
		class UObject*                 WorldContextObject;
		struct FName                   KeyName;
		class UTexture2D*              ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.KeyName = KeyName;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.GetFBoxFromActorBounds
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class AActor*                  Actor                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FBox                    ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

struct FBox UProjectXGameplayStatics::GetFBoxFromActorBounds(class AActor* Actor)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.GetFBoxFromActorBounds"));

	struct
	{
		class AActor*                  Actor;
		struct FBox                    ReturnValue;
	} params = {};

	params.Actor = Actor;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.GetDeployScreenWidget
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UAdvancedUserWidget*     ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UAdvancedUserWidget* UProjectXGameplayStatics::GetDeployScreenWidget(class UObject* WorldContextObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.GetDeployScreenWidget"));

	struct
	{
		class UObject*                 WorldContextObject;
		class UAdvancedUserWidget*     ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.GetDefaultObject
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UClass* /*UObject*/      Class                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UObject*                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UObject* UProjectXGameplayStatics::GetDefaultObject(class UClass* /*UObject*/ Class)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.GetDefaultObject"));

	struct
	{
		class UClass* /*UObject*/      Class;
		class UObject*                 ReturnValue;
	} params = {};

	params.Class = Class;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.GetCurrentlyOpenAdvancedUserWidget
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UAdvancedUserWidget*     ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UAdvancedUserWidget* UProjectXGameplayStatics::GetCurrentlyOpenAdvancedUserWidget(class UObject* WorldContextObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.GetCurrentlyOpenAdvancedUserWidget"));

	struct
	{
		class UObject*                 WorldContextObject;
		class UAdvancedUserWidget*     ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.GetClosestPointOnCollision
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_BlueprintCallable)
// Parameters:
// class AActor*                  Actor                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FVector                 Point                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TEnumAsByte<ECollisionChannel> Channel                        (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FVector                 ClosestPoint                   (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UProjectXGameplayStatics::GetClosestPointOnCollision(class AActor* Actor, const struct FVector& Point, TEnumAsByte<ECollisionChannel> Channel, struct FVector* ClosestPoint)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.GetClosestPointOnCollision"));

	struct
	{
		class AActor*                  Actor;
		struct FVector                 Point;
		TEnumAsByte<ECollisionChannel> Channel;
		struct FVector                 ClosestPoint;
		bool                           ReturnValue;
	} params = {};

	params.Actor = Actor;
	params.Point = Point;
	params.Channel = Channel;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	if (ClosestPoint != nullptr)
		*ClosestPoint = params.ClosestPoint;

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.GetCameraFrustumPoints
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UCameraComponent*        Camera                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TArray<struct FVector>         ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_NativeAccessSpecifierPublic)

TArray<struct FVector> UProjectXGameplayStatics::GetCameraFrustumPoints(class UCameraComponent* Camera)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.GetCameraFrustumPoints"));

	struct
	{
		class UCameraComponent*        Camera;
		TArray<struct FVector>         ReturnValue;
	} params = {};

	params.Camera = Camera;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.GetBuildVersion
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int UProjectXGameplayStatics::GetBuildVersion()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.GetBuildVersion"));

	struct
	{
		int                            ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.GetBranchVersion
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// EBuildType                     ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

EBuildType UProjectXGameplayStatics::GetBranchVersion()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.GetBranchVersion"));

	struct
	{
		EBuildType                     ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.GetAudioComponentFloatParam
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UAudioComponent*         Component                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FName                   ParamName                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UProjectXGameplayStatics::GetAudioComponentFloatParam(class UAudioComponent* Component, const struct FName& ParamName)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.GetAudioComponentFloatParam"));

	struct
	{
		class UAudioComponent*         Component;
		struct FName                   ParamName;
		float                          ReturnValue;
	} params = {};

	params.Component = Component;
	params.ParamName = ParamName;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.GetAllObjectsImplementingInterface
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UClass* /*UInterface*/   Interface                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TArray<class UObject*>         Objects                        (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_NativeAccessSpecifierPublic)

void UProjectXGameplayStatics::GetAllObjectsImplementingInterface(class UObject* WorldContextObject, class UClass* /*UInterface*/ Interface, TArray<class UObject*>* Objects)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.GetAllObjectsImplementingInterface"));

	struct
	{
		class UObject*                 WorldContextObject;
		class UClass* /*UInterface*/   Interface;
		TArray<class UObject*>         Objects;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.Interface = Interface;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	if (Objects != nullptr)
		*Objects = params.Objects;
}


// Function ProjectX.ProjectXGameplayStatics.GetAllAliveTargets
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TArray<class AActor*>          TargetableActors               (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_NativeAccessSpecifierPublic)
// bool                           bTargetAllies                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UProjectXGameplayStatics::GetAllAliveTargets(class UObject* WorldContextObject, bool bTargetAllies, TArray<class AActor*>* TargetableActors)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.GetAllAliveTargets"));

	struct
	{
		class UObject*                 WorldContextObject;
		TArray<class AActor*>          TargetableActors;
		bool                           bTargetAllies;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.bTargetAllies = bTargetAllies;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	if (TargetableActors != nullptr)
		*TargetableActors = params.TargetableActors;
}


// Function ProjectX.ProjectXGameplayStatics.GetActorSizeOnScreenProjection
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasDefaults, FUNC_BlueprintCallable)
// Parameters:
// class APlayerController*       PlayerController               (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  Actor                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bOnlyCollidingComponents       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bIgnoreQueryOnlyComponents     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FVector2D               ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FVector2D UProjectXGameplayStatics::GetActorSizeOnScreenProjection(class APlayerController* PlayerController, class AActor* Actor, bool bOnlyCollidingComponents, bool bIgnoreQueryOnlyComponents)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.GetActorSizeOnScreenProjection"));

	struct
	{
		class APlayerController*       PlayerController;
		class AActor*                  Actor;
		bool                           bOnlyCollidingComponents;
		bool                           bIgnoreQueryOnlyComponents;
		struct FVector2D               ReturnValue;
	} params = {};

	params.PlayerController = PlayerController;
	params.Actor = Actor;
	params.bOnlyCollidingComponents = bOnlyCollidingComponents;
	params.bIgnoreQueryOnlyComponents = bIgnoreQueryOnlyComponents;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.GetActorSizeOnScreen
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasDefaults, FUNC_BlueprintCallable)
// Parameters:
// class APlayerController*       PlayerController               (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  Actor                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bOnlyCollidingComponents       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bIgnoreQueryOnlyComponents     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FVector2D               ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FVector2D UProjectXGameplayStatics::GetActorSizeOnScreen(class APlayerController* PlayerController, class AActor* Actor, bool bOnlyCollidingComponents, bool bIgnoreQueryOnlyComponents)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.GetActorSizeOnScreen"));

	struct
	{
		class APlayerController*       PlayerController;
		class AActor*                  Actor;
		bool                           bOnlyCollidingComponents;
		bool                           bIgnoreQueryOnlyComponents;
		struct FVector2D               ReturnValue;
	} params = {};

	params.PlayerController = PlayerController;
	params.Actor = Actor;
	params.bOnlyCollidingComponents = bOnlyCollidingComponents;
	params.bIgnoreQueryOnlyComponents = bIgnoreQueryOnlyComponents;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.GetActorScreenPercentage
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasDefaults, FUNC_BlueprintCallable)
// Parameters:
// class APlayerController*       PlayerController               (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  Actor                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bOnlyCollidingComponents       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bIgnoreQueryOnlyComponents     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FVector2D               ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FVector2D UProjectXGameplayStatics::GetActorScreenPercentage(class APlayerController* PlayerController, class AActor* Actor, bool bOnlyCollidingComponents, bool bIgnoreQueryOnlyComponents)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.GetActorScreenPercentage"));

	struct
	{
		class APlayerController*       PlayerController;
		class AActor*                  Actor;
		bool                           bOnlyCollidingComponents;
		bool                           bIgnoreQueryOnlyComponents;
		struct FVector2D               ReturnValue;
	} params = {};

	params.PlayerController = PlayerController;
	params.Actor = Actor;
	params.bOnlyCollidingComponents = bOnlyCollidingComponents;
	params.bIgnoreQueryOnlyComponents = bIgnoreQueryOnlyComponents;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.GetActorComponents
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UClass* /*UActorComponent*/ TypeFilter                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TArray<class UActorComponent*> Components                     (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

void UProjectXGameplayStatics::GetActorComponents(class UObject* WorldContextObject, class UClass* /*UActorComponent*/ TypeFilter, TArray<class UActorComponent*>* Components)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.GetActorComponents"));

	struct
	{
		class UObject*                 WorldContextObject;
		class UClass* /*UActorComponent*/ TypeFilter;
		TArray<class UActorComponent*> Components;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.TypeFilter = TypeFilter;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	if (Components != nullptr)
		*Components = params.Components;
}


// Function ProjectX.ProjectXGameplayStatics.GetActionNameForKey
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// struct FKey                    Key                            (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FName                   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FName UProjectXGameplayStatics::GetActionNameForKey(const struct FKey& Key)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.GetActionNameForKey"));

	struct
	{
		struct FKey                    Key;
		struct FName                   ReturnValue;
	} params = {};

	params.Key = Key;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.GetActionKeyName
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FName                   ActionName                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          BindScale                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FName                   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FName UProjectXGameplayStatics::GetActionKeyName(class UObject* WorldContextObject, const struct FName& ActionName, float BindScale)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.GetActionKeyName"));

	struct
	{
		class UObject*                 WorldContextObject;
		struct FName                   ActionName;
		float                          BindScale;
		struct FName                   ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.ActionName = ActionName;
	params.BindScale = BindScale;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.GetActionForKey
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FKeyEvent               KeyEvent                       (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// struct FName                   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FName UProjectXGameplayStatics::GetActionForKey(class UObject* WorldContextObject, const struct FKeyEvent& KeyEvent)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.GetActionForKey"));

	struct
	{
		class UObject*                 WorldContextObject;
		struct FKeyEvent               KeyEvent;
		struct FName                   ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.KeyEvent = KeyEvent;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.FindOrCreateAdvancedUserWidget
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UClass* /*UAdvancedUserWidget*/ AdvancedUserWidget             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            ZOrder                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UAdvancedUserWidget*     ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UAdvancedUserWidget* UProjectXGameplayStatics::FindOrCreateAdvancedUserWidget(class UObject* WorldContextObject, class UClass* /*UAdvancedUserWidget*/ AdvancedUserWidget, int ZOrder)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.FindOrCreateAdvancedUserWidget"));

	struct
	{
		class UObject*                 WorldContextObject;
		class UClass* /*UAdvancedUserWidget*/ AdvancedUserWidget;
		int                            ZOrder;
		class UAdvancedUserWidget*     ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.AdvancedUserWidget = AdvancedUserWidget;
	params.ZOrder = ZOrder;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.CreatePoseableMeshFromMeshComponent
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// class AActor*                  Owner                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class USceneComponent*         RootComponent                  (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// EAttachmentRule                AttachmentRules                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TArray<class UMeshComponent*>  MeshComponents                 (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

void UProjectXGameplayStatics::CreatePoseableMeshFromMeshComponent(class AActor* Owner, class USceneComponent* RootComponent, EAttachmentRule AttachmentRules, TArray<class UMeshComponent*> MeshComponents)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.CreatePoseableMeshFromMeshComponent"));

	struct
	{
		class AActor*                  Owner;
		class USceneComponent*         RootComponent;
		EAttachmentRule                AttachmentRules;
		TArray<class UMeshComponent*>  MeshComponents;
	} params = {};

	params.Owner = Owner;
	params.RootComponent = RootComponent;
	params.AttachmentRules = AttachmentRules;
	params.MeshComponents = MeshComponents;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameplayStatics.CopyToClipboard
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// struct FString                 ToCopy                         (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UProjectXGameplayStatics::CopyToClipboard(const struct FString& ToCopy)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.CopyToClipboard"));

	struct
	{
		struct FString                 ToCopy;
	} params = {};

	params.ToCopy = ToCopy;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameplayStatics.ClearAllTimersForObject
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UObject*                 Object                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UProjectXGameplayStatics::ClearAllTimersForObject(class UObject* Object)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.ClearAllTimersForObject"));

	struct
	{
		class UObject*                 Object;
	} params = {};

	params.Object = Object;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameplayStatics.ApplyRadialDamageSingle
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_BlueprintCallable)
// Parameters:
// class AActor*                  Target                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          BaseDamage                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          MinimumDamage                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FVector                 Origin                         (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          DamageInnerRadius              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          DamageOuterRadius              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          DamageFalloff                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UClass* /*UDamageType*/  DamageTypeClass                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AController*             InstigatedByController         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UProjectXGameplayStatics::ApplyRadialDamageSingle(class AActor* Target, float BaseDamage, float MinimumDamage, const struct FVector& Origin, float DamageInnerRadius, float DamageOuterRadius, float DamageFalloff, class UClass* /*UDamageType*/ DamageTypeClass, class AActor* DamageCauser, class AController* InstigatedByController)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.ApplyRadialDamageSingle"));

	struct
	{
		class AActor*                  Target;
		float                          BaseDamage;
		float                          MinimumDamage;
		struct FVector                 Origin;
		float                          DamageInnerRadius;
		float                          DamageOuterRadius;
		float                          DamageFalloff;
		class UClass* /*UDamageType*/  DamageTypeClass;
		class AActor*                  DamageCauser;
		class AController*             InstigatedByController;
		float                          ReturnValue;
	} params = {};

	params.Target = Target;
	params.BaseDamage = BaseDamage;
	params.MinimumDamage = MinimumDamage;
	params.Origin = Origin;
	params.DamageInnerRadius = DamageInnerRadius;
	params.DamageOuterRadius = DamageOuterRadius;
	params.DamageFalloff = DamageFalloff;
	params.DamageTypeClass = DamageTypeClass;
	params.DamageCauser = DamageCauser;
	params.InstigatedByController = InstigatedByController;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameplayStatics.AddOrUpdateBlendableOnTarget
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class AActor*                  Target                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TScriptInterface<class UBlendableInterface> InBlendableObject              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_NativeAccessSpecifierPublic)
// float                          InWeight                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UProjectXGameplayStatics::AddOrUpdateBlendableOnTarget(class AActor* Target, const TScriptInterface<class UBlendableInterface>& InBlendableObject, float InWeight)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameplayStatics.AddOrUpdateBlendableOnTarget"));

	struct
	{
		class AActor*                  Target;
		TScriptInterface<class UBlendableInterface> InBlendableObject;
		float                          InWeight;
	} params = {};

	params.Target = Target;
	params.InBlendableObject = InBlendableObject;
	params.InWeight = InWeight;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameState.UpdateGameTimer
// (FUNC_Final, FUNC_Native, FUNC_Public)

void AProjectXGameState::UpdateGameTimer()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.UpdateGameTimer"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameState.StopBroadcastedTimerStatic
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXGameState::StopBroadcastedTimerStatic(class UObject* WorldContextObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.StopBroadcastedTimerStatic"));

	struct
	{
		class UObject*                 WorldContextObject;
	} params = {};

	params.WorldContextObject = WorldContextObject;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameState.OnRep_WinningTeam
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void AProjectXGameState::OnRep_WinningTeam()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.OnRep_WinningTeam"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameState.OnRep_WelcomeMessage
// (FUNC_Final, FUNC_Native, FUNC_Public)

void AProjectXGameState::OnRep_WelcomeMessage()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.OnRep_WelcomeMessage"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameState.OnRep_TeamTicketList
// (FUNC_Final, FUNC_Native, FUNC_Public)

void AProjectXGameState::OnRep_TeamTicketList()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.OnRep_TeamTicketList"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameState.OnRep_GenericTimer
// (FUNC_Final, FUNC_Native, FUNC_Public)

void AProjectXGameState::OnRep_GenericTimer()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.OnRep_GenericTimer"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameState.OnPlayerPawnSpawned
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)
// Parameters:
// class AProjectXCharacter*      Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXGameState::OnPlayerPawnSpawned(class AProjectXCharacter* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.OnPlayerPawnSpawned"));

	struct
	{
		class AProjectXCharacter*      Character;
	} params = {};

	params.Character = Character;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameState.IsSquadMate
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  Target                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  EventInstigator                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXGameState::IsSquadMate(class UObject* WorldContextObject, class AActor* Target, class AActor* EventInstigator)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.IsSquadMate"));

	struct
	{
		class UObject*                 WorldContextObject;
		class AActor*                  Target;
		class AActor*                  EventInstigator;
		bool                           ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.Target = Target;
	params.EventInstigator = EventInstigator;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameState.IsNeutralByTeam
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// int                            Team                           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXGameState::IsNeutralByTeam(int Team)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.IsNeutralByTeam"));

	struct
	{
		int                            Team;
		bool                           ReturnValue;
	} params = {};

	params.Team = Team;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameState.IsNeutral
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  Target                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXGameState::IsNeutral(class UObject* WorldContextObject, class AActor* Target)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.IsNeutral"));

	struct
	{
		class UObject*                 WorldContextObject;
		class AActor*                  Target;
		bool                           ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.Target = Target;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameState.IsMatchInProgress
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXGameState::IsMatchInProgress()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.IsMatchInProgress"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameState.IsInWarmUp
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXGameState::IsInWarmUp()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.IsInWarmUp"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameState.IsEnemy
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  Target                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  EventInstigator                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXGameState::IsEnemy(class UObject* WorldContextObject, class AActor* Target, class AActor* EventInstigator)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.IsEnemy"));

	struct
	{
		class UObject*                 WorldContextObject;
		class AActor*                  Target;
		class AActor*                  EventInstigator;
		bool                           ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.Target = Target;
	params.EventInstigator = EventInstigator;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameState.IsAllyByTeam
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            Team                           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  EventInstigator                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXGameState::IsAllyByTeam(class UObject* WorldContextObject, int Team, class AActor* EventInstigator)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.IsAllyByTeam"));

	struct
	{
		class UObject*                 WorldContextObject;
		int                            Team;
		class AActor*                  EventInstigator;
		bool                           ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.Team = Team;
	params.EventInstigator = EventInstigator;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameState.IsAlly
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  Target                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  EventInstigator                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXGameState::IsAlly(class UObject* WorldContextObject, class AActor* Target, class AActor* EventInstigator)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.IsAlly"));

	struct
	{
		class UObject*                 WorldContextObject;
		class AActor*                  Target;
		class AActor*                  EventInstigator;
		bool                           ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.Target = Target;
	params.EventInstigator = EventInstigator;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameState.HasMatchStartedStatic
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXGameState::HasMatchStartedStatic(class UObject* WorldContextObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.HasMatchStartedStatic"));

	struct
	{
		class UObject*                 WorldContextObject;
		bool                           ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameState.GetWinningTeam
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int AProjectXGameState::GetWinningTeam()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.GetWinningTeam"));

	struct
	{
		int                            ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameState.GetVehicleRespawnManager
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UVehicleRespawnManager*  ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UVehicleRespawnManager* AProjectXGameState::GetVehicleRespawnManager()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.GetVehicleRespawnManager"));

	struct
	{
		class UVehicleRespawnManager*  ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameState.GetTimeUntilMatchStart
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AProjectXGameState::GetTimeUntilMatchStart()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.GetTimeUntilMatchStart"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameState.GetTicketCount
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// unsigned char                  Team                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int AProjectXGameState::GetTicketCount(unsigned char Team)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.GetTicketCount"));

	struct
	{
		unsigned char                  Team;
		int                            ReturnValue;
	} params = {};

	params.Team = Team;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameState.GetTeamStatic
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class AActor*                  Target                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int AProjectXGameState::GetTeamStatic(class AActor* Target)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.GetTeamStatic"));

	struct
	{
		class AActor*                  Target;
		int                            ReturnValue;
	} params = {};

	params.Target = Target;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameState.GetTeamScores
// (FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// TArray<struct FTeamScoreInfo>  OutTeamScores                  (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_NativeAccessSpecifierPublic)

void AProjectXGameState::GetTeamScores(TArray<struct FTeamScoreInfo>* OutTeamScores)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.GetTeamScores"));

	struct
	{
		TArray<struct FTeamScoreInfo>  OutTeamScores;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	if (OutTeamScores != nullptr)
		*OutTeamScores = params.OutTeamScores;
}


// Function ProjectX.ProjectXGameState.GetTeamNameStatic
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class AActor*                  Target                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FText                   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_NativeAccessSpecifierPublic)

struct FText AProjectXGameState::GetTeamNameStatic(class AActor* Target)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.GetTeamNameStatic"));

	struct
	{
		class AActor*                  Target;
		struct FText                   ReturnValue;
	} params = {};

	params.Target = Target;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameState.GetTeamNameByTeamStatic
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            Team                           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FText                   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_NativeAccessSpecifierPublic)

struct FText AProjectXGameState::GetTeamNameByTeamStatic(class UObject* WorldContextObject, int Team)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.GetTeamNameByTeamStatic"));

	struct
	{
		class UObject*                 WorldContextObject;
		int                            Team;
		struct FText                   ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.Team = Team;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameState.GetTargetColourByTeam
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// int                            Team                           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FName                   ColourName                     (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  EventInstigator                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FLinearColor            LinearColor                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXGameState::GetTargetColourByTeam(int Team, const struct FName& ColourName, class AActor* EventInstigator, struct FLinearColor* LinearColor)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.GetTargetColourByTeam"));

	struct
	{
		int                            Team;
		struct FName                   ColourName;
		class AActor*                  EventInstigator;
		struct FLinearColor            LinearColor;
	} params = {};

	params.Team = Team;
	params.ColourName = ColourName;
	params.EventInstigator = EventInstigator;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	if (LinearColor != nullptr)
		*LinearColor = params.LinearColor;
}


// Function ProjectX.ProjectXGameState.GetTargetColour
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class AActor*                  Target                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FName                   ColourName                     (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  EventInstigator                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FLinearColor            LinearColor                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXGameState::GetTargetColour(class AActor* Target, const struct FName& ColourName, class AActor* EventInstigator, struct FLinearColor* LinearColor)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.GetTargetColour"));

	struct
	{
		class AActor*                  Target;
		struct FName                   ColourName;
		class AActor*                  EventInstigator;
		struct FLinearColor            LinearColor;
	} params = {};

	params.Target = Target;
	params.ColourName = ColourName;
	params.EventInstigator = EventInstigator;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	if (LinearColor != nullptr)
		*LinearColor = params.LinearColor;
}


// Function ProjectX.ProjectXGameState.GetStartingTicketCount
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// unsigned char                  Team                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int AProjectXGameState::GetStartingTicketCount(unsigned char Team)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.GetStartingTicketCount"));

	struct
	{
		unsigned char                  Team;
		int                            ReturnValue;
	} params = {};

	params.Team = Team;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameState.GetSquadComponent
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class USquadComponent*         ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class USquadComponent* AProjectXGameState::GetSquadComponent()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.GetSquadComponent"));

	struct
	{
		class USquadComponent*         ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameState.GetServerWorldTimeSecondsStatic
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AProjectXGameState::GetServerWorldTimeSecondsStatic(class UObject* WorldContextObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.GetServerWorldTimeSecondsStatic"));

	struct
	{
		class UObject*                 WorldContextObject;
		float                          ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameState.GetReviveDuration
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AProjectXGameState::GetReviveDuration()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.GetReviveDuration"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameState.GetReviveBeaconGlobalOverride
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UClass* /*APickupReviveBeacon*/ ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UClass* /*APickupReviveBeacon*/ AProjectXGameState::GetReviveBeaconGlobalOverride()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.GetReviveBeaconGlobalOverride"));

	struct
	{
		class UClass* /*APickupReviveBeacon*/ ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameState.GetRedeployRespawnDelay
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AProjectXGameState::GetRedeployRespawnDelay()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.GetRedeployRespawnDelay"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameState.GetPostGameLength
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AProjectXGameState::GetPostGameLength()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.GetPostGameLength"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameState.GetPlayerResult
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class AProjectXPlayerState*    PlayerState                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// EMatchResult                   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

EMatchResult AProjectXGameState::GetPlayerResult(class AProjectXPlayerState* PlayerState)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.GetPlayerResult"));

	struct
	{
		class AProjectXPlayerState*    PlayerState;
		EMatchResult                   ReturnValue;
	} params = {};

	params.PlayerState = PlayerState;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameState.GetPlayerClassListStatic
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UClass* /*AProjectXGameState*/ GameStateClass                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TArray<class UClass* /*AProjectXCharacter*/> ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_ReferenceParm, CPF_UObjectWrapper, CPF_NativeAccessSpecifierPublic)

TArray<class UClass* /*AProjectXCharacter*/> AProjectXGameState::GetPlayerClassListStatic(class UClass* /*AProjectXGameState*/ GameStateClass)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.GetPlayerClassListStatic"));

	struct
	{
		class UClass* /*AProjectXGameState*/ GameStateClass;
		TArray<class UClass* /*AProjectXCharacter*/> ReturnValue;
	} params = {};

	params.GameStateClass = GameStateClass;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameState.GetPlayerClassList
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// TArray<class UClass* /*AProjectXCharacter*/> ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_ReferenceParm, CPF_UObjectWrapper, CPF_NativeAccessSpecifierPublic)

TArray<class UClass* /*AProjectXCharacter*/> AProjectXGameState::GetPlayerClassList()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.GetPlayerClassList"));

	struct
	{
		TArray<class UClass* /*AProjectXCharacter*/> ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameState.GetNumberOfTeams
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int AProjectXGameState::GetNumberOfTeams()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.GetNumberOfTeams"));

	struct
	{
		int                            ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameState.GetMaxPlayers
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AProjectXGameState::GetMaxPlayers()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.GetMaxPlayers"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameState.GetMatchTimeRemaining
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AProjectXGameState::GetMatchTimeRemaining()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.GetMatchTimeRemaining"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameState.GetMatchStartTime
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AProjectXGameState::GetMatchStartTime()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.GetMatchStartTime"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameState.GetMatchLengthStatic
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AProjectXGameState::GetMatchLengthStatic(class UObject* WorldContextObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.GetMatchLengthStatic"));

	struct
	{
		class UObject*                 WorldContextObject;
		float                          ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameState.GetMatchLength
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AProjectXGameState::GetMatchLength()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.GetMatchLength"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameState.GetMatchEndTimestamp
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AProjectXGameState::GetMatchEndTimestamp()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.GetMatchEndTimestamp"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameState.GetMatchEndTime
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AProjectXGameState::GetMatchEndTime()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.GetMatchEndTime"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameState.GetMatchElapsedTimeStatic
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AProjectXGameState::GetMatchElapsedTimeStatic(class UObject* WorldContextObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.GetMatchElapsedTimeStatic"));

	struct
	{
		class UObject*                 WorldContextObject;
		float                          ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameState.GetMatchElapsedTime
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AProjectXGameState::GetMatchElapsedTime()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.GetMatchElapsedTime"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameState.GetGameTypeTextStatic
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// EGameType                      InGameType                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FText                   ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)

struct FText AProjectXGameState::GetGameTypeTextStatic(class UObject* WorldContextObject, EGameType InGameType)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.GetGameTypeTextStatic"));

	struct
	{
		class UObject*                 WorldContextObject;
		EGameType                      InGameType;
		struct FText                   ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.InGameType = InGameType;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameState.GetGameType
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// EGameType                      ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

EGameType AProjectXGameState::GetGameType()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.GetGameType"));

	struct
	{
		EGameType                      ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameState.GetGameStateNoAutoWorldContext
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AGameStateBase*          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class AGameStateBase* AProjectXGameState::GetGameStateNoAutoWorldContext(class UObject* WorldContextObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.GetGameStateNoAutoWorldContext"));

	struct
	{
		class UObject*                 WorldContextObject;
		class AGameStateBase*          ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameState.GetEnemyColour
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FName                   ColourName                     (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FLinearColor            ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FLinearColor AProjectXGameState::GetEnemyColour(const struct FName& ColourName)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.GetEnemyColour"));

	struct
	{
		struct FName                   ColourName;
		struct FLinearColor            ReturnValue;
	} params = {};

	params.ColourName = ColourName;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameState.GetAllyColour
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FName                   ColourName                     (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FLinearColor            ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FLinearColor AProjectXGameState::GetAllyColour(const struct FName& ColourName)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.GetAllyColour"));

	struct
	{
		struct FName                   ColourName;
		struct FLinearColor            ReturnValue;
	} params = {};

	params.ColourName = ColourName;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameState.CanSpawnInPV
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXGameState::CanSpawnInPV()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.CanSpawnInPV"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameState.CanShowDeployScreen
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXGameState::CanShowDeployScreen()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.CanShowDeployScreen"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameState.BroadcastTimerStatic
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          TimerDuration                  (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// unsigned char                  Type                           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXGameState::BroadcastTimerStatic(class UObject* WorldContextObject, float TimerDuration, unsigned char Type)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameState.BroadcastTimerStatic"));

	struct
	{
		class UObject*                 WorldContextObject;
		float                          TimerDuration;
		unsigned char                  Type;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.TimerDuration = TimerDuration;
	params.Type = Type;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameStateAllOutWarfare.OnShieldIsUnderAttack
// (FUNC_Native, FUNC_Protected)
// Parameters:
// class AShieldGenerator*        ShieldUnderAttack              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXGameStateAllOutWarfare::OnShieldIsUnderAttack(class AShieldGenerator* ShieldUnderAttack)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameStateAllOutWarfare.OnShieldIsUnderAttack"));

	struct
	{
		class AShieldGenerator*        ShieldUnderAttack;
	} params = {};

	params.ShieldUnderAttack = ShieldUnderAttack;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameStateAllOutWarfare.OnShieldHealthChanged
// (FUNC_Native, FUNC_Protected)
// Parameters:
// class AShieldGenerator*        ShieldUnderAttack              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          Delta                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXGameStateAllOutWarfare::OnShieldHealthChanged(class AShieldGenerator* ShieldUnderAttack, float Delta)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameStateAllOutWarfare.OnShieldHealthChanged"));

	struct
	{
		class AShieldGenerator*        ShieldUnderAttack;
		float                          Delta;
	} params = {};

	params.ShieldUnderAttack = ShieldUnderAttack;
	params.Delta = Delta;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameStateAllOutWarfare.OnRep_TeamPercentages
// (FUNC_Native, FUNC_Protected)

void AProjectXGameStateAllOutWarfare::OnRep_TeamPercentages()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameStateAllOutWarfare.OnRep_TeamPercentages"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameStateAllOutWarfare.OnRep_Objectives
// (FUNC_Native, FUNC_Protected)

void AProjectXGameStateAllOutWarfare::OnRep_Objectives()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameStateAllOutWarfare.OnRep_Objectives"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameStateAllOutWarfare.OnCommandCenterUnderAttack
// (FUNC_Native, FUNC_Protected)
// Parameters:
// class ACommandCenter*          CommandCenterUnderAttack       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXGameStateAllOutWarfare::OnCommandCenterUnderAttack(class ACommandCenter* CommandCenterUnderAttack)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameStateAllOutWarfare.OnCommandCenterUnderAttack"));

	struct
	{
		class ACommandCenter*          CommandCenterUnderAttack;
	} params = {};

	params.CommandCenterUnderAttack = CommandCenterUnderAttack;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameStateAllOutWarfare.OnCommandCenterHealthChanged
// (FUNC_Native, FUNC_Protected)
// Parameters:
// class ACommandCenter*          CommandCenterUnderAttack       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          Delta                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXGameStateAllOutWarfare::OnCommandCenterHealthChanged(class ACommandCenter* CommandCenterUnderAttack, float Delta)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameStateAllOutWarfare.OnCommandCenterHealthChanged"));

	struct
	{
		class ACommandCenter*          CommandCenterUnderAttack;
		float                          Delta;
	} params = {};

	params.CommandCenterUnderAttack = CommandCenterUnderAttack;
	params.Delta = Delta;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameStateAllOutWarfare.GetTeamPercentages
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// TArray<struct FTeamPercentage> ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)

TArray<struct FTeamPercentage> AProjectXGameStateAllOutWarfare::GetTeamPercentages()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameStateAllOutWarfare.GetTeamPercentages"));

	struct
	{
		TArray<struct FTeamPercentage> ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameStateAllOutWarfare.GetShieldGeneratorsByTeam
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// unsigned char                  Team                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TArray<class AShieldGenerator*> FoundShieldGenerators          (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXGameStateAllOutWarfare::GetShieldGeneratorsByTeam(unsigned char Team, TArray<class AShieldGenerator*>* FoundShieldGenerators)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameStateAllOutWarfare.GetShieldGeneratorsByTeam"));

	struct
	{
		unsigned char                  Team;
		TArray<class AShieldGenerator*> FoundShieldGenerators;
		bool                           ReturnValue;
	} params = {};

	params.Team = Team;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	if (FoundShieldGenerators != nullptr)
		*FoundShieldGenerators = params.FoundShieldGenerators;

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameStateAllOutWarfare.GetObjectivesForTeam
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// unsigned char                  Team                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TArray<class AActor*>          FoundObjectives                (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXGameStateAllOutWarfare::GetObjectivesForTeam(unsigned char Team, TArray<class AActor*>* FoundObjectives)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameStateAllOutWarfare.GetObjectivesForTeam"));

	struct
	{
		unsigned char                  Team;
		TArray<class AActor*>          FoundObjectives;
		bool                           ReturnValue;
	} params = {};

	params.Team = Team;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	if (FoundObjectives != nullptr)
		*FoundObjectives = params.FoundObjectives;

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameStateAllOutWarfare.GetObjectives
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// TArray<struct FTeamObjective>  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_NativeAccessSpecifierPublic)

TArray<struct FTeamObjective> AProjectXGameStateAllOutWarfare::GetObjectives()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameStateAllOutWarfare.GetObjectives"));

	struct
	{
		TArray<struct FTeamObjective>  ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameStateAllOutWarfare.GetCommandCenterByTeam
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// unsigned char                  Team                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class ACommandCenter*          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class ACommandCenter* AProjectXGameStateAllOutWarfare::GetCommandCenterByTeam(unsigned char Team)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameStateAllOutWarfare.GetCommandCenterByTeam"));

	struct
	{
		unsigned char                  Team;
		class ACommandCenter*          ReturnValue;
	} params = {};

	params.Team = Team;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameStateAssault.OnRep_Phase
// (FUNC_Native, FUNC_Protected)
// Parameters:
// int                            PreviousAssaultPhase           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXGameStateAssault::OnRep_Phase(int PreviousAssaultPhase)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameStateAssault.OnRep_Phase"));

	struct
	{
		int                            PreviousAssaultPhase;
	} params = {};

	params.PreviousAssaultPhase = PreviousAssaultPhase;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameStateAssault.OnRep_AssaultRoles
// (FUNC_Native, FUNC_Protected)

void AProjectXGameStateAssault::OnRep_AssaultRoles()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameStateAssault.OnRep_AssaultRoles"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameStateAssault.OnRep_AssaultPoints
// (FUNC_Native, FUNC_Protected)

void AProjectXGameStateAssault::OnRep_AssaultPoints()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameStateAssault.OnRep_AssaultPoints"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameStateAssault.GetTeamRoleStatic
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class AActor*                  Target                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// EAssaultRole                   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

EAssaultRole AProjectXGameStateAssault::GetTeamRoleStatic(class AActor* Target)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameStateAssault.GetTeamRoleStatic"));

	struct
	{
		class AActor*                  Target;
		EAssaultRole                   ReturnValue;
	} params = {};

	params.Target = Target;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameStateAssault.GetTeamByRole
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// EAssaultRole                   AssaultRole                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int AProjectXGameStateAssault::GetTeamByRole(EAssaultRole AssaultRole)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameStateAssault.GetTeamByRole"));

	struct
	{
		EAssaultRole                   AssaultRole;
		int                            ReturnValue;
	} params = {};

	params.AssaultRole = AssaultRole;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameStateAssault.GetRoleFromTeamStatic
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// unsigned char                  TeamID                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// EAssaultRole                   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

EAssaultRole AProjectXGameStateAssault::GetRoleFromTeamStatic(class UObject* WorldContextObject, unsigned char TeamID)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameStateAssault.GetRoleFromTeamStatic"));

	struct
	{
		class UObject*                 WorldContextObject;
		unsigned char                  TeamID;
		EAssaultRole                   ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.TeamID = TeamID;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameStateAssault.GetPreviousAssaultPhase
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// unsigned char                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

unsigned char AProjectXGameStateAssault::GetPreviousAssaultPhase()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameStateAssault.GetPreviousAssaultPhase"));

	struct
	{
		unsigned char                  ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameStateAssault.GetAssaultPoints
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// TArray<class AAssaultPoint*>   ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)

TArray<class AAssaultPoint*> AProjectXGameStateAssault::GetAssaultPoints()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameStateAssault.GetAssaultPoints"));

	struct
	{
		TArray<class AAssaultPoint*>   ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameStateAssault.GetAssaultPhase
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// unsigned char                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

unsigned char AProjectXGameStateAssault::GetAssaultPhase()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameStateAssault.GetAssaultPhase"));

	struct
	{
		unsigned char                  ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameStateAssault.GetActiveAssaultPoints
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// TArray<class AAssaultPoint*>   ActivePoints                   (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_NativeAccessSpecifierPublic)

void AProjectXGameStateAssault::GetActiveAssaultPoints(TArray<class AAssaultPoint*>* ActivePoints)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameStateAssault.GetActiveAssaultPoints"));

	struct
	{
		TArray<class AAssaultPoint*>   ActivePoints;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	if (ActivePoints != nullptr)
		*ActivePoints = params.ActivePoints;
}


// Function ProjectX.ProjectXGameStateBaseControl.OnRep_CapturePoints
// (FUNC_Native, FUNC_Protected)

void AProjectXGameStateBaseControl::OnRep_CapturePoints()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameStateBaseControl.OnRep_CapturePoints"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameStateBaseControl.GetControlPoints
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// TArray<class ACapturePoint*>   ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)

TArray<class ACapturePoint*> AProjectXGameStateBaseControl::GetControlPoints()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameStateBaseControl.GetControlPoints"));

	struct
	{
		TArray<class ACapturePoint*>   ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameStateBaseControl.GetBaseCount
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// unsigned char                  Team                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int AProjectXGameStateBaseControl::GetBaseCount(unsigned char Team)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameStateBaseControl.GetBaseCount"));

	struct
	{
		unsigned char                  Team;
		int                            ReturnValue;
	} params = {};

	params.Team = Team;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameStateHorde.UpdateWaveProgress
// (FUNC_Native, FUNC_Protected)
// Parameters:
// class AWaveSpawner*            WaveSpawner                    (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            WaveSize                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            WaveKills                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXGameStateHorde::UpdateWaveProgress(class AWaveSpawner* WaveSpawner, int WaveSize, int WaveKills)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameStateHorde.UpdateWaveProgress"));

	struct
	{
		class AWaveSpawner*            WaveSpawner;
		int                            WaveSize;
		int                            WaveKills;
	} params = {};

	params.WaveSpawner = WaveSpawner;
	params.WaveSize = WaveSize;
	params.WaveKills = WaveKills;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameStateHorde.UpdateCurrentWave
// (FUNC_Native, FUNC_Protected)
// Parameters:
// class AWaveSpawner*            Spawner                        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXGameStateHorde::UpdateCurrentWave(class AWaveSpawner* Spawner)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameStateHorde.UpdateCurrentWave"));

	struct
	{
		class AWaveSpawner*            Spawner;
	} params = {};

	params.Spawner = Spawner;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameStateHorde.ShowKillCounter
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)

void AProjectXGameStateHorde::ShowKillCounter()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameStateHorde.ShowKillCounter"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameStateHorde.SetDifficultyLevel
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// EDifficultyLevel               NewDifficultyLevel             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXGameStateHorde::SetDifficultyLevel(EDifficultyLevel NewDifficultyLevel)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameStateHorde.SetDifficultyLevel"));

	struct
	{
		EDifficultyLevel               NewDifficultyLevel;
	} params = {};

	params.NewDifficultyLevel = NewDifficultyLevel;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameStateHorde.OnTimedWaveComplete
// (FUNC_Native, FUNC_Public)
// Parameters:
// class AWaveSpawner*            WaveSpawner                    (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bSuccess                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXGameStateHorde::OnTimedWaveComplete(class AWaveSpawner* WaveSpawner, bool bSuccess)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameStateHorde.OnTimedWaveComplete"));

	struct
	{
		class AWaveSpawner*            WaveSpawner;
		bool                           bSuccess;
	} params = {};

	params.WaveSpawner = WaveSpawner;
	params.bSuccess = bSuccess;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameStateHorde.OnRep_WaveInfo
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void AProjectXGameStateHorde::OnRep_WaveInfo()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameStateHorde.OnRep_WaveInfo"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameStateHorde.OnRep_DifficultyLevel
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void AProjectXGameStateHorde::OnRep_DifficultyLevel()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameStateHorde.OnRep_DifficultyLevel"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameStateHorde.Multicast_DisplayKillCounter
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_NetMulticast, FUNC_Public)

void AProjectXGameStateHorde::Multicast_DisplayKillCounter()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameStateHorde.Multicast_DisplayKillCounter"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameStateHorde.K2_GetPrimaryWaveSpawner
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AWaveSpawner*            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class AWaveSpawner* AProjectXGameStateHorde::K2_GetPrimaryWaveSpawner()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameStateHorde.K2_GetPrimaryWaveSpawner"));

	struct
	{
		class AWaveSpawner*            ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameStateHorde.GetCurrentWaveInfo
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FWaveInfo               ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_ReferenceParm, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

struct FWaveInfo AProjectXGameStateHorde::GetCurrentWaveInfo()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameStateHorde.GetCurrentWaveInfo"));

	struct
	{
		struct FWaveInfo               ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameStateHorde.GetCurrentDifficultyLevel
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// EDifficultyLevel               ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

EDifficultyLevel AProjectXGameStateHorde::GetCurrentDifficultyLevel()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameStateHorde.GetCurrentDifficultyLevel"));

	struct
	{
		EDifficultyLevel               ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameStateKingofTheHill.OnRep_KingOfTHeHillPhaseInfo
// (FUNC_Native, FUNC_Protected)

void AProjectXGameStateKingofTheHill::OnRep_KingOfTHeHillPhaseInfo()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameStateKingofTheHill.OnRep_KingOfTHeHillPhaseInfo"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameStateKingofTheHill.GetPhaseInfo
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FKingOfTheHillPhaseInfo ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)

struct FKingOfTheHillPhaseInfo AProjectXGameStateKingofTheHill::GetPhaseInfo()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameStateKingofTheHill.GetPhaseInfo"));

	struct
	{
		struct FKingOfTheHillPhaseInfo ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameStateTDCapFlag.UpdateFlags
// (FUNC_Final, FUNC_Native, FUNC_Public)
// Parameters:
// class AFlag*                   Flag                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bNewFlag                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXGameStateTDCapFlag::UpdateFlags(class AFlag* Flag, bool bNewFlag)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameStateTDCapFlag.UpdateFlags"));

	struct
	{
		class AFlag*                   Flag;
		bool                           bNewFlag;
	} params = {};

	params.Flag = Flag;
	params.bNewFlag = bNewFlag;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameStateTDCapFlag.OnRep_FlagSpawns
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void AProjectXGameStateTDCapFlag::OnRep_FlagSpawns()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameStateTDCapFlag.OnRep_FlagSpawns"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameStateTDCapFlag.OnRep_Flags
// (FUNC_Final, FUNC_Native, FUNC_Protected)
// Parameters:
// TArray<class AFlag*>           PreviousFlags                  (CPF_Parm, CPF_ZeroConstructor, CPF_NativeAccessSpecifierPublic)

void AProjectXGameStateTDCapFlag::OnRep_Flags(TArray<class AFlag*> PreviousFlags)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameStateTDCapFlag.OnRep_Flags"));

	struct
	{
		TArray<class AFlag*>           PreviousFlags;
	} params = {};

	params.PreviousFlags = PreviousFlags;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameStateTDCapFlag.GetFlagSpawns
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// TArray<class AFlagSpawn*>      ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)

TArray<class AFlagSpawn*> AProjectXGameStateTDCapFlag::GetFlagSpawns()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameStateTDCapFlag.GetFlagSpawns"));

	struct
	{
		TArray<class AFlagSpawn*>      ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameStateTDCapFlag.GetFlagClass
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UClass* /*AFlag*/        ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UClass* /*AFlag*/ AProjectXGameStateTDCapFlag::GetFlagClass()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameStateTDCapFlag.GetFlagClass"));

	struct
	{
		class UClass* /*AFlag*/        ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameStateTDCapFlag.GetFlagbyCharacter
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AProjectXCharacter*      Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AFlag*                   ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class AFlag* AProjectXGameStateTDCapFlag::GetFlagbyCharacter(class AProjectXCharacter* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameStateTDCapFlag.GetFlagbyCharacter"));

	struct
	{
		class AProjectXCharacter*      Character;
		class AFlag*                   ReturnValue;
	} params = {};

	params.Character = Character;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameStateVIP.VIPDefeated
// (FUNC_Final, FUNC_Native, FUNC_Public)
// Parameters:
// class AProjectXPlayerState*    PlayerState                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXGameStateVIP::VIPDefeated(class AProjectXPlayerState* PlayerState)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameStateVIP.VIPDefeated"));

	struct
	{
		class AProjectXPlayerState*    PlayerState;
	} params = {};

	params.PlayerState = PlayerState;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameStateVIP.OnRep_VIPInfo
// (FUNC_Final, FUNC_Native, FUNC_Public)

void AProjectXGameStateVIP::OnRep_VIPInfo()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameStateVIP.OnRep_VIPInfo"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameStateVIP.GetVIPsByTeam
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// unsigned char                  Team                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TArray<struct FVIP>            FoundPlayerStates              (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXGameStateVIP::GetVIPsByTeam(unsigned char Team, TArray<struct FVIP>* FoundPlayerStates)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameStateVIP.GetVIPsByTeam"));

	struct
	{
		unsigned char                  Team;
		TArray<struct FVIP>            FoundPlayerStates;
		bool                           ReturnValue;
	} params = {};

	params.Team = Team;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	if (FoundPlayerStates != nullptr)
		*FoundPlayerStates = params.FoundPlayerStates;

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameStateVIP.GetVIPS
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// TArray<struct FTeamVIP>        FoundVIPs                      (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_NativeAccessSpecifierPublic)

void AProjectXGameStateVIP::GetVIPS(TArray<struct FTeamVIP>* FoundVIPs)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameStateVIP.GetVIPS"));

	struct
	{
		TArray<struct FTeamVIP>        FoundVIPs;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	if (FoundVIPs != nullptr)
		*FoundVIPs = params.FoundVIPs;
}


// Function ProjectX.ProjectXGameStateVIP.GetVIPByPlayerState
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AProjectXPlayerState*    PlayerState                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FVIP                    FoundVIP                       (CPF_Parm, CPF_OutParm, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXGameStateVIP::GetVIPByPlayerState(class AProjectXPlayerState* PlayerState, struct FVIP* FoundVIP)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameStateVIP.GetVIPByPlayerState"));

	struct
	{
		class AProjectXPlayerState*    PlayerState;
		struct FVIP                    FoundVIP;
		bool                           ReturnValue;
	} params = {};

	params.PlayerState = PlayerState;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	if (FoundVIP != nullptr)
		*FoundVIP = params.FoundVIP;

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameStateVIP.GetNumberOfVIPS
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int AProjectXGameStateVIP::GetNumberOfVIPS()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameStateVIP.GetNumberOfVIPS"));

	struct
	{
		int                            ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameViewportClient.ToggleDisplayMesh
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bToggled                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UProjectXGameViewportClient::ToggleDisplayMesh(bool bToggled)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameViewportClient.ToggleDisplayMesh"));

	struct
	{
		bool                           bToggled;
	} params = {};

	params.bToggled = bToggled;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameViewportClient.ToggleAdvancedUserWidgetByClass
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UClass* /*UAdvancedUserWidget*/ AdvancedUserWidgetClass        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TEnumAsByte<EWindowToggleCommand> ToggleCommand                  (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UAdvancedUserWidget*     ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UAdvancedUserWidget* UProjectXGameViewportClient::ToggleAdvancedUserWidgetByClass(class UObject* WorldContextObject, class UClass* /*UAdvancedUserWidget*/ AdvancedUserWidgetClass, TEnumAsByte<EWindowToggleCommand> ToggleCommand)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameViewportClient.ToggleAdvancedUserWidgetByClass"));

	struct
	{
		class UObject*                 WorldContextObject;
		class UClass* /*UAdvancedUserWidget*/ AdvancedUserWidgetClass;
		TEnumAsByte<EWindowToggleCommand> ToggleCommand;
		class UAdvancedUserWidget*     ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.AdvancedUserWidgetClass = AdvancedUserWidgetClass;
	params.ToggleCommand = ToggleCommand;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameViewportClient.ToggleAdvancedUserWidget
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UAdvancedUserWidget*     AdvancedUserWidgetClass        (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TEnumAsByte<EWindowToggleCommand> ToggleCommand                  (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UProjectXGameViewportClient::ToggleAdvancedUserWidget(class UObject* WorldContextObject, class UAdvancedUserWidget* AdvancedUserWidgetClass, TEnumAsByte<EWindowToggleCommand> ToggleCommand)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameViewportClient.ToggleAdvancedUserWidget"));

	struct
	{
		class UObject*                 WorldContextObject;
		class UAdvancedUserWidget*     AdvancedUserWidgetClass;
		TEnumAsByte<EWindowToggleCommand> ToggleCommand;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.AdvancedUserWidgetClass = AdvancedUserWidgetClass;
	params.ToggleCommand = ToggleCommand;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameViewportClient.ReleaseUserWidgetFromPool
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UUserWidget*             UserWidget                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UProjectXGameViewportClient::ReleaseUserWidgetFromPool(class UObject* WorldContextObject, class UUserWidget* UserWidget)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameViewportClient.ReleaseUserWidgetFromPool"));

	struct
	{
		class UObject*                 WorldContextObject;
		class UUserWidget*             UserWidget;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.UserWidget = UserWidget;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameViewportClient.KeysRebound
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void UProjectXGameViewportClient::KeysRebound()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameViewportClient.KeysRebound"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXGameViewportClient.IsDisplayMeshVisible
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UProjectXGameViewportClient::IsDisplayMeshVisible()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameViewportClient.IsDisplayMeshVisible"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameViewportClient.IsAdvancedUserWidgetActiveByClass
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UClass* /*UAdvancedUserWidget*/ AdvancedUserWidgetClass        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UProjectXGameViewportClient::IsAdvancedUserWidgetActiveByClass(class UObject* WorldContextObject, class UClass* /*UAdvancedUserWidget*/ AdvancedUserWidgetClass)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameViewportClient.IsAdvancedUserWidgetActiveByClass"));

	struct
	{
		class UObject*                 WorldContextObject;
		class UClass* /*UAdvancedUserWidget*/ AdvancedUserWidgetClass;
		bool                           ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.AdvancedUserWidgetClass = AdvancedUserWidgetClass;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameViewportClient.GetViewportClient
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UProjectXGameViewportClient* ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UProjectXGameViewportClient* UProjectXGameViewportClient::GetViewportClient(class UObject* WorldContextObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameViewportClient.GetViewportClient"));

	struct
	{
		class UObject*                 WorldContextObject;
		class UProjectXGameViewportClient* ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameViewportClient.GetTooltipWidget
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UUserWidget*             ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UUserWidget* UProjectXGameViewportClient::GetTooltipWidget()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameViewportClient.GetTooltipWidget"));

	struct
	{
		class UUserWidget*             ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameViewportClient.GetHighestActiveWidget
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UClass* /*UAdvancedUserWidget*/ ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UClass* /*UAdvancedUserWidget*/ UProjectXGameViewportClient::GetHighestActiveWidget()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameViewportClient.GetHighestActiveWidget"));

	struct
	{
		class UClass* /*UAdvancedUserWidget*/ ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameViewportClient.GetDisplayMesh
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AActor*                  ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class AActor* UProjectXGameViewportClient::GetDisplayMesh()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameViewportClient.GetDisplayMesh"));

	struct
	{
		class AActor*                  ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameViewportClient.CreateUserWidgetFromPool
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UClass* /*UUserWidget*/  UserWidget                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UUserWidget*             ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UUserWidget* UProjectXGameViewportClient::CreateUserWidgetFromPool(class UObject* WorldContextObject, class UClass* /*UUserWidget*/ UserWidget)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameViewportClient.CreateUserWidgetFromPool"));

	struct
	{
		class UObject*                 WorldContextObject;
		class UClass* /*UUserWidget*/  UserWidget;
		class UUserWidget*             ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.UserWidget = UserWidget;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameViewportClient.CreateAdvancedUserWidget
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UClass* /*UAdvancedUserWidget*/ AdvancedUserWidgetClass        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            ZOrder                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UAdvancedUserWidget*     ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UAdvancedUserWidget* UProjectXGameViewportClient::CreateAdvancedUserWidget(class UObject* WorldContextObject, class UClass* /*UAdvancedUserWidget*/ AdvancedUserWidgetClass, int ZOrder)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameViewportClient.CreateAdvancedUserWidget"));

	struct
	{
		class UObject*                 WorldContextObject;
		class UClass* /*UAdvancedUserWidget*/ AdvancedUserWidgetClass;
		int                            ZOrder;
		class UAdvancedUserWidget*     ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.AdvancedUserWidgetClass = AdvancedUserWidgetClass;
	params.ZOrder = ZOrder;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXGameViewportClient.BuildWidgetPoolForWidget
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UClass* /*UUserWidget*/  UserWidget                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            PoolSize                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UProjectXGameViewportClient::BuildWidgetPoolForWidget(class UObject* WorldContextObject, class UClass* /*UUserWidget*/ UserWidget, int PoolSize)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXGameViewportClient.BuildWidgetPoolForWidget"));

	struct
	{
		class UObject*                 WorldContextObject;
		class UClass* /*UUserWidget*/  UserWidget;
		int                            PoolSize;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.UserWidget = UserWidget;
	params.PoolSize = PoolSize;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXHUD.UpdateReticleWidget
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UClass* /*UReticleWidget*/ WidgetClass                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UReticleWidget*          ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UReticleWidget* AProjectXHUD::UpdateReticleWidget(class UClass* /*UReticleWidget*/ WidgetClass)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXHUD.UpdateReticleWidget"));

	struct
	{
		class UClass* /*UReticleWidget*/ WidgetClass;
		class UReticleWidget*          ReturnValue;
	} params = {};

	params.WidgetClass = WidgetClass;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXHUD.ToggleWidgetByClass
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UClass* /*UAdvancedUserWidget*/ WidgetClass                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TEnumAsByte<EWindowToggleCommand> ToggleCommand                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXHUD::ToggleWidgetByClass(class UClass* /*UAdvancedUserWidget*/ WidgetClass, TEnumAsByte<EWindowToggleCommand> ToggleCommand)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXHUD.ToggleWidgetByClass"));

	struct
	{
		class UClass* /*UAdvancedUserWidget*/ WidgetClass;
		TEnumAsByte<EWindowToggleCommand> ToggleCommand;
	} params = {};

	params.WidgetClass = WidgetClass;
	params.ToggleCommand = ToggleCommand;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXHUD.ShowPodium
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void AProjectXHUD::ShowPodium()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXHUD.ShowPodium"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXHUD.ShowMatchResultWidget
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void AProjectXHUD::ShowMatchResultWidget()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXHUD.ShowMatchResultWidget"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXHUD.RemoveHUDUserWidget
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UUserWidget*             Widget                         (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXHUD::RemoveHUDUserWidget(class UUserWidget* Widget)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXHUD.RemoveHUDUserWidget"));

	struct
	{
		class UUserWidget*             Widget;
	} params = {};

	params.Widget = Widget;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXHUD.OpenPostGameMenu
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void AProjectXHUD::OpenPostGameMenu()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXHUD.OpenPostGameMenu"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXHUD.OpenFollowScreen
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void AProjectXHUD::OpenFollowScreen()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXHUD.OpenFollowScreen"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXHUD.OnPlayerDeath
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)

void AProjectXHUD::OnPlayerDeath()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXHUD.OnPlayerDeath"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXHUD.GetWidgetByType
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UClass* /*UUserWidget*/  WidgetClass                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UUserWidget*             ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UUserWidget* AProjectXHUD::GetWidgetByType(class UClass* /*UUserWidget*/ WidgetClass)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXHUD.GetWidgetByType"));

	struct
	{
		class UClass* /*UUserWidget*/  WidgetClass;
		class UUserWidget*             ReturnValue;
	} params = {};

	params.WidgetClass = WidgetClass;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXHUD.GetReticleWidget
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UReticleWidget*          ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UReticleWidget* AProjectXHUD::GetReticleWidget()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXHUD.GetReticleWidget"));

	struct
	{
		class UReticleWidget*          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXHUD.GetMapWidget
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UUserWidget*             ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UUserWidget* AProjectXHUD::GetMapWidget()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXHUD.GetMapWidget"));

	struct
	{
		class UUserWidget*             ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXHUD.GetHUD
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            Slot                           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AProjectXHUD*            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class AProjectXHUD* AProjectXHUD::GetHUD(class UObject* WorldContextObject, int Slot)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXHUD.GetHUD"));

	struct
	{
		class UObject*                 WorldContextObject;
		int                            Slot;
		class AProjectXHUD*            ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.Slot = Slot;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXHUD.GetGameplayWidget
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UHUDBasicUserWidget*     ReturnValue                    (CPF_ConstParm, CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UHUDBasicUserWidget* AProjectXHUD::GetGameplayWidget()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXHUD.GetGameplayWidget"));

	struct
	{
		class UHUDBasicUserWidget*     ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXHUD.DrawProjectileDebug
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void AProjectXHUD::DrawProjectileDebug()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXHUD.DrawProjectileDebug"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXHUD.DeferredOpenMap
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          Delay                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXHUD::DeferredOpenMap(float Delay)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXHUD.DeferredOpenMap"));

	struct
	{
		float                          Delay;
	} params = {};

	params.Delay = Delay;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXHUD.CreateMenuWidget
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UClass* /*UAdvancedUserWidget*/ WidgetClass                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            ZOrder                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UAdvancedUserWidget*     ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UAdvancedUserWidget* AProjectXHUD::CreateMenuWidget(class UClass* /*UAdvancedUserWidget*/ WidgetClass, int ZOrder)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXHUD.CreateMenuWidget"));

	struct
	{
		class UClass* /*UAdvancedUserWidget*/ WidgetClass;
		int                            ZOrder;
		class UAdvancedUserWidget*     ReturnValue;
	} params = {};

	params.WidgetClass = WidgetClass;
	params.ZOrder = ZOrder;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXHUD.CreateHUDUserWidget
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UClass* /*UObject*/      WidgetClass                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            ZOrder                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UHUDBasicUserWidget*     ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UHUDBasicUserWidget* AProjectXHUD::CreateHUDUserWidget(class UClass* /*UObject*/ WidgetClass, int ZOrder)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXHUD.CreateHUDUserWidget"));

	struct
	{
		class UClass* /*UObject*/      WidgetClass;
		int                            ZOrder;
		class UHUDBasicUserWidget*     ReturnValue;
	} params = {};

	params.WidgetClass = WidgetClass;
	params.ZOrder = ZOrder;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXHUD.CreateGlobalMessageDialogue
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FContextMenuOption      ContextMenuOption1             (CPF_ConstParm, CPF_Parm, CPF_NativeAccessSpecifierPublic)
// struct FContextMenuOption      ContextMenuOption2             (CPF_ConstParm, CPF_Parm, CPF_NativeAccessSpecifierPublic)
// struct FText                   Title                          (CPF_ConstParm, CPF_Parm, CPF_NativeAccessSpecifierPublic)
// struct FText                   Message                        (CPF_ConstParm, CPF_Parm, CPF_NativeAccessSpecifierPublic)
// bool                           bIsDismissable                 (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UObject*                 ContextObject                  (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UContextMenuWidget*      ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UContextMenuWidget* AProjectXHUD::CreateGlobalMessageDialogue(class UObject* WorldContextObject, const struct FContextMenuOption& ContextMenuOption1, const struct FContextMenuOption& ContextMenuOption2, const struct FText& Title, const struct FText& Message, bool bIsDismissable, class UObject* ContextObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXHUD.CreateGlobalMessageDialogue"));

	struct
	{
		class UObject*                 WorldContextObject;
		struct FContextMenuOption      ContextMenuOption1;
		struct FContextMenuOption      ContextMenuOption2;
		struct FText                   Title;
		struct FText                   Message;
		bool                           bIsDismissable;
		class UObject*                 ContextObject;
		class UContextMenuWidget*      ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.ContextMenuOption1 = ContextMenuOption1;
	params.ContextMenuOption2 = ContextMenuOption2;
	params.Title = Title;
	params.Message = Message;
	params.bIsDismissable = bIsDismissable;
	params.ContextObject = ContextObject;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXHUD.CreateContextMenu
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TArray<struct FContextMenuOption> ContextMenuOptions             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_NativeAccessSpecifierPublic)
// struct FText                   Title                          (CPF_ConstParm, CPF_Parm, CPF_NativeAccessSpecifierPublic)
// bool                           bIsDismissable                 (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UObject*                 ContextObject                  (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UContextMenuWidget*      ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UContextMenuWidget* AProjectXHUD::CreateContextMenu(class UObject* WorldContextObject, TArray<struct FContextMenuOption> ContextMenuOptions, const struct FText& Title, bool bIsDismissable, class UObject* ContextObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXHUD.CreateContextMenu"));

	struct
	{
		class UObject*                 WorldContextObject;
		TArray<struct FContextMenuOption> ContextMenuOptions;
		struct FText                   Title;
		bool                           bIsDismissable;
		class UObject*                 ContextObject;
		class UContextMenuWidget*      ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.ContextMenuOptions = ContextMenuOptions;
	params.Title = Title;
	params.bIsDismissable = bIsDismissable;
	params.ContextObject = ContextObject;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXHUD.CloseQuickChat
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void AProjectXHUD::CloseQuickChat()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXHUD.CloseQuickChat"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXNavLinkProxy.InternalSmartLinkReached
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_HasDefaults)
// Parameters:
// class AActor*                  MovingActor                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FVector                 DestinationPoint               (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXNavLinkProxy::InternalSmartLinkReached(class AActor* MovingActor, const struct FVector& DestinationPoint)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXNavLinkProxy.InternalSmartLinkReached"));

	struct
	{
		class AActor*                  MovingActor;
		struct FVector                 DestinationPoint;
	} params = {};

	params.MovingActor = MovingActor;
	params.DestinationPoint = DestinationPoint;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXSpawnerObjective.WarmupStarted
// (FUNC_Native, FUNC_Protected)

void AProjectXSpawnerObjective::WarmupStarted()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXSpawnerObjective.WarmupStarted"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXSpawnerObjective.RequestObjectiveStatusUpdateDelayed
// (FUNC_Native, FUNC_Protected)

void AProjectXSpawnerObjective::RequestObjectiveStatusUpdateDelayed()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXSpawnerObjective.RequestObjectiveStatusUpdateDelayed"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXSpawnerObjective.RequestObjectiveStatusUpdate
// (FUNC_Native, FUNC_Protected)

void AProjectXSpawnerObjective::RequestObjectiveStatusUpdate()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXSpawnerObjective.RequestObjectiveStatusUpdate"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXSpawnerObjective.OnWarmupStarted
// (FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)

void AProjectXSpawnerObjective::OnWarmupStarted()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXSpawnerObjective.OnWarmupStarted"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXSpawnerObjective.OnRep_ObjectiveStatus
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void AProjectXSpawnerObjective::OnRep_ObjectiveStatus()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXSpawnerObjective.OnRep_ObjectiveStatus"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXSpawnerObjective.OnObjectiveWidgetToggled
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)
// Parameters:
// class UUserWidget*             ObjectiveOwnedWidget           (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bToggled                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXSpawnerObjective::OnObjectiveWidgetToggled(class UUserWidget* ObjectiveOwnedWidget, bool bToggled)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXSpawnerObjective.OnObjectiveWidgetToggled"));

	struct
	{
		class UUserWidget*             ObjectiveOwnedWidget;
		bool                           bToggled;
	} params = {};

	params.ObjectiveOwnedWidget = ObjectiveOwnedWidget;
	params.bToggled = bToggled;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXSpawnerObjective.OnObjectiveStarted
// (FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)

void AProjectXSpawnerObjective::OnObjectiveStarted()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXSpawnerObjective.OnObjectiveStarted"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXSpawnerObjective.OnObjectiveComplete
// (FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)

void AProjectXSpawnerObjective::OnObjectiveComplete()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXSpawnerObjective.OnObjectiveComplete"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXSpawnerObjective.OnCleanupCompleted
// (FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)

void AProjectXSpawnerObjective::OnCleanupCompleted()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXSpawnerObjective.OnCleanupCompleted"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXSpawnerObjective.ObjectiveStarted
// (FUNC_Native, FUNC_Protected)

void AProjectXSpawnerObjective::ObjectiveStarted()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXSpawnerObjective.ObjectiveStarted"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXSpawnerObjective.ObjectiveComplete
// (FUNC_Native, FUNC_Protected)

void AProjectXSpawnerObjective::ObjectiveComplete()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXSpawnerObjective.ObjectiveComplete"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXSpawnerObjective.GetWaveInfoOverride
// (FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// EWaveSpawnerState              State                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FWaveStateInfo          FoundInfo                      (CPF_Parm, CPF_OutParm, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXSpawnerObjective::GetWaveInfoOverride(EWaveSpawnerState State, struct FWaveStateInfo* FoundInfo)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXSpawnerObjective.GetWaveInfoOverride"));

	struct
	{
		EWaveSpawnerState              State;
		struct FWaveStateInfo          FoundInfo;
		bool                           ReturnValue;
	} params = {};

	params.State = State;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	if (FoundInfo != nullptr)
		*FoundInfo = params.FoundInfo;

	return params.ReturnValue;
}


// Function ProjectX.ProjectXSpawnerObjective.GetObjectiveWidget
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UUserWidget*             ReturnValue                    (CPF_ConstParm, CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UUserWidget* AProjectXSpawnerObjective::GetObjectiveWidget()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXSpawnerObjective.GetObjectiveWidget"));

	struct
	{
		class UUserWidget*             ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXSpawnerObjective.GetObjectiveStat
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// EObjectiveState                ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

EObjectiveState AProjectXSpawnerObjective::GetObjectiveStat()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXSpawnerObjective.GetObjectiveStat"));

	struct
	{
		EObjectiveState                ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXSpawnerObjective.CleanupComplete
// (FUNC_Native, FUNC_Protected)

void AProjectXSpawnerObjective::CleanupComplete()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXSpawnerObjective.CleanupComplete"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXObjectiveCapturePoint.OnRep_PhaseNumber
// (FUNC_Native, FUNC_Protected)

void AProjectXObjectiveCapturePoint::OnRep_PhaseNumber()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXObjectiveCapturePoint.OnRep_PhaseNumber"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXObjectiveCapturePoint.OnRep_ChosenCapturePoints
// (FUNC_Native, FUNC_Protected)

void AProjectXObjectiveCapturePoint::OnRep_ChosenCapturePoints()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXObjectiveCapturePoint.OnRep_ChosenCapturePoints"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXObjectiveCapturePoint.OnObjectiveActorSpawned
// (FUNC_Native, FUNC_Protected)
// Parameters:
// class AActor*                  SpawnedActor                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXObjectiveCapturePoint::OnObjectiveActorSpawned(class AActor* SpawnedActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXObjectiveCapturePoint.OnObjectiveActorSpawned"));

	struct
	{
		class AActor*                  SpawnedActor;
	} params = {};

	params.SpawnedActor = SpawnedActor;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXObjectiveCapturePoint.OnCapturePointClaimed
// (FUNC_Native, FUNC_Protected)
// Parameters:
// int                            TeamOwner                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class ACapturePoint*           Point                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXObjectiveCapturePoint::OnCapturePointClaimed(int TeamOwner, class ACapturePoint* Point)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXObjectiveCapturePoint.OnCapturePointClaimed"));

	struct
	{
		int                            TeamOwner;
		class ACapturePoint*           Point;
	} params = {};

	params.TeamOwner = TeamOwner;
	params.Point = Point;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXObjectiveCapturePoint.GetPlayerCaptureRate
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AProjectXObjectiveCapturePoint::GetPlayerCaptureRate()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXObjectiveCapturePoint.GetPlayerCaptureRate"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXObjectiveCapturePoint.GetPhaseNumber
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// unsigned char                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

unsigned char AProjectXObjectiveCapturePoint::GetPhaseNumber()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXObjectiveCapturePoint.GetPhaseNumber"));

	struct
	{
		unsigned char                  ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXObjectiveCapturePoint.GetNumberOfCheckPoints
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int AProjectXObjectiveCapturePoint::GetNumberOfCheckPoints()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXObjectiveCapturePoint.GetNumberOfCheckPoints"));

	struct
	{
		int                            ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXObjectiveCapturePoint.GetCapturePoints
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// unsigned char                  PhaseNumber                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TArray<class AObjectiveCapturePoint*> FoundCapturePoints             (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXObjectiveCapturePoint::GetCapturePoints(unsigned char PhaseNumber, TArray<class AObjectiveCapturePoint*>* FoundCapturePoints)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXObjectiveCapturePoint.GetCapturePoints"));

	struct
	{
		unsigned char                  PhaseNumber;
		TArray<class AObjectiveCapturePoint*> FoundCapturePoints;
		bool                           ReturnValue;
	} params = {};

	params.PhaseNumber = PhaseNumber;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	if (FoundCapturePoints != nullptr)
		*FoundCapturePoints = params.FoundCapturePoints;

	return params.ReturnValue;
}


// Function ProjectX.ProjectXObjectiveCapturePoint.GetAllCapturePoints
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// TArray<class AObjectiveCapturePoint*> FoundCapturePoints             (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_NativeAccessSpecifierPublic)

void AProjectXObjectiveCapturePoint::GetAllCapturePoints(TArray<class AObjectiveCapturePoint*>* FoundCapturePoints)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXObjectiveCapturePoint.GetAllCapturePoints"));

	struct
	{
		TArray<class AObjectiveCapturePoint*> FoundCapturePoints;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	if (FoundCapturePoints != nullptr)
		*FoundCapturePoints = params.FoundCapturePoints;
}


// Function ProjectX.ProjectXObjectiveDefendPoints.OnRep_DefensePoints
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void AProjectXObjectiveDefendPoints::OnRep_DefensePoints()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXObjectiveDefendPoints.OnRep_DefensePoints"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXObjectiveDefendPoints.OnDefensePointDestroyed
// (FUNC_Native, FUNC_Protected, FUNC_HasOutParms)
// Parameters:
// class AActor*                  Victim                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          Damage                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FDamageEvent            DamageEvent                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// class AController*             EventInstigator                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class APlayerState*            InstigatorPlayerState          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXObjectiveDefendPoints::OnDefensePointDestroyed(class AActor* Victim, float Damage, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser, class APlayerState* InstigatorPlayerState)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXObjectiveDefendPoints.OnDefensePointDestroyed"));

	struct
	{
		class AActor*                  Victim;
		float                          Damage;
		struct FDamageEvent            DamageEvent;
		class AController*             EventInstigator;
		class AActor*                  DamageCauser;
		class APlayerState*            InstigatorPlayerState;
	} params = {};

	params.Victim = Victim;
	params.Damage = Damage;
	params.DamageEvent = DamageEvent;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;
	params.InstigatorPlayerState = InstigatorPlayerState;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXObjectiveVIP.OnVIPKilled
// (FUNC_Final, FUNC_Native, FUNC_Protected, FUNC_HasOutParms)
// Parameters:
// class AActor*                  Victim                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          Damage                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FDamageEvent            DamageEvent                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// class AController*             EventInstigator                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class APlayerState*            InstigatorPlayerState          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXObjectiveVIP::OnVIPKilled(class AActor* Victim, float Damage, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser, class APlayerState* InstigatorPlayerState)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXObjectiveVIP.OnVIPKilled"));

	struct
	{
		class AActor*                  Victim;
		float                          Damage;
		struct FDamageEvent            DamageEvent;
		class AController*             EventInstigator;
		class AActor*                  DamageCauser;
		class APlayerState*            InstigatorPlayerState;
	} params = {};

	params.Victim = Victim;
	params.Damage = Damage;
	params.DamageEvent = DamageEvent;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;
	params.InstigatorPlayerState = InstigatorPlayerState;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXObjectiveVIP.OnRep_VIPS
// (FUNC_Native, FUNC_Protected)

void AProjectXObjectiveVIP::OnRep_VIPS()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXObjectiveVIP.OnRep_VIPS"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXObjectiveVIP.OnRep_PhaseNumber
// (FUNC_Native, FUNC_Protected)

void AProjectXObjectiveVIP::OnRep_PhaseNumber()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXObjectiveVIP.OnRep_PhaseNumber"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXObjectiveVIP.OnMobSpawned
// (FUNC_Final, FUNC_Native, FUNC_Protected)
// Parameters:
// class AProjectXCharacter*      SpawnedPlayerState             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXObjectiveVIP::OnMobSpawned(class AProjectXCharacter* SpawnedPlayerState)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXObjectiveVIP.OnMobSpawned"));

	struct
	{
		class AProjectXCharacter*      SpawnedPlayerState;
	} params = {};

	params.SpawnedPlayerState = SpawnedPlayerState;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXObjectiveVIP.GetPhaseNumber
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// unsigned char                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

unsigned char AProjectXObjectiveVIP::GetPhaseNumber()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXObjectiveVIP.GetPhaseNumber"));

	struct
	{
		unsigned char                  ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerController.WarnIdlePlayerToggle
// (FUNC_Native, FUNC_Protected)
// Parameters:
// bool                           bWarning                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerController::WarnIdlePlayerToggle(bool bWarning)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.WarnIdlePlayerToggle"));

	struct
	{
		bool                           bWarning;
	} params = {};

	params.bWarning = bWarning;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.WaitingToPlayMatchStart
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXPlayerController::WaitingToPlayMatchStart()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.WaitingToPlayMatchStart"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerController.WaitForInitialHud
// (FUNC_Final, FUNC_Native, FUNC_Public)

void AProjectXPlayerController::WaitForInitialHud()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.WaitForInitialHud"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.VoteYes
// (FUNC_Native, FUNC_Public)

void AProjectXPlayerController::VoteYes()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.VoteYes"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.VoteNo
// (FUNC_Native, FUNC_Public)

void AProjectXPlayerController::VoteNo()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.VoteNo"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.UpdateReviveTimeMultiplier
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          NewMultiplier                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerController::UpdateReviveTimeMultiplier(float NewMultiplier)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.UpdateReviveTimeMultiplier"));

	struct
	{
		float                          NewMultiplier;
	} params = {};

	params.NewMultiplier = NewMultiplier;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.UpdateRadarSizeMultiplier
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          NewRadarSize                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerController::UpdateRadarSizeMultiplier(float NewRadarSize)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.UpdateRadarSizeMultiplier"));

	struct
	{
		float                          NewRadarSize;
	} params = {};

	params.NewRadarSize = NewRadarSize;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.ToggleReadyStatus
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bReady                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerController::ToggleReadyStatus(bool bReady)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.ToggleReadyStatus"));

	struct
	{
		bool                           bReady;
	} params = {};

	params.bReady = bReady;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.ToggleMeshes
// (FUNC_Final, FUNC_Exec, FUNC_Native, FUNC_Public)

void AProjectXPlayerController::ToggleMeshes()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.ToggleMeshes"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.ToggleMap
// (FUNC_Native, FUNC_Public)

void AProjectXPlayerController::ToggleMap()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.ToggleMap"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.SwitchToPreviousPlayer
// (FUNC_Native, FUNC_Public)

void AProjectXPlayerController::SwitchToPreviousPlayer()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.SwitchToPreviousPlayer"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.SwitchToNextPlayer
// (FUNC_Native, FUNC_Public)

void AProjectXPlayerController::SwitchToNextPlayer()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.SwitchToNextPlayer"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.StartMatch
// (FUNC_Final, FUNC_Exec, FUNC_Native, FUNC_Public)

void AProjectXPlayerController::StartMatch()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.StartMatch"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.SpawnContextPing
// (FUNC_Event, FUNC_Public, FUNC_HasDefaults, FUNC_BlueprintEvent)
// Parameters:
// struct FVector                 SpawnVector                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerController::SpawnContextPing(const struct FVector& SpawnVector)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.SpawnContextPing"));

	struct
	{
		struct FVector                 SpawnVector;
	} params = {};

	params.SpawnVector = SpawnVector;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.SmoothCam
// (FUNC_Final, FUNC_Exec, FUNC_Native, FUNC_Public)
// Parameters:
// float                          NewSmoothCamSpeed              (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerController::SmoothCam(float NewSmoothCamSpeed)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.SmoothCam"));

	struct
	{
		float                          NewSmoothCamSpeed;
	} params = {};

	params.NewSmoothCamSpeed = NewSmoothCamSpeed;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.SkipWave
// (FUNC_Final, FUNC_Exec, FUNC_Native, FUNC_Public)

void AProjectXPlayerController::SkipWave()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.SkipWave"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.SkipMap
// (FUNC_Final, FUNC_Exec, FUNC_Native, FUNC_Public)

void AProjectXPlayerController::SkipMap()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.SkipMap"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.SetWelcomeMessage
// (FUNC_Final, FUNC_Exec, FUNC_Native, FUNC_Public)
// Parameters:
// struct FString                 NewWelcomeMessage              (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerController::SetWelcomeMessage(const struct FString& NewWelcomeMessage)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.SetWelcomeMessage"));

	struct
	{
		struct FString                 NewWelcomeMessage;
	} params = {};

	params.NewWelcomeMessage = NewWelcomeMessage;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.SetPlayerBindingNewButton
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bIsPlayerCurrentlyBinding      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerController::SetPlayerBindingNewButton(bool bIsPlayerCurrentlyBinding)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.SetPlayerBindingNewButton"));

	struct
	{
		bool                           bIsPlayerCurrentlyBinding;
	} params = {};

	params.bIsPlayerCurrentlyBinding = bIsPlayerCurrentlyBinding;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.SessionKickPlayer
// (FUNC_Final, FUNC_Exec, FUNC_Native, FUNC_Public)
// Parameters:
// struct FString                 PlayerNameOrID                 (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FString                 reason                         (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerController::SessionKickPlayer(const struct FString& PlayerNameOrID, const struct FString& reason)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.SessionKickPlayer"));

	struct
	{
		struct FString                 PlayerNameOrID;
		struct FString                 reason;
	} params = {};

	params.PlayerNameOrID = PlayerNameOrID;
	params.reason = reason;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.Server_ResetIdleTimer
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetServer, FUNC_NetValidate)

void AProjectXPlayerController::Server_ResetIdleTimer()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.Server_ResetIdleTimer"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.Server_RequestActorStateInfo
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetServer)

void AProjectXPlayerController::Server_RequestActorStateInfo()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.Server_RequestActorStateInfo"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.Server_Reliable_SelectTeam
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetServer, FUNC_NetValidate)
// Parameters:
// unsigned char                  Team                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerController::Server_Reliable_SelectTeam(unsigned char Team)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.Server_Reliable_SelectTeam"));

	struct
	{
		unsigned char                  Team;
	} params = {};

	params.Team = Team;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.Server_Reliable_SelectSquad
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetServer, FUNC_NetValidate)
// Parameters:
// int                            Squad                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerController::Server_Reliable_SelectSquad(int Squad)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.Server_Reliable_SelectSquad"));

	struct
	{
		int                            Squad;
	} params = {};

	params.Squad = Squad;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.Server_Reliable_SelectSpawnTarget
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetServer, FUNC_NetValidate)
// Parameters:
// class AActor*                  SpawnTarget                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerController::Server_Reliable_SelectSpawnTarget(class AActor* SpawnTarget)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.Server_Reliable_SelectSpawnTarget"));

	struct
	{
		class AActor*                  SpawnTarget;
	} params = {};

	params.SpawnTarget = SpawnTarget;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.Server_Reliable_SelectPlayerClass
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetServer, FUNC_NetValidate)
// Parameters:
// class UClass* /*AProjectXCharacter*/ PlayerClass                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerController::Server_Reliable_SelectPlayerClass(class UClass* /*AProjectXCharacter*/ PlayerClass)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.Server_Reliable_SelectPlayerClass"));

	struct
	{
		class UClass* /*AProjectXCharacter*/ PlayerClass;
	} params = {};

	params.PlayerClass = PlayerClass;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.Server_Reliable_RespawnFromReviveBeacon
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetServer, FUNC_NetValidate)

void AProjectXPlayerController::Server_Reliable_RespawnFromReviveBeacon()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.Server_Reliable_RespawnFromReviveBeacon"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.Server_Reliable_RequestCosmeticFromPlayer
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetServer, FUNC_NetValidate)
// Parameters:
// class APlayerState*            RequestedPlayerState           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerController::Server_Reliable_RequestCosmeticFromPlayer(class APlayerState* RequestedPlayerState)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.Server_Reliable_RequestCosmeticFromPlayer"));

	struct
	{
		class APlayerState*            RequestedPlayerState;
	} params = {};

	params.RequestedPlayerState = RequestedPlayerState;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.Server_Reliable_ReadyStatusUpdated
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetServer, FUNC_NetValidate)
// Parameters:
// bool                           bReady                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerController::Server_Reliable_ReadyStatusUpdated(bool bReady)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.Server_Reliable_ReadyStatusUpdated"));

	struct
	{
		bool                           bReady;
	} params = {};

	params.bReady = bReady;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.Server_Reliable_PossessRecordingPawn
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetServer, FUNC_NetValidate)
// Parameters:
// class AProjectXCharacter*      TargetedCharacter              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AProjectXCharacter*      OriginalCharacter              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerController::Server_Reliable_PossessRecordingPawn(class AProjectXCharacter* TargetedCharacter, class AProjectXCharacter* OriginalCharacter)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.Server_Reliable_PossessRecordingPawn"));

	struct
	{
		class AProjectXCharacter*      TargetedCharacter;
		class AProjectXCharacter*      OriginalCharacter;
	} params = {};

	params.TargetedCharacter = TargetedCharacter;
	params.OriginalCharacter = OriginalCharacter;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.Server_Reliable_PossessOriginalCharacter
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetServer, FUNC_NetValidate)
// Parameters:
// class AProjectXCharacter*      OriginalCharacter              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerController::Server_Reliable_PossessOriginalCharacter(class AProjectXCharacter* OriginalCharacter)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.Server_Reliable_PossessOriginalCharacter"));

	struct
	{
		class AProjectXCharacter*      OriginalCharacter;
	} params = {};

	params.OriginalCharacter = OriginalCharacter;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.Server_Reliable_MatchStartRequest
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetServer, FUNC_NetValidate)

void AProjectXPlayerController::Server_Reliable_MatchStartRequest()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.Server_Reliable_MatchStartRequest"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.Server_Reliable_LeaveVehicle
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetServer, FUNC_NetValidate)

void AProjectXPlayerController::Server_Reliable_LeaveVehicle()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.Server_Reliable_LeaveVehicle"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.Server_Reliable_ClearSpawnTarget
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetServer, FUNC_NetValidate)

void AProjectXPlayerController::Server_Reliable_ClearSpawnTarget()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.Server_Reliable_ClearSpawnTarget"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.Server_Reliable_AutoAssignSquad
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetServer, FUNC_NetValidate)

void AProjectXPlayerController::Server_Reliable_AutoAssignSquad()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.Server_Reliable_AutoAssignSquad"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.Server_RedeployCharacter
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetServer, FUNC_BlueprintCallable)

void AProjectXPlayerController::Server_RedeployCharacter()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.Server_RedeployCharacter"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.Server_AntiCheatMessage
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetServer, FUNC_NetValidate)
// Parameters:
// TArray<unsigned char>          Message                        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerController::Server_AntiCheatMessage(TArray<unsigned char> Message)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.Server_AntiCheatMessage"));

	struct
	{
		TArray<unsigned char>          Message;
	} params = {};

	params.Message = Message;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.SendHitConfirm
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// class AActor*                  Victim                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          Damage                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FDamageEvent            DamageEvent                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// class AController*             EventInstigator                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bHealing                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerController::SendHitConfirm(class AActor* Victim, float Damage, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser, bool bHealing)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.SendHitConfirm"));

	struct
	{
		class AActor*                  Victim;
		float                          Damage;
		struct FDamageEvent            DamageEvent;
		class AController*             EventInstigator;
		class AActor*                  DamageCauser;
		bool                           bHealing;
	} params = {};

	params.Victim = Victim;
	params.Damage = Damage;
	params.DamageEvent = DamageEvent;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;
	params.bHealing = bHealing;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.SelectSpawnTarget
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class AActor*                  SpawnTarget                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXPlayerController::SelectSpawnTarget(class AActor* SpawnTarget)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.SelectSpawnTarget"));

	struct
	{
		class AActor*                  SpawnTarget;
		bool                           ReturnValue;
	} params = {};

	params.SpawnTarget = SpawnTarget;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerController.SelectPlayerClass
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UClass* /*AProjectXCharacter*/ PlayerClass                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerController::SelectPlayerClass(class UClass* /*AProjectXCharacter*/ PlayerClass)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.SelectPlayerClass"));

	struct
	{
		class UClass* /*AProjectXCharacter*/ PlayerClass;
	} params = {};

	params.PlayerClass = PlayerClass;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.SelectBestSpawnTarget
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasDefaults, FUNC_BlueprintCallable)
// Parameters:
// struct FVector                 TargetLocation                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bUseTargetLocation             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXPlayerController::SelectBestSpawnTarget(const struct FVector& TargetLocation, bool bUseTargetLocation)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.SelectBestSpawnTarget"));

	struct
	{
		struct FVector                 TargetLocation;
		bool                           bUseTargetLocation;
		bool                           ReturnValue;
	} params = {};

	params.TargetLocation = TargetLocation;
	params.bUseTargetLocation = bUseTargetLocation;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerController.ResetIdleTimerUI
// (FUNC_Native, FUNC_Protected, FUNC_BlueprintCallable)

void AProjectXPlayerController::ResetIdleTimerUI()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.ResetIdleTimerUI"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.ResetIdleTimer
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void AProjectXPlayerController::ResetIdleTimer()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.ResetIdleTimer"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.ReportPlayer
// (FUNC_Final, FUNC_Exec, FUNC_Native, FUNC_Public)
// Parameters:
// struct FString                 PlayerNameOrID                 (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FString                 reason                         (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerController::ReportPlayer(const struct FString& PlayerNameOrID, const struct FString& reason)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.ReportPlayer"));

	struct
	{
		struct FString                 PlayerNameOrID;
		struct FString                 reason;
	} params = {};

	params.PlayerNameOrID = PlayerNameOrID;
	params.reason = reason;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.PermanentInvisibility
// (FUNC_Final, FUNC_Exec, FUNC_Native, FUNC_Public)

void AProjectXPlayerController::PermanentInvisibility()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.PermanentInvisibility"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.OnRep_KillCameraClass
// (FUNC_Native, FUNC_Public)

void AProjectXPlayerController::OnRep_KillCameraClass()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.OnRep_KillCameraClass"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.MenuToggled
// (FUNC_Native, FUNC_Public)
// Parameters:
// class UAdvancedUserWidget*     Widget                         (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bToggle                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerController::MenuToggled(class UAdvancedUserWidget* Widget, bool bToggle)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.MenuToggled"));

	struct
	{
		class UAdvancedUserWidget*     Widget;
		bool                           bToggle;
	} params = {};

	params.Widget = Widget;
	params.bToggle = bToggle;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.MatchStartRequest
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void AProjectXPlayerController::MatchStartRequest()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.MatchStartRequest"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.KickPlayer
// (FUNC_Final, FUNC_Exec, FUNC_Native, FUNC_Public)
// Parameters:
// struct FString                 PlayerNameOrID                 (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FString                 reason                         (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerController::KickPlayer(const struct FString& PlayerNameOrID, const struct FString& reason)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.KickPlayer"));

	struct
	{
		struct FString                 PlayerNameOrID;
		struct FString                 reason;
	} params = {};

	params.PlayerNameOrID = PlayerNameOrID;
	params.reason = reason;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.KeysRebound
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void AProjectXPlayerController::KeysRebound()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.KeysRebound"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.K2_ServerRestartPlayer
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void AProjectXPlayerController::K2_ServerRestartPlayer()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.K2_ServerRestartPlayer"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.K2_CanRestartPlayer
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXPlayerController::K2_CanRestartPlayer()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.K2_CanRestartPlayer"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerController.IsPlayerHoldingControllerContextChangeButton
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXPlayerController::IsPlayerHoldingControllerContextChangeButton()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.IsPlayerHoldingControllerContextChangeButton"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerController.IsPlayerBindingNewButton
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXPlayerController::IsPlayerBindingNewButton()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.IsPlayerBindingNewButton"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerController.IncrementPlayerStat
// (FUNC_Final, FUNC_Exec, FUNC_Native, FUNC_Public)
// Parameters:
// int8_t                         EnumElement                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            NumToAdd                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            DebugMapType                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FString                 MapName                        (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerController::IncrementPlayerStat(int8_t EnumElement, int NumToAdd, int DebugMapType, const struct FString& MapName)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.IncrementPlayerStat"));

	struct
	{
		int8_t                         EnumElement;
		int                            NumToAdd;
		int                            DebugMapType;
		struct FString                 MapName;
	} params = {};

	params.EnumElement = EnumElement;
	params.NumToAdd = NumToAdd;
	params.DebugMapType = DebugMapType;
	params.MapName = MapName;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.IdlePlayerTimeout
// (FUNC_Native, FUNC_Protected)

void AProjectXPlayerController::IdlePlayerTimeout()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.IdlePlayerTimeout"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.GetVivoxComponent
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UVivoxPlayerComponent*   ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UVivoxPlayerComponent* AProjectXPlayerController::GetVivoxComponent()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.GetVivoxComponent"));

	struct
	{
		class UVivoxPlayerComponent*   ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerController.GetVehicle
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AProjectXVehicle*        ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class AProjectXVehicle* AProjectXPlayerController::GetVehicle()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.GetVehicle"));

	struct
	{
		class AProjectXVehicle*        ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerController.GetTargetingHitResult
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TArray<struct FHitResult>      ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_ReferenceParm, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

TArray<struct FHitResult> AProjectXPlayerController::GetTargetingHitResult(class UObject* WorldContextObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.GetTargetingHitResult"));

	struct
	{
		class UObject*                 WorldContextObject;
		TArray<struct FHitResult>      ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerController.GetTargetedActors
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TArray<class AActor*>          ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_NativeAccessSpecifierPublic)

TArray<class AActor*> AProjectXPlayerController::GetTargetedActors(class UObject* WorldContextObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.GetTargetedActors"));

	struct
	{
		class UObject*                 WorldContextObject;
		TArray<class AActor*>          ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerController.GetReviveTimeMultiplier
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AProjectXPlayerController::GetReviveTimeMultiplier()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.GetReviveTimeMultiplier"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerController.GetPlayerViewHitResult
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FHitResult              ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

struct FHitResult AProjectXPlayerController::GetPlayerViewHitResult(class UObject* WorldContextObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.GetPlayerViewHitResult"));

	struct
	{
		class UObject*                 WorldContextObject;
		struct FHitResult              ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerController.GetPlayerAimAssistHitResult
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FHitResult              ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

struct FHitResult AProjectXPlayerController::GetPlayerAimAssistHitResult(class UObject* WorldContextObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.GetPlayerAimAssistHitResult"));

	struct
	{
		class UObject*                 WorldContextObject;
		struct FHitResult              ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerController.GetMusicTrack
// (FUNC_Final, FUNC_Exec, FUNC_Native, FUNC_Public)

void AProjectXPlayerController::GetMusicTrack()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.GetMusicTrack"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.GetMapRotationReceiverComponent
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UMapRotationReceiverComponent* ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UMapRotationReceiverComponent* AProjectXPlayerController::GetMapRotationReceiverComponent()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.GetMapRotationReceiverComponent"));

	struct
	{
		class UMapRotationReceiverComponent* ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerController.GetKillCameraComponent
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UKillCameraComponent*    ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UKillCameraComponent* AProjectXPlayerController::GetKillCameraComponent()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.GetKillCameraComponent"));

	struct
	{
		class UKillCameraComponent*    ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerController.GetFollowPlayer
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AProjectXPlayerState*    ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class AProjectXPlayerState* AProjectXPlayerController::GetFollowPlayer()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.GetFollowPlayer"));

	struct
	{
		class AProjectXPlayerState*    ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerController.GetCharacter
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AProjectXCharacter*      ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class AProjectXCharacter* AProjectXPlayerController::GetCharacter()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.GetCharacter"));

	struct
	{
		class AProjectXCharacter*      ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerController.FocusReviveBeacon
// (FUNC_Final, FUNC_Native, FUNC_Public)
// Parameters:
// float                          BlendTime                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerController::FocusReviveBeacon(float BlendTime)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.FocusReviveBeacon"));

	struct
	{
		float                          BlendTime;
	} params = {};

	params.BlendTime = BlendTime;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.FlySpeed
// (FUNC_Final, FUNC_Exec, FUNC_Native, FUNC_Public)
// Parameters:
// float                          NewFlySpeed                    (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerController::FlySpeed(float NewFlySpeed)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.FlySpeed"));

	struct
	{
		float                          NewFlySpeed;
	} params = {};

	params.NewFlySpeed = NewFlySpeed;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.EnableSpectatorMode
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void AProjectXPlayerController::EnableSpectatorMode()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.EnableSpectatorMode"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.DumpChat
// (FUNC_Final, FUNC_Exec, FUNC_Native, FUNC_Public)

void AProjectXPlayerController::DumpChat()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.DumpChat"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.Client_WarnIdlePlayerToggle
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetClient, FUNC_NetValidate)
// Parameters:
// bool                           bWarn                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerController::Client_WarnIdlePlayerToggle(bool bWarn)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.Client_WarnIdlePlayerToggle"));

	struct
	{
		bool                           bWarn;
	} params = {};

	params.bWarn = bWarn;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.Client_ServerRestartPlayerFailed
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetClient)
// Parameters:
// ESpawnError                    ErrorType                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerController::Client_ServerRestartPlayerFailed(ESpawnError ErrorType)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.Client_ServerRestartPlayerFailed"));

	struct
	{
		ESpawnError                    ErrorType;
	} params = {};

	params.ErrorType = ErrorType;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.Client_RequestRedeploy
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetClient)

void AProjectXPlayerController::Client_RequestRedeploy()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.Client_RequestRedeploy"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.Client_Reliable_ViewPlayer
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetClient, FUNC_NetValidate)
// Parameters:
// class AProjectXPlayerState*    TargetPlayerState              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerController::Client_Reliable_ViewPlayer(class AProjectXPlayerState* TargetPlayerState)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.Client_Reliable_ViewPlayer"));

	struct
	{
		class AProjectXPlayerState*    TargetPlayerState;
	} params = {};

	params.TargetPlayerState = TargetPlayerState;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.Client_Reliable_TeamChangeResponse
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetClient, FUNC_NetValidate)
// Parameters:
// ETeamJoinResponse              ResponseMessage                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerController::Client_Reliable_TeamChangeResponse(ETeamJoinResponse ResponseMessage)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.Client_Reliable_TeamChangeResponse"));

	struct
	{
		ETeamJoinResponse              ResponseMessage;
	} params = {};

	params.ResponseMessage = ResponseMessage;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.Client_PlayerEquipRequest
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetClient)
// Parameters:
// class AProjectXPlayerState*    PXPlayerState                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TArray<struct FEquipInfo>      Equips                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerController::Client_PlayerEquipRequest(class AProjectXPlayerState* PXPlayerState, TArray<struct FEquipInfo> Equips)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.Client_PlayerEquipRequest"));

	struct
	{
		class AProjectXPlayerState*    PXPlayerState;
		TArray<struct FEquipInfo>      Equips;
	} params = {};

	params.PXPlayerState = PXPlayerState;
	params.Equips = Equips;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.Client_EarlyWarnIdlePlayer
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetClient, FUNC_NetValidate)

void AProjectXPlayerController::Client_EarlyWarnIdlePlayer()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.Client_EarlyWarnIdlePlayer"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.Client_ConfirmHitActor
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetClient)
// Parameters:
// class AActor*                  Victim                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UClass* /*UObject*/      Weapon                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bHeadshot                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          Damage                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bHealing                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerController::Client_ConfirmHitActor(class AActor* Victim, class UClass* /*UObject*/ Weapon, bool bHeadshot, float Damage, bool bHealing)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.Client_ConfirmHitActor"));

	struct
	{
		class AActor*                  Victim;
		class UClass* /*UObject*/      Weapon;
		bool                           bHeadshot;
		float                          Damage;
		bool                           bHealing;
	} params = {};

	params.Victim = Victim;
	params.Weapon = Weapon;
	params.bHeadshot = bHeadshot;
	params.Damage = Damage;
	params.bHealing = bHealing;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.Client_AntiCheatMessage
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetClient)
// Parameters:
// TArray<unsigned char>          Message                        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerController::Client_AntiCheatMessage(TArray<unsigned char> Message)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.Client_AntiCheatMessage"));

	struct
	{
		TArray<unsigned char>          Message;
	} params = {};

	params.Message = Message;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.ClearSpawnTarget
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void AProjectXPlayerController::ClearSpawnTarget()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.ClearSpawnTarget"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerController.ChangeTeam
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// unsigned char                  Team                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXPlayerController::ChangeTeam(unsigned char Team)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.ChangeTeam"));

	struct
	{
		unsigned char                  Team;
		bool                           ReturnValue;
	} params = {};

	params.Team = Team;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerController.ChangeSquad
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// int                            Squad                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXPlayerController::ChangeSquad(int Squad)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.ChangeSquad"));

	struct
	{
		int                            Squad;
		bool                           ReturnValue;
	} params = {};

	params.Squad = Squad;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerController.BanPlayer
// (FUNC_Final, FUNC_Exec, FUNC_Native, FUNC_Public)
// Parameters:
// struct FString                 PlayerNameOrID                 (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FString                 reason                         (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerController::BanPlayer(const struct FString& PlayerNameOrID, const struct FString& reason)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerController.BanPlayer"));

	struct
	{
		struct FString                 PlayerNameOrID;
		struct FString                 reason;
	} params = {};

	params.PlayerNameOrID = PlayerNameOrID;
	params.reason = reason;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerControllerMainMenu.SelectWeapon
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// struct FString                 WeaponID                       (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bChangeCamera                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerControllerMainMenu::SelectWeapon(const struct FString& WeaponID, bool bChangeCamera)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerControllerMainMenu.SelectWeapon"));

	struct
	{
		struct FString                 WeaponID;
		bool                           bChangeCamera;
	} params = {};

	params.WeaponID = WeaponID;
	params.bChangeCamera = bChangeCamera;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerControllerMainMenu.SelectIsAlly
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bIsAlly                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bChangeCamera                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerControllerMainMenu::SelectIsAlly(bool bIsAlly, bool bChangeCamera)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerControllerMainMenu.SelectIsAlly"));

	struct
	{
		bool                           bIsAlly;
		bool                           bChangeCamera;
	} params = {};

	params.bIsAlly = bIsAlly;
	params.bChangeCamera = bChangeCamera;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerControllerMainMenu.SelectCosmeticType
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// ECosmeticType                  CosmeticType                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bChangeCamera                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerControllerMainMenu::SelectCosmeticType(ECosmeticType CosmeticType, bool bChangeCamera)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerControllerMainMenu.SelectCosmeticType"));

	struct
	{
		ECosmeticType                  CosmeticType;
		bool                           bChangeCamera;
	} params = {};

	params.CosmeticType = CosmeticType;
	params.bChangeCamera = bChangeCamera;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerControllerMainMenu.SelectCosmetic
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// ECosmeticType                  CosmeticType                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FString                 WeaponID                       (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UCosmeticAssetBase*      CosmeticAsset                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bChangeCamera                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerControllerMainMenu::SelectCosmetic(ECosmeticType CosmeticType, const struct FString& WeaponID, class UCosmeticAssetBase* CosmeticAsset, bool bChangeCamera)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerControllerMainMenu.SelectCosmetic"));

	struct
	{
		ECosmeticType                  CosmeticType;
		struct FString                 WeaponID;
		class UCosmeticAssetBase*      CosmeticAsset;
		bool                           bChangeCamera;
	} params = {};

	params.CosmeticType = CosmeticType;
	params.WeaponID = WeaponID;
	params.CosmeticAsset = CosmeticAsset;
	params.bChangeCamera = bChangeCamera;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerControllerMainMenu.SelectCharacterClass
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UClass* /*AProjectXCharacter*/ CharacterClass                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bChangeCamera                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerControllerMainMenu::SelectCharacterClass(class UClass* /*AProjectXCharacter*/ CharacterClass, bool bChangeCamera)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerControllerMainMenu.SelectCharacterClass"));

	struct
	{
		class UClass* /*AProjectXCharacter*/ CharacterClass;
		bool                           bChangeCamera;
	} params = {};

	params.CharacterClass = CharacterClass;
	params.bChangeCamera = bChangeCamera;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerControllerMainMenu.OnWeaponSelected
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)
// Parameters:
// class UClass* /*UWeaponInstance*/ WeaponClass                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerControllerMainMenu::OnWeaponSelected(class UClass* /*UWeaponInstance*/ WeaponClass)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerControllerMainMenu.OnWeaponSelected"));

	struct
	{
		class UClass* /*UWeaponInstance*/ WeaponClass;
	} params = {};

	params.WeaponClass = WeaponClass;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerControllerMainMenu.OnIsAllySelected
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)
// Parameters:
// bool                           bIsAlly                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bChangeCamera                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerControllerMainMenu::OnIsAllySelected(bool bIsAlly, bool bChangeCamera)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerControllerMainMenu.OnIsAllySelected"));

	struct
	{
		bool                           bIsAlly;
		bool                           bChangeCamera;
	} params = {};

	params.bIsAlly = bIsAlly;
	params.bChangeCamera = bChangeCamera;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerControllerMainMenu.OnCosmeticTypeSelected
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)
// Parameters:
// ECosmeticType                  Type                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bChangeCamera                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerControllerMainMenu::OnCosmeticTypeSelected(ECosmeticType Type, bool bChangeCamera)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerControllerMainMenu.OnCosmeticTypeSelected"));

	struct
	{
		ECosmeticType                  Type;
		bool                           bChangeCamera;
	} params = {};

	params.Type = Type;
	params.bChangeCamera = bChangeCamera;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerControllerMainMenu.OnCosmeticSelected
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)
// Parameters:
// ECosmeticType                  CosmeticType                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UClass* /*UWeaponInstance*/ WeaponClass                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UCosmeticAssetBase*      CosmeticAsset                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bChangeCamera                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerControllerMainMenu::OnCosmeticSelected(ECosmeticType CosmeticType, class UClass* /*UWeaponInstance*/ WeaponClass, class UCosmeticAssetBase* CosmeticAsset, bool bChangeCamera)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerControllerMainMenu.OnCosmeticSelected"));

	struct
	{
		ECosmeticType                  CosmeticType;
		class UClass* /*UWeaponInstance*/ WeaponClass;
		class UCosmeticAssetBase*      CosmeticAsset;
		bool                           bChangeCamera;
	} params = {};

	params.CosmeticType = CosmeticType;
	params.WeaponClass = WeaponClass;
	params.CosmeticAsset = CosmeticAsset;
	params.bChangeCamera = bChangeCamera;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerControllerMainMenu.OnCharacterClassSelected
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)
// Parameters:
// class UClass* /*AProjectXCharacter*/ CharacterClass                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bChangeCamera                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerControllerMainMenu::OnCharacterClassSelected(class UClass* /*AProjectXCharacter*/ CharacterClass, bool bChangeCamera)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerControllerMainMenu.OnCharacterClassSelected"));

	struct
	{
		class UClass* /*AProjectXCharacter*/ CharacterClass;
		bool                           bChangeCamera;
	} params = {};

	params.CharacterClass = CharacterClass;
	params.bChangeCamera = bChangeCamera;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerControllerMainMenu.DeselectCosmetic
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// ECosmeticType                  CosmeticType                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FString                 WeaponID                       (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UCosmeticAssetBase*      CosmeticAsset                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerControllerMainMenu::DeselectCosmetic(ECosmeticType CosmeticType, const struct FString& WeaponID, class UCosmeticAssetBase* CosmeticAsset)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerControllerMainMenu.DeselectCosmetic"));

	struct
	{
		ECosmeticType                  CosmeticType;
		struct FString                 WeaponID;
		class UCosmeticAssetBase*      CosmeticAsset;
	} params = {};

	params.CosmeticType = CosmeticType;
	params.WeaponID = WeaponID;
	params.CosmeticAsset = CosmeticAsset;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerControllerMainMenu.CanUsePlayButton
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXPlayerControllerMainMenu::CanUsePlayButton()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerControllerMainMenu.CanUsePlayButton"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.UpdatePlayerPerkUsage
// (FUNC_Native, FUNC_Public)
// Parameters:
// class APawn*                   InPawn                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerState::UpdatePlayerPerkUsage(class APawn* InPawn)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.UpdatePlayerPerkUsage"));

	struct
	{
		class APawn*                   InPawn;
	} params = {};

	params.InPawn = InPawn;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.UpdatePassiveUltimateCharge
// (FUNC_Final, FUNC_Native, FUNC_Public)

void AProjectXPlayerState::UpdatePassiveUltimateCharge()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.UpdatePassiveUltimateCharge"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.UpdateKillExplosion
// (FUNC_Final, FUNC_Native, FUNC_Public)
// Parameters:
// class UCosmeticExplosionAsset* CosmeticAsset                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerState::UpdateKillExplosion(class UCosmeticExplosionAsset* CosmeticAsset)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.UpdateKillExplosion"));

	struct
	{
		class UCosmeticExplosionAsset* CosmeticAsset;
	} params = {};

	params.CosmeticAsset = CosmeticAsset;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.UltimateStarted
// (FUNC_Native, FUNC_Public)
// Parameters:
// class UWeaponInstance*         Weapon                         (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerState::UltimateStarted(class UWeaponInstance* Weapon)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.UltimateStarted"));

	struct
	{
		class UWeaponInstance*         Weapon;
	} params = {};

	params.Weapon = Weapon;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.UltimateFinished
// (FUNC_Native, FUNC_Public)

void AProjectXPlayerState::UltimateFinished()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.UltimateFinished"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.SortPlayerStates
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// TArray<class AProjectXPlayerState*> InPlayerStateList              (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// TArray<class AProjectXPlayerState*> OutPlayerStateList             (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerState::SortPlayerStates(TArray<class AProjectXPlayerState*> InPlayerStateList, TArray<class AProjectXPlayerState*>* OutPlayerStateList)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.SortPlayerStates"));

	struct
	{
		TArray<class AProjectXPlayerState*> InPlayerStateList;
		TArray<class AProjectXPlayerState*> OutPlayerStateList;
	} params = {};

	params.InPlayerStateList = InPlayerStateList;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	if (OutPlayerStateList != nullptr)
		*OutPlayerStateList = params.OutPlayerStateList;
}


// Function ProjectX.ProjectXPlayerState.SetTeam
// (FUNC_Final, FUNC_Native, FUNC_Public)
// Parameters:
// int                            NewTeam                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int AProjectXPlayerState::SetTeam(int NewTeam)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.SetTeam"));

	struct
	{
		int                            NewTeam;
		int                            ReturnValue;
	} params = {};

	params.NewTeam = NewTeam;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.SetPreferredPlayerClass
// (FUNC_Final, FUNC_Native, FUNC_Public)
// Parameters:
// class UClass* /*AProjectXCharacter*/ NewPlayerClass                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerState::SetPreferredPlayerClass(class UClass* /*AProjectXCharacter*/ NewPlayerClass)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.SetPreferredPlayerClass"));

	struct
	{
		class UClass* /*AProjectXCharacter*/ NewPlayerClass;
	} params = {};

	params.NewPlayerClass = NewPlayerClass;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.SetNextRespawnTime
// (FUNC_Final, FUNC_Native, FUNC_Public)
// Parameters:
// float                          NewRespawnTime                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerState::SetNextRespawnTime(float NewRespawnTime)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.SetNextRespawnTime"));

	struct
	{
		float                          NewRespawnTime;
	} params = {};

	params.NewRespawnTime = NewRespawnTime;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.Server_UpdateStat
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetServer, FUNC_NetValidate)
// Parameters:
// EStatNames                     StatToUpdate                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            Value                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UObject*                 InObject                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// EStatUpdateBehaviour           StatUpdateBehaviour            (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            InDebugMapType                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FString                 InDebugMapName                 (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerState::Server_UpdateStat(EStatNames StatToUpdate, int Value, class UObject* InObject, EStatUpdateBehaviour StatUpdateBehaviour, int InDebugMapType, const struct FString& InDebugMapName)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.Server_UpdateStat"));

	struct
	{
		EStatNames                     StatToUpdate;
		int                            Value;
		class UObject*                 InObject;
		EStatUpdateBehaviour           StatUpdateBehaviour;
		int                            InDebugMapType;
		struct FString                 InDebugMapName;
	} params = {};

	params.StatToUpdate = StatToUpdate;
	params.Value = Value;
	params.InObject = InObject;
	params.StatUpdateBehaviour = StatUpdateBehaviour;
	params.InDebugMapType = InDebugMapType;
	params.InDebugMapName = InDebugMapName;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.Server_SendQuickChat
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetServer)
// Parameters:
// struct FQuickChatInfo          QuickChatData                  (CPF_ConstParm, CPF_Parm, CPF_ReferenceParm, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerState::Server_SendQuickChat(const struct FQuickChatInfo& QuickChatData)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.Server_SendQuickChat"));

	struct
	{
		struct FQuickChatInfo          QuickChatData;
	} params = {};

	params.QuickChatData = QuickChatData;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.Server_SendNakamaUserId
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetServer)
// Parameters:
// struct FString                 InNakamaUserId                 (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerState::Server_SendNakamaUserId(const struct FString& InNakamaUserId)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.Server_SendNakamaUserId"));

	struct
	{
		struct FString                 InNakamaUserId;
	} params = {};

	params.InNakamaUserId = InNakamaUserId;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.Server_SendMessage
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetServer)
// Parameters:
// struct FString                 Message                        (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AProjectXPlayerState*    To                             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// EMessageType                   MessageType                    (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerState::Server_SendMessage(const struct FString& Message, class AProjectXPlayerState* To, EMessageType MessageType)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.Server_SendMessage"));

	struct
	{
		struct FString                 Message;
		class AProjectXPlayerState*    To;
		EMessageType                   MessageType;
	} params = {};

	params.Message = Message;
	params.To = To;
	params.MessageType = MessageType;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.Server_Reliable_UpdateSessionLockedCosmetics
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetServer, FUNC_NetValidate)
// Parameters:
// uint16_t                       CosmeticIDNumber               (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerState::Server_Reliable_UpdateSessionLockedCosmetics(uint16_t CosmeticIDNumber)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.Server_Reliable_UpdateSessionLockedCosmetics"));

	struct
	{
		uint16_t                       CosmeticIDNumber;
	} params = {};

	params.CosmeticIDNumber = CosmeticIDNumber;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.Server_Reliable_ToggleReviveBeacon
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetServer)
// Parameters:
// bool                           bActive                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerState::Server_Reliable_ToggleReviveBeacon(bool bActive)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.Server_Reliable_ToggleReviveBeacon"));

	struct
	{
		bool                           bActive;
	} params = {};

	params.bActive = bActive;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.Server_Reliable_PlayTaunt
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetServer)
// Parameters:
// unsigned char                  TauntID                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerState::Server_Reliable_PlayTaunt(unsigned char TauntID)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.Server_Reliable_PlayTaunt"));

	struct
	{
		unsigned char                  TauntID;
	} params = {};

	params.TauntID = TauntID;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.Server_Reliable_EquipItem
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetServer)
// Parameters:
// ECosmeticType                  Type                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// uint16_t                       ShortCodeIndex                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// uint16_t                       EquipCodeIndex                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerState::Server_Reliable_EquipItem(ECosmeticType Type, uint16_t ShortCodeIndex, uint16_t EquipCodeIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.Server_Reliable_EquipItem"));

	struct
	{
		ECosmeticType                  Type;
		uint16_t                       ShortCodeIndex;
		uint16_t                       EquipCodeIndex;
	} params = {};

	params.Type = Type;
	params.ShortCodeIndex = ShortCodeIndex;
	params.EquipCodeIndex = EquipCodeIndex;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.Server_ProcessProjectileHit
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetServer, FUNC_HasDefaults)
// Parameters:
// unsigned char                  ShotID                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            ProjectileID                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FHitResult              HitResult                      (CPF_ConstParm, CPF_Parm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)
// class UClass* /*UWeaponInstanceRanged*/ Weapon                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TArray<struct FVector_NetQuantize> FlightPath                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// class UTelekenesisComponent*   TelekenesisComponent           (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FRotator                CustomRotation                 (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerState::Server_ProcessProjectileHit(unsigned char ShotID, int ProjectileID, const struct FHitResult& HitResult, class UClass* /*UWeaponInstanceRanged*/ Weapon, TArray<struct FVector_NetQuantize> FlightPath, class UTelekenesisComponent* TelekenesisComponent, const struct FRotator& CustomRotation)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.Server_ProcessProjectileHit"));

	struct
	{
		unsigned char                  ShotID;
		int                            ProjectileID;
		struct FHitResult              HitResult;
		class UClass* /*UWeaponInstanceRanged*/ Weapon;
		TArray<struct FVector_NetQuantize> FlightPath;
		class UTelekenesisComponent*   TelekenesisComponent;
		struct FRotator                CustomRotation;
	} params = {};

	params.ShotID = ShotID;
	params.ProjectileID = ProjectileID;
	params.HitResult = HitResult;
	params.Weapon = Weapon;
	params.FlightPath = FlightPath;
	params.TelekenesisComponent = TelekenesisComponent;
	params.CustomRotation = CustomRotation;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.Server_ProcessExplosiveProjectileHit
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetServer)
// Parameters:
// int                            ProjectileID                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FHitResult              HitResult                      (CPF_ConstParm, CPF_Parm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)
// class UClass* /*UWeaponInstanceRanged*/ Weapon                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TArray<struct FVector_NetQuantize> FlightPath                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// TArray<class AActor*>          RadialDamagedActors            (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerState::Server_ProcessExplosiveProjectileHit(int ProjectileID, const struct FHitResult& HitResult, class UClass* /*UWeaponInstanceRanged*/ Weapon, TArray<struct FVector_NetQuantize> FlightPath, TArray<class AActor*> RadialDamagedActors)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.Server_ProcessExplosiveProjectileHit"));

	struct
	{
		int                            ProjectileID;
		struct FHitResult              HitResult;
		class UClass* /*UWeaponInstanceRanged*/ Weapon;
		TArray<struct FVector_NetQuantize> FlightPath;
		TArray<class AActor*>          RadialDamagedActors;
	} params = {};

	params.ProjectileID = ProjectileID;
	params.HitResult = HitResult;
	params.Weapon = Weapon;
	params.FlightPath = FlightPath;
	params.RadialDamagedActors = RadialDamagedActors;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.Server_PickupItem
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetServer)
// Parameters:
// int                            PickupID                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  OverlappedActor                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerState::Server_PickupItem(int PickupID, class AActor* OverlappedActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.Server_PickupItem"));

	struct
	{
		int                            PickupID;
		class AActor*                  OverlappedActor;
	} params = {};

	params.PickupID = PickupID;
	params.OverlappedActor = OverlappedActor;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.SendQuickChat
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class AProjectXPlayerState*    To                             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FString                 Message                        (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// EMessageType                   MessageType                    (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  SquadOrderActor                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerState::SendQuickChat(class AProjectXPlayerState* To, const struct FString& Message, EMessageType MessageType, class AActor* SquadOrderActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.SendQuickChat"));

	struct
	{
		class AProjectXPlayerState*    To;
		struct FString                 Message;
		EMessageType                   MessageType;
		class AActor*                  SquadOrderActor;
	} params = {};

	params.To = To;
	params.Message = Message;
	params.MessageType = MessageType;
	params.SquadOrderActor = SquadOrderActor;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.SendMessage
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// struct FString                 Message                        (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AProjectXPlayerState*    To                             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// EMessageType                   MessageType                    (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerState::SendMessage(const struct FString& Message, class AProjectXPlayerState* To, EMessageType MessageType)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.SendMessage"));

	struct
	{
		struct FString                 Message;
		class AProjectXPlayerState*    To;
		EMessageType                   MessageType;
	} params = {};

	params.Message = Message;
	params.To = To;
	params.MessageType = MessageType;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.PlayTaunt
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// unsigned char                  TauntID                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerState::PlayTaunt(unsigned char TauntID)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.PlayTaunt"));

	struct
	{
		unsigned char                  TauntID;
	} params = {};

	params.TauntID = TauntID;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.PlayAnnouncerSpawnSound
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void AProjectXPlayerState::PlayAnnouncerSpawnSound()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.PlayAnnouncerSpawnSound"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.OnStatsLoaded
// (FUNC_Final, FUNC_Native, FUNC_Public)

void AProjectXPlayerState::OnStatsLoaded()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.OnStatsLoaded"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.OnRep_UltimateCharge
// (FUNC_Native, FUNC_Protected)

void AProjectXPlayerState::OnRep_UltimateCharge()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.OnRep_UltimateCharge"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.OnRep_Team
// (FUNC_Native, FUNC_Protected)

void AProjectXPlayerState::OnRep_Team()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.OnRep_Team"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.OnRep_SquadLeader
// (FUNC_Native, FUNC_Protected)

void AProjectXPlayerState::OnRep_SquadLeader()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.OnRep_SquadLeader"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.OnRep_Ready
// (FUNC_Native, FUNC_Protected)

void AProjectXPlayerState::OnRep_Ready()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.OnRep_Ready"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.OnRep_PlayerClass
// (FUNC_Native, FUNC_Protected)

void AProjectXPlayerState::OnRep_PlayerClass()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.OnRep_PlayerClass"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.OnRep_NextRespawnTime
// (FUNC_Native, FUNC_Protected)

void AProjectXPlayerState::OnRep_NextRespawnTime()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.OnRep_NextRespawnTime"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.OnRep_Level
// (FUNC_Native, FUNC_Protected)
// Parameters:
// uint16_t                       PreviousLevel                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerState::OnRep_Level(uint16_t PreviousLevel)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.OnRep_Level"));

	struct
	{
		uint16_t                       PreviousLevel;
	} params = {};

	params.PreviousLevel = PreviousLevel;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.OnRep_Kills
// (FUNC_Native, FUNC_Protected)
// Parameters:
// uint16_t                       LastKills                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerState::OnRep_Kills(uint16_t LastKills)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.OnRep_Kills"));

	struct
	{
		uint16_t                       LastKills;
	} params = {};

	params.LastKills = LastKills;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.OnRep_GameXP
// (FUNC_Native, FUNC_Protected)
// Parameters:
// uint16_t                       LastXP                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerState::OnRep_GameXP(uint16_t LastXP)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.OnRep_GameXP"));

	struct
	{
		uint16_t                       LastXP;
	} params = {};

	params.LastXP = LastXP;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.OnRep_Deaths
// (FUNC_Native, FUNC_Protected)
// Parameters:
// uint16_t                       LastDeaths                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerState::OnRep_Deaths(uint16_t LastDeaths)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.OnRep_Deaths"));

	struct
	{
		uint16_t                       LastDeaths;
	} params = {};

	params.LastDeaths = LastDeaths;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.OnRep_CanSwitchTeams
// (FUNC_Native, FUNC_Protected)

void AProjectXPlayerState::OnRep_CanSwitchTeams()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.OnRep_CanSwitchTeams"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.OnRep_Assists
// (FUNC_Native, FUNC_Protected)
// Parameters:
// uint16_t                       LastAssists                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerState::OnRep_Assists(uint16_t LastAssists)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.OnRep_Assists"));

	struct
	{
		uint16_t                       LastAssists;
	} params = {};

	params.LastAssists = LastAssists;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.OnPlayerStateRemovedFromGameState
// (FUNC_Native, FUNC_Protected)
// Parameters:
// class APlayerState*            RemovedPlayerState             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerState::OnPlayerStateRemovedFromGameState(class APlayerState* RemovedPlayerState)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.OnPlayerStateRemovedFromGameState"));

	struct
	{
		class APlayerState*            RemovedPlayerState;
	} params = {};

	params.RemovedPlayerState = RemovedPlayerState;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.OnItemEquipped
// (FUNC_Final, FUNC_Native, FUNC_Public)
// Parameters:
// ECosmeticType                  Type                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FString                 ShortCode                      (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FString                 EquipCode                      (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerState::OnItemEquipped(ECosmeticType Type, const struct FString& ShortCode, const struct FString& EquipCode)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.OnItemEquipped"));

	struct
	{
		ECosmeticType                  Type;
		struct FString                 ShortCode;
		struct FString                 EquipCode;
	} params = {};

	params.Type = Type;
	params.ShortCode = ShortCode;
	params.EquipCode = EquipCode;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.OnEquipsLoaded
// (FUNC_Final, FUNC_Native, FUNC_Public)
// Parameters:
// bool                           bSuccess                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerState::OnEquipsLoaded(bool bSuccess)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.OnEquipsLoaded"));

	struct
	{
		bool                           bSuccess;
	} params = {};

	params.bSuccess = bSuccess;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.MutePlayerText
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class APlayerState*            Player                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bToggle                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerState::MutePlayerText(class APlayerState* Player, bool bToggle)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.MutePlayerText"));

	struct
	{
		class APlayerState*            Player;
		bool                           bToggle;
	} params = {};

	params.Player = Player;
	params.bToggle = bToggle;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.Multicast_Unreliable_PlayTaunt
// (FUNC_Net, FUNC_Native, FUNC_Event, FUNC_NetMulticast, FUNC_Protected)
// Parameters:
// unsigned char                  TauntID                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerState::Multicast_Unreliable_PlayTaunt(unsigned char TauntID)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.Multicast_Unreliable_PlayTaunt"));

	struct
	{
		unsigned char                  TauntID;
	} params = {};

	params.TauntID = TauntID;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.MultiCast_SpawnContextObject
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_NetMulticast, FUNC_Public)
// Parameters:
// struct FVector_NetQuantize     SpawnLocation                  (CPF_ConstParm, CPF_Parm, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AProjectXPlayerState*    SendingPlayerState             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerState::MultiCast_SpawnContextObject(const struct FVector_NetQuantize& SpawnLocation, class AProjectXPlayerState* SendingPlayerState)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.MultiCast_SpawnContextObject"));

	struct
	{
		struct FVector_NetQuantize     SpawnLocation;
		class AProjectXPlayerState*    SendingPlayerState;
	} params = {};

	params.SpawnLocation = SpawnLocation;
	params.SendingPlayerState = SendingPlayerState;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.Multicast_Reliable_EquipCosmeticItem
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_NetMulticast, FUNC_Protected)
// Parameters:
// ECosmeticType                  Type                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// uint16_t                       ShortCodeIndex                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// uint16_t                       EquipCodeIndex                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerState::Multicast_Reliable_EquipCosmeticItem(ECosmeticType Type, uint16_t ShortCodeIndex, uint16_t EquipCodeIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.Multicast_Reliable_EquipCosmeticItem"));

	struct
	{
		ECosmeticType                  Type;
		uint16_t                       ShortCodeIndex;
		uint16_t                       EquipCodeIndex;
	} params = {};

	params.Type = Type;
	params.ShortCodeIndex = ShortCodeIndex;
	params.EquipCodeIndex = EquipCodeIndex;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.MultiCast_PickupSpawned
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_NetMulticast, FUNC_Public)
// Parameters:
// struct FWorldPickupInfo        PickUpInfo                     (CPF_ConstParm, CPF_Parm, CPF_ReferenceParm, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerState::MultiCast_PickupSpawned(const struct FWorldPickupInfo& PickUpInfo)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.MultiCast_PickupSpawned"));

	struct
	{
		struct FWorldPickupInfo        PickUpInfo;
	} params = {};

	params.PickUpInfo = PickUpInfo;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.MultiCast_DestroyPickup
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_NetMulticast, FUNC_Public)
// Parameters:
// int                            PickupID                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerState::MultiCast_DestroyPickup(int PickupID)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.MultiCast_DestroyPickup"));

	struct
	{
		int                            PickupID;
	} params = {};

	params.PickupID = PickupID;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.ModifyXP
// (FUNC_BlueprintAuthorityOnly, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// EXPEventType                   Type                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class APlayerState*            TargetState                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UObject*                 Object                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          Alpha                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UClass* /*UExperienceEvent*/ ExpereienceEventOverride       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerState::ModifyXP(EXPEventType Type, class APlayerState* TargetState, class UObject* Object, float Alpha, class UClass* /*UExperienceEvent*/ ExpereienceEventOverride)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.ModifyXP"));

	struct
	{
		EXPEventType                   Type;
		class APlayerState*            TargetState;
		class UObject*                 Object;
		float                          Alpha;
		class UClass* /*UExperienceEvent*/ ExpereienceEventOverride;
	} params = {};

	params.Type = Type;
	params.TargetState = TargetState;
	params.Object = Object;
	params.Alpha = Alpha;
	params.ExpereienceEventOverride = ExpereienceEventOverride;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.ModifyUltimateCharge
// (FUNC_BlueprintAuthorityOnly, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// int                            Delta                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerState::ModifyUltimateCharge(int Delta)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.ModifyUltimateCharge"));

	struct
	{
		int                            Delta;
	} params = {};

	params.Delta = Delta;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.ModifyTeamKills
// (FUNC_BlueprintAuthorityOnly, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// int                            Delta                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerState::ModifyTeamKills(int Delta)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.ModifyTeamKills"));

	struct
	{
		int                            Delta;
	} params = {};

	params.Delta = Delta;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.ModifyLevel
// (FUNC_BlueprintAuthorityOnly, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// int                            Delta                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerState::ModifyLevel(int Delta)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.ModifyLevel"));

	struct
	{
		int                            Delta;
	} params = {};

	params.Delta = Delta;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.ModifyKills
// (FUNC_BlueprintAuthorityOnly, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class AProjectXPlayerState*    Killed                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UClass* /*UProjectXDamageType*/ DamageType                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerState::ModifyKills(class AProjectXPlayerState* Killed, class UClass* /*UProjectXDamageType*/ DamageType)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.ModifyKills"));

	struct
	{
		class AProjectXPlayerState*    Killed;
		class UClass* /*UProjectXDamageType*/ DamageType;
	} params = {};

	params.Killed = Killed;
	params.DamageType = DamageType;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.ModifyDeployablesDestructed
// (FUNC_BlueprintAuthorityOnly, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class ADeployable*             DeployableDestructed           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UClass* /*UProjectXDamageType*/ DamageType                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerState::ModifyDeployablesDestructed(class ADeployable* DeployableDestructed, class UClass* /*UProjectXDamageType*/ DamageType)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.ModifyDeployablesDestructed"));

	struct
	{
		class ADeployable*             DeployableDestructed;
		class UClass* /*UProjectXDamageType*/ DamageType;
	} params = {};

	params.DeployableDestructed = DeployableDestructed;
	params.DamageType = DamageType;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.ModifyDeaths
// (FUNC_BlueprintAuthorityOnly, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// int                            Delta                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AProjectXPlayerState*    KillerState                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerState::ModifyDeaths(int Delta, class AProjectXPlayerState* KillerState)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.ModifyDeaths"));

	struct
	{
		int                            Delta;
		class AProjectXPlayerState*    KillerState;
	} params = {};

	params.Delta = Delta;
	params.KillerState = KillerState;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.ModifyAssists
// (FUNC_BlueprintAuthorityOnly, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// int                            Delta                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class APlayerState*            PlayerState                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          MaxHealth                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          Damage                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerState::ModifyAssists(int Delta, class APlayerState* PlayerState, float MaxHealth, float Damage)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.ModifyAssists"));

	struct
	{
		int                            Delta;
		class APlayerState*            PlayerState;
		float                          MaxHealth;
		float                          Damage;
	} params = {};

	params.Delta = Delta;
	params.PlayerState = PlayerState;
	params.MaxHealth = MaxHealth;
	params.Damage = Damage;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.LoadGeneralCosmetics
// (FUNC_Final, FUNC_Native, FUNC_Protected, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// ECosmeticType                  Type                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FEquips                 LoadingEquips                  (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// struct FString                 EquipCode                      (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerState::LoadGeneralCosmetics(ECosmeticType Type, const struct FEquips& LoadingEquips, const struct FString& EquipCode)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.LoadGeneralCosmetics"));

	struct
	{
		ECosmeticType                  Type;
		struct FEquips                 LoadingEquips;
		struct FString                 EquipCode;
	} params = {};

	params.Type = Type;
	params.LoadingEquips = LoadingEquips;
	params.EquipCode = EquipCode;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.IsUltimateCharged
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXPlayerState::IsUltimateCharged()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.IsUltimateCharged"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.IsTeamChangeOnCoolDown
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXPlayerState::IsTeamChangeOnCoolDown()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.IsTeamChangeOnCoolDown"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.IsSquadLeader
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXPlayerState::IsSquadLeader()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.IsSquadLeader"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.IsReady
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXPlayerState::IsReady()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.IsReady"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.IsMatchBonusAvailable
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXPlayerState::IsMatchBonusAvailable()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.IsMatchBonusAvailable"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.IsLocalPlayerState
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXPlayerState::IsLocalPlayerState()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.IsLocalPlayerState"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.HasSpawnTarget
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXPlayerState::HasSpawnTarget()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.HasSpawnTarget"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.HasLoadedCosmetics
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXPlayerState::HasLoadedCosmetics()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.HasLoadedCosmetics"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.GetXPString
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FString                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FString AProjectXPlayerState::GetXPString()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.GetXPString"));

	struct
	{
		struct FString                 ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.GetXP
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AProjectXPlayerState::GetXP()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.GetXP"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.GetUnpackedPing
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int AProjectXPlayerState::GetUnpackedPing()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.GetUnpackedPing"));

	struct
	{
		int                            ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.GetUltimateChargeString
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FString                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FString AProjectXPlayerState::GetUltimateChargeString()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.GetUltimateChargeString"));

	struct
	{
		struct FString                 ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.GetUltimateCharge
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int AProjectXPlayerState::GetUltimateCharge()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.GetUltimateCharge"));

	struct
	{
		int                            ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.GetTimeUntilRespawn
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AProjectXPlayerState::GetTimeUntilRespawn()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.GetTimeUntilRespawn"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.GetTimeFromUsage
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// struct FPlayerClassUsage       ClassUsage                     (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AProjectXPlayerState::GetTimeFromUsage(const struct FPlayerClassUsage& ClassUsage)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.GetTimeFromUsage"));

	struct
	{
		struct FPlayerClassUsage       ClassUsage;
		float                          ReturnValue;
	} params = {};

	params.ClassUsage = ClassUsage;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.GetTeamSwitchingCoolDownRemaining
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AProjectXPlayerState::GetTeamSwitchingCoolDownRemaining()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.GetTeamSwitchingCoolDownRemaining"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.GetTeamKillsString
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FString                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FString AProjectXPlayerState::GetTeamKillsString()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.GetTeamKillsString"));

	struct
	{
		struct FString                 ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.GetTeamKills
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int AProjectXPlayerState::GetTeamKills()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.GetTeamKills"));

	struct
	{
		int                            ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.GetTaunt
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// unsigned char                  TauntNumber                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UAnimMontage*            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UAnimMontage* AProjectXPlayerState::GetTaunt(unsigned char TauntNumber)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.GetTaunt"));

	struct
	{
		unsigned char                  TauntNumber;
		class UAnimMontage*            ReturnValue;
	} params = {};

	params.TauntNumber = TauntNumber;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.GetSpawnTarget
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// TScriptInterface<class USpawnTargetInterface> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_NativeAccessSpecifierPublic)

TScriptInterface<class USpawnTargetInterface> AProjectXPlayerState::GetSpawnTarget()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.GetSpawnTarget"));

	struct
	{
		TScriptInterface<class USpawnTargetInterface> ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.GetSpawnCountFromUsage
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// struct FPlayerClassUsage       ClassUsage                     (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int AProjectXPlayerState::GetSpawnCountFromUsage(const struct FPlayerClassUsage& ClassUsage)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.GetSpawnCountFromUsage"));

	struct
	{
		struct FPlayerClassUsage       ClassUsage;
		int                            ReturnValue;
	} params = {};

	params.ClassUsage = ClassUsage;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.GetReviveBeacon
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class APickupReviveBeacon*     ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class APickupReviveBeacon* AProjectXPlayerState::GetReviveBeacon()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.GetReviveBeacon"));

	struct
	{
		class APickupReviveBeacon*     ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.GetPreferredPlayerClass
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UClass* /*AProjectXCharacter*/ ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UClass* /*AProjectXCharacter*/ AProjectXPlayerState::GetPreferredPlayerClass()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.GetPreferredPlayerClass"));

	struct
	{
		class UClass* /*AProjectXCharacter*/ ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.GetPlayerStateByPlayerID
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            ID                             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AProjectXPlayerState*    ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class AProjectXPlayerState* AProjectXPlayerState::GetPlayerStateByPlayerID(class UObject* WorldContextObject, int ID)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.GetPlayerStateByPlayerID"));

	struct
	{
		class UObject*                 WorldContextObject;
		int                            ID;
		class AProjectXPlayerState*    ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.ID = ID;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.GetPlayerStateByName
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FString                 Name                           (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class APlayerState*            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class APlayerState* AProjectXPlayerState::GetPlayerStateByName(class UObject* WorldContextObject, const struct FString& Name)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.GetPlayerStateByName"));

	struct
	{
		class UObject*                 WorldContextObject;
		struct FString                 Name;
		class APlayerState*            ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.Name = Name;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.GetPlayerStateByNakamaPlayerID
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FString                 ID                             (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AProjectXPlayerState*    ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class AProjectXPlayerState* AProjectXPlayerState::GetPlayerStateByNakamaPlayerID(class UObject* WorldContextObject, const struct FString& ID)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.GetPlayerStateByNakamaPlayerID"));

	struct
	{
		class UObject*                 WorldContextObject;
		struct FString                 ID;
		class AProjectXPlayerState*    ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.ID = ID;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.GetPlayerStateByID
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FString                 ID                             (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AProjectXPlayerState*    ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class AProjectXPlayerState* AProjectXPlayerState::GetPlayerStateByID(class UObject* WorldContextObject, const struct FString& ID)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.GetPlayerStateByID"));

	struct
	{
		class UObject*                 WorldContextObject;
		struct FString                 ID;
		class AProjectXPlayerState*    ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.ID = ID;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.GetPlayerProgression
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FPlayerProgressionUpdates ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)

struct FPlayerProgressionUpdates AProjectXPlayerState::GetPlayerProgression()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.GetPlayerProgression"));

	struct
	{
		struct FPlayerProgressionUpdates ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.GetPlayerID
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FString                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FString AProjectXPlayerState::GetPlayerID()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.GetPlayerID"));

	struct
	{
		struct FString                 ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.GetPlayerEquips
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FEquips                 ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)

struct FEquips AProjectXPlayerState::GetPlayerEquips()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.GetPlayerEquips"));

	struct
	{
		struct FEquips                 ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.GetPingString
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FString                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FString AProjectXPlayerState::GetPingString()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.GetPingString"));

	struct
	{
		struct FString                 ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.GetNextRespawnTime
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AProjectXPlayerState::GetNextRespawnTime()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.GetNextRespawnTime"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.GetMostUsedClass
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// struct FPlayerClassUsage       ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

struct FPlayerClassUsage AProjectXPlayerState::GetMostUsedClass()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.GetMostUsedClass"));

	struct
	{
		struct FPlayerClassUsage       ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.GetMaxUltimateCharge
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int AProjectXPlayerState::GetMaxUltimateCharge()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.GetMaxUltimateCharge"));

	struct
	{
		int                            ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.GetLevelString
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FString                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FString AProjectXPlayerState::GetLevelString()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.GetLevelString"));

	struct
	{
		struct FString                 ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.GetLevel
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int AProjectXPlayerState::GetLevel()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.GetLevel"));

	struct
	{
		int                            ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.GetKillsString
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FString                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FString AProjectXPlayerState::GetKillsString()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.GetKillsString"));

	struct
	{
		struct FString                 ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.GetKills
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int AProjectXPlayerState::GetKills()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.GetKills"));

	struct
	{
		int                            ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.GetKillExplosion
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class UParticleSystem> Particle                       (CPF_Parm, CPF_OutParm, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TSoftObjectPtr<class USoundCue> Sound                          (CPF_Parm, CPF_OutParm, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXPlayerState::GetKillExplosion(TSoftObjectPtr<class UParticleSystem>* Particle, TSoftObjectPtr<class USoundCue>* Sound)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.GetKillExplosion"));

	struct
	{
		TSoftObjectPtr<class UParticleSystem> Particle;
		TSoftObjectPtr<class USoundCue> Sound;
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	if (Particle != nullptr)
		*Particle = params.Particle;
	if (Sound != nullptr)
		*Sound = params.Sound;

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.GetIsSpawningOnReviveBeacon
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXPlayerState::GetIsSpawningOnReviveBeacon()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.GetIsSpawningOnReviveBeacon"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.GetGlobalAmmoComponent
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UGlobalAmmoComponent*    ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UGlobalAmmoComponent* AProjectXPlayerState::GetGlobalAmmoComponent()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.GetGlobalAmmoComponent"));

	struct
	{
		class UGlobalAmmoComponent*    ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.GetGameXPFromMultiplier
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AProjectXPlayerState::GetGameXPFromMultiplier()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.GetGameXPFromMultiplier"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.GetExpMulitplier
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AProjectXPlayerState::GetExpMulitplier()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.GetExpMulitplier"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.GetEliminationsString
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FString                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FString AProjectXPlayerState::GetEliminationsString()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.GetEliminationsString"));

	struct
	{
		struct FString                 ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.GetEliminations
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int AProjectXPlayerState::GetEliminations()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.GetEliminations"));

	struct
	{
		int                            ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.GetDeathsString
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FString                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FString AProjectXPlayerState::GetDeathsString()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.GetDeathsString"));

	struct
	{
		struct FString                 ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.GetDeaths
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int AProjectXPlayerState::GetDeaths()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.GetDeaths"));

	struct
	{
		int                            ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.GetCurrentSquadOrder
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// struct FSquadOrder             ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

struct FSquadOrder AProjectXPlayerState::GetCurrentSquadOrder()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.GetCurrentSquadOrder"));

	struct
	{
		struct FSquadOrder             ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.GetClassUsageByClass
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UClass* /*AProjectXCharacter*/ PlayerClass                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FPlayerClassUsage       ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

struct FPlayerClassUsage AProjectXPlayerState::GetClassUsageByClass(class UClass* /*AProjectXCharacter*/ PlayerClass)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.GetClassUsageByClass"));

	struct
	{
		class UClass* /*AProjectXCharacter*/ PlayerClass;
		struct FPlayerClassUsage       ReturnValue;
	} params = {};

	params.PlayerClass = PlayerClass;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.GetClassFromUsage
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// struct FPlayerClassUsage       ClassUsage                     (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
// class UClass* /*AProjectXCharacter*/ ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UClass* /*AProjectXCharacter*/ AProjectXPlayerState::GetClassFromUsage(const struct FPlayerClassUsage& ClassUsage)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.GetClassFromUsage"));

	struct
	{
		struct FPlayerClassUsage       ClassUsage;
		class UClass* /*AProjectXCharacter*/ ReturnValue;
	} params = {};

	params.ClassUsage = ClassUsage;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.GetAvatarImage
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UTexture2D*              ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UTexture2D* AProjectXPlayerState::GetAvatarImage()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.GetAvatarImage"));

	struct
	{
		class UTexture2D*              ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.GetAssistsString
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FString                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FString AProjectXPlayerState::GetAssistsString()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.GetAssistsString"));

	struct
	{
		struct FString                 ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.GetAssists
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int AProjectXPlayerState::GetAssists()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.GetAssists"));

	struct
	{
		int                            ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.DoRepairBonusXPBufferCheck
// (FUNC_Native, FUNC_Protected)

void AProjectXPlayerState::DoRepairBonusXPBufferCheck()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.DoRepairBonusXPBufferCheck"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.DoHealBonusXPBufferCheck
// (FUNC_Native, FUNC_Protected)

void AProjectXPlayerState::DoHealBonusXPBufferCheck()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.DoHealBonusXPBufferCheck"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.DestroyInvalidDeployables
// (FUNC_Native, FUNC_Public)
// Parameters:
// bool                           bForce                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerState::DestroyInvalidDeployables(bool bForce)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.DestroyInvalidDeployables"));

	struct
	{
		bool                           bForce;
	} params = {};

	params.bForce = bForce;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.Client_UnlockAchievement
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetClient)
// Parameters:
// EAchievementData               AchievementToUnlock            (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerState::Client_UnlockAchievement(EAchievementData AchievementToUnlock)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.Client_UnlockAchievement"));

	struct
	{
		EAchievementData               AchievementToUnlock;
	} params = {};

	params.AchievementToUnlock = AchievementToUnlock;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.Client_SendQuickChat
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetClient)
// Parameters:
// struct FQuickChatInfo          QuickChatData                  (CPF_ConstParm, CPF_Parm, CPF_ReferenceParm, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerState::Client_SendQuickChat(const struct FQuickChatInfo& QuickChatData)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.Client_SendQuickChat"));

	struct
	{
		struct FQuickChatInfo          QuickChatData;
	} params = {};

	params.QuickChatData = QuickChatData;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.Client_SendMessage
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetClient, FUNC_BlueprintCallable)
// Parameters:
// struct FString                 Message                        (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AProjectXPlayerState*    To                             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// EMessageType                   MessageType                    (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerState::Client_SendMessage(const struct FString& Message, class AProjectXPlayerState* To, EMessageType MessageType)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.Client_SendMessage"));

	struct
	{
		struct FString                 Message;
		class AProjectXPlayerState*    To;
		EMessageType                   MessageType;
	} params = {};

	params.Message = Message;
	params.To = To;
	params.MessageType = MessageType;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.Client_RequestSpawnTarget
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetClient)

void AProjectXPlayerState::Client_RequestSpawnTarget()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.Client_RequestSpawnTarget"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.Client_Reliable_UpdateExperienceGains
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetClient)
// Parameters:
// struct FPlayerProgressionUpdates NewExperienceGains             (CPF_ConstParm, CPF_Parm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerState::Client_Reliable_UpdateExperienceGains(const struct FPlayerProgressionUpdates& NewExperienceGains)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.Client_Reliable_UpdateExperienceGains"));

	struct
	{
		struct FPlayerProgressionUpdates NewExperienceGains;
	} params = {};

	params.NewExperienceGains = NewExperienceGains;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.Client_Reliable_SendGameXPFromMultiplier
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetClient)
// Parameters:
// uint16_t                       BonusEXP                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerState::Client_Reliable_SendGameXPFromMultiplier(uint16_t BonusEXP)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.Client_Reliable_SendGameXPFromMultiplier"));

	struct
	{
		uint16_t                       BonusEXP;
	} params = {};

	params.BonusEXP = BonusEXP;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.Client_QueryAchievements
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetClient)

void AProjectXPlayerState::Client_QueryAchievements()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.Client_QueryAchievements"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.Client_PlayAnnouncer
// (FUNC_Net, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetClient)
// Parameters:
// struct FString                 VoiceToPlay                    (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerState::Client_PlayAnnouncer(const struct FString& VoiceToPlay)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.Client_PlayAnnouncer"));

	struct
	{
		struct FString                 VoiceToPlay;
	} params = {};

	params.VoiceToPlay = VoiceToPlay;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerState.CanRestartPlayer
// (FUNC_Native, FUNC_Public)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXPlayerState::CanRestartPlayer()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.CanRestartPlayer"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXPlayerState.BroadcastReviveTimeReceived
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          ReviveStartTime                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerState::BroadcastReviveTimeReceived(float ReviveStartTime)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerState.BroadcastReviveTimeReceived"));

	struct
	{
		float                          ReviveStartTime;
	} params = {};

	params.ReviveStartTime = ReviveStartTime;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerStateHorde.Server_Reliable_UpdateHordeModeDifficulty
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetServer, FUNC_BlueprintCallable)
// Parameters:
// EDifficultyLevel               NewDifficultyLevel             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXPlayerStateHorde::Server_Reliable_UpdateHordeModeDifficulty(EDifficultyLevel NewDifficultyLevel)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerStateHorde.Server_Reliable_UpdateHordeModeDifficulty"));

	struct
	{
		EDifficultyLevel               NewDifficultyLevel;
	} params = {};

	params.NewDifficultyLevel = NewDifficultyLevel;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerStateHorde.Server_Reliable_RequestMatchStateUpdate
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetServer)

void AProjectXPlayerStateHorde::Server_Reliable_RequestMatchStateUpdate()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerStateHorde.Server_Reliable_RequestMatchStateUpdate"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerStateHorde.RequestMatchStateUpdateDelayed
// (FUNC_Native, FUNC_Public)

void AProjectXPlayerStateHorde::RequestMatchStateUpdateDelayed()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerStateHorde.RequestMatchStateUpdateDelayed"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerStateHorde.RequestMatchStateUpdate
// (FUNC_Native, FUNC_Public)

void AProjectXPlayerStateHorde::RequestMatchStateUpdate()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerStateHorde.RequestMatchStateUpdate"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXPlayerStateHorde.Client_DisplayKillCounter
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetClient)

void AProjectXPlayerStateHorde::Client_DisplayKillCounter()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXPlayerStateHorde.Client_DisplayKillCounter"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXRecordingPawn.OnViewingActorDeath
// (FUNC_Final, FUNC_Native, FUNC_Protected, FUNC_HasOutParms)
// Parameters:
// class AActor*                  Victim                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          Damage                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FDamageEvent            DamageEvent                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// class AController*             EventInstigator                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class APlayerState*            InstigatorPlayerState          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXRecordingPawn::OnViewingActorDeath(class AActor* Victim, float Damage, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser, class APlayerState* InstigatorPlayerState)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXRecordingPawn.OnViewingActorDeath"));

	struct
	{
		class AActor*                  Victim;
		float                          Damage;
		struct FDamageEvent            DamageEvent;
		class AController*             EventInstigator;
		class AActor*                  DamageCauser;
		class APlayerState*            InstigatorPlayerState;
	} params = {};

	params.Victim = Victim;
	params.Damage = Damage;
	params.DamageEvent = DamageEvent;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;
	params.InstigatorPlayerState = InstigatorPlayerState;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXSpectatorPawn.OnFollowTargetDied
// (FUNC_Native, FUNC_Protected, FUNC_HasOutParms)
// Parameters:
// class AActor*                  Victim                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          Damage                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FDamageEvent            DamageEvent                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// class AController*             EventInstigator                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class APlayerState*            InstigatorPlayerState          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXSpectatorPawn::OnFollowTargetDied(class AActor* Victim, float Damage, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser, class APlayerState* InstigatorPlayerState)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXSpectatorPawn.OnFollowTargetDied"));

	struct
	{
		class AActor*                  Victim;
		float                          Damage;
		struct FDamageEvent            DamageEvent;
		class AController*             EventInstigator;
		class AActor*                  DamageCauser;
		class APlayerState*            InstigatorPlayerState;
	} params = {};

	params.Victim = Victim;
	params.Damage = Damage;
	params.DamageEvent = DamageEvent;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;
	params.InstigatorPlayerState = InstigatorPlayerState;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXTransportObjective.OnFlagUpdated
// (FUNC_Native, FUNC_Protected)
// Parameters:
// class AFlag*                   Flag                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           NewFlag                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXTransportObjective::OnFlagUpdated(class AFlag* Flag, bool NewFlag)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXTransportObjective.OnFlagUpdated"));

	struct
	{
		class AFlag*                   Flag;
		bool                           NewFlag;
	} params = {};

	params.Flag = Flag;
	params.NewFlag = NewFlag;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXTransportObjective.FlagPickedUp
// (FUNC_Native, FUNC_Protected)
// Parameters:
// class AFlag*                   Flag                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AProjectXCharacter*      PickingUpActor                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            Team                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXTransportObjective::FlagPickedUp(class AFlag* Flag, class AProjectXCharacter* PickingUpActor, int Team)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXTransportObjective.FlagPickedUp"));

	struct
	{
		class AFlag*                   Flag;
		class AProjectXCharacter*      PickingUpActor;
		int                            Team;
	} params = {};

	params.Flag = Flag;
	params.PickingUpActor = PickingUpActor;
	params.Team = Team;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXTransportObjective.FlagDropped
// (FUNC_Native, FUNC_Protected)
// Parameters:
// class AFlag*                   Flag                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AProjectXCharacter*      DroppedCharacter               (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            Team                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXTransportObjective::FlagDropped(class AFlag* Flag, class AProjectXCharacter* DroppedCharacter, int Team)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXTransportObjective.FlagDropped"));

	struct
	{
		class AFlag*                   Flag;
		class AProjectXCharacter*      DroppedCharacter;
		int                            Team;
	} params = {};

	params.Flag = Flag;
	params.DroppedCharacter = DroppedCharacter;
	params.Team = Team;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXTransportObjective.FlagCaptured
// (FUNC_Native, FUNC_Protected)
// Parameters:
// class AFlag*                   Flag                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AProjectXCharacter*      PickingUpActor                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            Team                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXTransportObjective::FlagCaptured(class AFlag* Flag, class AProjectXCharacter* PickingUpActor, int Team)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXTransportObjective.FlagCaptured"));

	struct
	{
		class AFlag*                   Flag;
		class AProjectXCharacter*      PickingUpActor;
		int                            Team;
	} params = {};

	params.Flag = Flag;
	params.PickingUpActor = PickingUpActor;
	params.Team = Team;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXTutorialTarget.TargetDeath
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// class AActor*                  Victim                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          Damage                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FDamageEvent            DamageEvent                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// class AController*             EventInstigator                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class APlayerState*            InstigatorPlayerState          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXTutorialTarget::TargetDeath(class AActor* Victim, float Damage, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser, class APlayerState* InstigatorPlayerState)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXTutorialTarget.TargetDeath"));

	struct
	{
		class AActor*                  Victim;
		float                          Damage;
		struct FDamageEvent            DamageEvent;
		class AController*             EventInstigator;
		class AActor*                  DamageCauser;
		class APlayerState*            InstigatorPlayerState;
	} params = {};

	params.Victim = Victim;
	params.Damage = Damage;
	params.DamageEvent = DamageEvent;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;
	params.InstigatorPlayerState = InstigatorPlayerState;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXVehicle.UpdateCanInteractWith
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bCanInteract                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXVehicle::UpdateCanInteractWith(bool bCanInteract)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.UpdateCanInteractWith"));

	struct
	{
		bool                           bCanInteract;
	} params = {};

	params.bCanInteract = bCanInteract;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXVehicle.SetDisplayDriver
// (FUNC_Native, FUNC_Protected, FUNC_BlueprintCallable)
// Parameters:
// class AProjectXCharacter*      CosmeticDriver                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXVehicle::SetDisplayDriver(class AProjectXCharacter* CosmeticDriver)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.SetDisplayDriver"));

	struct
	{
		class AProjectXCharacter*      CosmeticDriver;
	} params = {};

	params.CosmeticDriver = CosmeticDriver;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXVehicle.SetAsDisplayOnly
// (FUNC_Native, FUNC_Protected, FUNC_BlueprintCallable)

void AProjectXVehicle::SetAsDisplayOnly()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.SetAsDisplayOnly"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXVehicle.Server_Unreliable_SendYawValue
// (FUNC_Net, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetServer)
// Parameters:
// uint16_t                       NewPawnPitchValue              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXVehicle::Server_Unreliable_SendYawValue(uint16_t NewPawnPitchValue)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.Server_Unreliable_SendYawValue"));

	struct
	{
		uint16_t                       NewPawnPitchValue;
	} params = {};

	params.NewPawnPitchValue = NewPawnPitchValue;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXVehicle.Server_Unreliable_SendPitchValue
// (FUNC_Net, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetServer)
// Parameters:
// uint16_t                       NewPawnPitchValue              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXVehicle::Server_Unreliable_SendPitchValue(uint16_t NewPawnPitchValue)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.Server_Unreliable_SendPitchValue"));

	struct
	{
		uint16_t                       NewPawnPitchValue;
	} params = {};

	params.NewPawnPitchValue = NewPawnPitchValue;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXVehicle.Server_Unreliable_SendCameraLocation
// (FUNC_Net, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetServer)
// Parameters:
// struct FVector_NetQuantize10   CameraPosition                 (CPF_ConstParm, CPF_Parm, CPF_ReferenceParm, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXVehicle::Server_Unreliable_SendCameraLocation(const struct FVector_NetQuantize10& CameraPosition)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.Server_Unreliable_SendCameraLocation"));

	struct
	{
		struct FVector_NetQuantize10   CameraPosition;
	} params = {};

	params.CameraPosition = CameraPosition;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXVehicle.Server_ToggleBoost
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetServer)
// Parameters:
// bool                           bToggle                        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXVehicle::Server_ToggleBoost(bool bToggle)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.Server_ToggleBoost"));

	struct
	{
		bool                           bToggle;
	} params = {};

	params.bToggle = bToggle;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXVehicle.Server_ProcessHit
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetServer)
// Parameters:
// struct FHitResult              Hit                            (CPF_ConstParm, CPF_Parm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

void AProjectXVehicle::Server_ProcessHit(const struct FHitResult& Hit)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.Server_ProcessHit"));

	struct
	{
		struct FHitResult              Hit;
	} params = {};

	params.Hit = Hit;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXVehicle.PlayWeaponFireEffects
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)
// Parameters:
// class UWeaponInstanceVehicle*  Weapon                         (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXVehicle::PlayWeaponFireEffects(class UWeaponInstanceVehicle* Weapon)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.PlayWeaponFireEffects"));

	struct
	{
		class UWeaponInstanceVehicle*  Weapon;
	} params = {};

	params.Weapon = Weapon;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXVehicle.OnVehicleHit
// (FUNC_Native, FUNC_Protected, FUNC_HasOutParms, FUNC_HasDefaults)
// Parameters:
// class UPrimitiveComponent*     HitComponent                   (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FVector                 NormalImpulse                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FHitResult              Hit                            (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

void AProjectXVehicle::OnVehicleHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.OnVehicleHit"));

	struct
	{
		class UPrimitiveComponent*     HitComponent;
		class AActor*                  OtherActor;
		class UPrimitiveComponent*     OtherComp;
		struct FVector                 NormalImpulse;
		struct FHitResult              Hit;
	} params = {};

	params.HitComponent = HitComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXVehicle.OnVehicleEndOverlap
// (FUNC_Native, FUNC_Protected)
// Parameters:
// class AActor*                  OverlappedActor                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXVehicle::OnVehicleEndOverlap(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.OnVehicleEndOverlap"));

	struct
	{
		class AActor*                  OverlappedActor;
		class AActor*                  OtherActor;
	} params = {};

	params.OverlappedActor = OverlappedActor;
	params.OtherActor = OtherActor;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXVehicle.OnVehicleBeginOverlap
// (FUNC_Native, FUNC_Protected)
// Parameters:
// class AActor*                  OverlappedActor                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXVehicle::OnVehicleBeginOverlap(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.OnVehicleBeginOverlap"));

	struct
	{
		class AActor*                  OverlappedActor;
		class AActor*                  OtherActor;
	} params = {};

	params.OverlappedActor = OverlappedActor;
	params.OtherActor = OtherActor;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXVehicle.OnSelected
// (FUNC_Native, FUNC_Protected)
// Parameters:
// class APlayerController*       Sender                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     Component                      (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXVehicle::OnSelected(class APlayerController* Sender, class UPrimitiveComponent* Component)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.OnSelected"));

	struct
	{
		class APlayerController*       Sender;
		class UPrimitiveComponent*     Component;
	} params = {};

	params.Sender = Sender;
	params.Component = Component;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXVehicle.OnRep_WeaponComponent
// (FUNC_Native, FUNC_Protected)

void AProjectXVehicle::OnRep_WeaponComponent()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.OnRep_WeaponComponent"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXVehicle.OnRep_IsBoosting
// (FUNC_Native, FUNC_Protected)

void AProjectXVehicle::OnRep_IsBoosting()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.OnRep_IsBoosting"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXVehicle.OnRep_Health
// (FUNC_Native, FUNC_Protected)
// Parameters:
// float                          PreviousHealth                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXVehicle::OnRep_Health(float PreviousHealth)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.OnRep_Health"));

	struct
	{
		float                          PreviousHealth;
	} params = {};

	params.PreviousHealth = PreviousHealth;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXVehicle.OnRep_Driver
// (FUNC_Native, FUNC_Protected)

void AProjectXVehicle::OnRep_Driver()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.OnRep_Driver"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXVehicle.OnRep_Boost
// (FUNC_Native, FUNC_Protected)

void AProjectXVehicle::OnRep_Boost()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.OnRep_Boost"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXVehicle.OnMoveUp
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)

void AProjectXVehicle::OnMoveUp()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.OnMoveUp"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXVehicle.OnHighlighted
// (FUNC_Native, FUNC_Protected)
// Parameters:
// class APlayerController*       Sender                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     Component                      (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXVehicle::OnHighlighted(class APlayerController* Sender, class UPrimitiveComponent* Component)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.OnHighlighted"));

	struct
	{
		class APlayerController*       Sender;
		class UPrimitiveComponent*     Component;
	} params = {};

	params.Sender = Sender;
	params.Component = Component;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXVehicle.OnDeathEvent
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)

void AProjectXVehicle::OnDeathEvent()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.OnDeathEvent"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXVehicle.Multicast_Unreliable_SendYawValue
// (FUNC_Net, FUNC_Native, FUNC_Event, FUNC_NetMulticast, FUNC_Protected)
// Parameters:
// uint16_t                       NewPawnYawValue                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXVehicle::Multicast_Unreliable_SendYawValue(uint16_t NewPawnYawValue)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.Multicast_Unreliable_SendYawValue"));

	struct
	{
		uint16_t                       NewPawnYawValue;
	} params = {};

	params.NewPawnYawValue = NewPawnYawValue;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXVehicle.Multicast_Unreliable_SendPitchValue
// (FUNC_Net, FUNC_Native, FUNC_Event, FUNC_NetMulticast, FUNC_Protected)
// Parameters:
// uint16_t                       NewPawnYawValue                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXVehicle::Multicast_Unreliable_SendPitchValue(uint16_t NewPawnYawValue)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.Multicast_Unreliable_SendPitchValue"));

	struct
	{
		uint16_t                       NewPawnYawValue;
	} params = {};

	params.NewPawnYawValue = NewPawnYawValue;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXVehicle.Multicast_Unreliable_CameraPosition
// (FUNC_Net, FUNC_Native, FUNC_Event, FUNC_NetMulticast, FUNC_Protected)
// Parameters:
// struct FVector_NetQuantize10   CameraPosition                 (CPF_ConstParm, CPF_Parm, CPF_ReferenceParm, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXVehicle::Multicast_Unreliable_CameraPosition(const struct FVector_NetQuantize10& CameraPosition)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.Multicast_Unreliable_CameraPosition"));

	struct
	{
		struct FVector_NetQuantize10   CameraPosition;
	} params = {};

	params.CameraPosition = CameraPosition;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXVehicle.LeaveVehicle
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class AProjectXCharacter*      Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bForceLeave                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bEject                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXVehicle::LeaveVehicle(class AProjectXCharacter* Character, bool bForceLeave, bool bEject)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.LeaveVehicle"));

	struct
	{
		class AProjectXCharacter*      Character;
		bool                           bForceLeave;
		bool                           bEject;
		bool                           ReturnValue;
	} params = {};

	params.Character = Character;
	params.bForceLeave = bForceLeave;
	params.bEject = bEject;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXVehicle.K2_VehicleSetAsDisplay
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)

void AProjectXVehicle::K2_VehicleSetAsDisplay()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.K2_VehicleSetAsDisplay"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXVehicle.K2_GetSeats
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// TArray<class UVehicleSeatComponent*> ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

TArray<class UVehicleSeatComponent*> AProjectXVehicle::K2_GetSeats()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.K2_GetSeats"));

	struct
	{
		TArray<class UVehicleSeatComponent*> ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXVehicle.IsVisible
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXVehicle::IsVisible()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.IsVisible"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXVehicle.IsVehicleInHierarchy
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AProjectXVehicle*        Vehicle                        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXVehicle::IsVehicleInHierarchy(class AProjectXVehicle* Vehicle)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.IsVehicleInHierarchy"));

	struct
	{
		class AProjectXVehicle*        Vehicle;
		bool                           ReturnValue;
	} params = {};

	params.Vehicle = Vehicle;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXVehicle.IsOccupant
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AProjectXCharacter*      Character                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXVehicle::IsOccupant(class AProjectXCharacter* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.IsOccupant"));

	struct
	{
		class AProjectXCharacter*      Character;
		bool                           ReturnValue;
	} params = {};

	params.Character = Character;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXVehicle.IsMovingForward
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXVehicle::IsMovingForward()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.IsMovingForward"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXVehicle.IsMovingBackwards
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXVehicle::IsMovingBackwards()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.IsMovingBackwards"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXVehicle.IsMoving
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXVehicle::IsMoving()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.IsMoving"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXVehicle.IsInteractionDisabled
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXVehicle::IsInteractionDisabled()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.IsInteractionDisabled"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXVehicle.IsHoverVehicle
// (FUNC_Final, FUNC_Native, FUNC_Protected, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXVehicle::IsHoverVehicle()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.IsHoverVehicle"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXVehicle.IsBoosting
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXVehicle::IsBoosting()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.IsBoosting"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXVehicle.IsAPersonalVehicle
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXVehicle::IsAPersonalVehicle()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.IsAPersonalVehicle"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXVehicle.IsAccelerating
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// EAccelerationDirection         Direction                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXVehicle::IsAccelerating(EAccelerationDirection Direction)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.IsAccelerating"));

	struct
	{
		EAccelerationDirection         Direction;
		bool                           ReturnValue;
	} params = {};

	params.Direction = Direction;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXVehicle.HasOwnerVehicle
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXVehicle::HasOwnerVehicle()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.HasOwnerVehicle"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXVehicle.HasAvailableSeat
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXVehicle::HasAvailableSeat()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.HasAvailableSeat"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXVehicle.HasAnyOccupants
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXVehicle::HasAnyOccupants()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.HasAnyOccupants"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXVehicle.GetWeaponInterpolatedRotation
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// float                          DeltaTime                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FRotator                CurrentRotation                (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
// struct FRotator                TargetRotation                 (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
// class UVehicleSeatComponent*   Seat                           (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FRotator                ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

struct FRotator AProjectXVehicle::GetWeaponInterpolatedRotation(float DeltaTime, const struct FRotator& CurrentRotation, const struct FRotator& TargetRotation, class UVehicleSeatComponent* Seat)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.GetWeaponInterpolatedRotation"));

	struct
	{
		float                          DeltaTime;
		struct FRotator                CurrentRotation;
		struct FRotator                TargetRotation;
		class UVehicleSeatComponent*   Seat;
		struct FRotator                ReturnValue;
	} params = {};

	params.DeltaTime = DeltaTime;
	params.CurrentRotation = CurrentRotation;
	params.TargetRotation = TargetRotation;
	params.Seat = Seat;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXVehicle.GetVehicleWeaponComponent
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UWeaponComponent*        ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UWeaponComponent* AProjectXVehicle::GetVehicleWeaponComponent()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.GetVehicleWeaponComponent"));

	struct
	{
		class UWeaponComponent*        ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXVehicle.GetVehicleRelativeAcceleration
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FVector                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FVector AProjectXVehicle::GetVehicleRelativeAcceleration()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.GetVehicleRelativeAcceleration"));

	struct
	{
		struct FVector                 ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXVehicle.GetVehicleName
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FText                   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_NativeAccessSpecifierPublic)

struct FText AProjectXVehicle::GetVehicleName()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.GetVehicleName"));

	struct
	{
		struct FText                   ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXVehicle.GetVehicleIDStatic
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UClass* /*AProjectXVehicle*/ VehicleClass                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FString                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FString AProjectXVehicle::GetVehicleIDStatic(class UClass* /*AProjectXVehicle*/ VehicleClass)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.GetVehicleIDStatic"));

	struct
	{
		class UClass* /*AProjectXVehicle*/ VehicleClass;
		struct FString                 ReturnValue;
	} params = {};

	params.VehicleClass = VehicleClass;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXVehicle.GetVehicleID
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FString                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FString AProjectXVehicle::GetVehicleID()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.GetVehicleID"));

	struct
	{
		struct FString                 ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXVehicle.GetSeatsHUDIcon
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// TSoftObjectPtr<class UTexture2D> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

TSoftObjectPtr<class UTexture2D> AProjectXVehicle::GetSeatsHUDIcon()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.GetSeatsHUDIcon"));

	struct
	{
		TSoftObjectPtr<class UTexture2D> ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXVehicle.GetSeatByOccupant
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AProjectXCharacter*      Character                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UVehicleSeatComponent*   ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UVehicleSeatComponent* AProjectXVehicle::GetSeatByOccupant(class AProjectXCharacter* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.GetSeatByOccupant"));

	struct
	{
		class AProjectXCharacter*      Character;
		class UVehicleSeatComponent*   ReturnValue;
	} params = {};

	params.Character = Character;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXVehicle.GetProjectileTransform
// (FUNC_Native, FUNC_Event, FUNC_Public, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure)
// Parameters:
// struct FTransform              Transform                      (CPF_Parm, CPF_OutParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
// struct FName                   SocketName                     (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UVehicleSeatComponent*   Seat                           (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           CosmeticOnly                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXVehicle::GetProjectileTransform(class UVehicleSeatComponent* Seat, bool CosmeticOnly, struct FTransform* Transform, struct FName* SocketName)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.GetProjectileTransform"));

	struct
	{
		struct FTransform              Transform;
		struct FName                   SocketName;
		class UVehicleSeatComponent*   Seat;
		bool                           CosmeticOnly;
		bool                           ReturnValue;
	} params = {};

	params.Seat = Seat;
	params.CosmeticOnly = CosmeticOnly;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	if (Transform != nullptr)
		*Transform = params.Transform;
	if (SocketName != nullptr)
		*SocketName = params.SocketName;

	return params.ReturnValue;
}


// Function ProjectX.ProjectXVehicle.GetPlayerCanSpawnNearby
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXVehicle::GetPlayerCanSpawnNearby()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.GetPlayerCanSpawnNearby"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXVehicle.GetPlayerCanSpawnInside
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXVehicle::GetPlayerCanSpawnInside()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.GetPlayerCanSpawnInside"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXVehicle.GetOwnerVehicle
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AProjectXVehicle*        ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class AProjectXVehicle* AProjectXVehicle::GetOwnerVehicle()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.GetOwnerVehicle"));

	struct
	{
		class AProjectXVehicle*        ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXVehicle.GetOccupants
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// TArray<class AProjectXCharacter*> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_NativeAccessSpecifierPublic)

TArray<class AProjectXCharacter*> AProjectXVehicle::GetOccupants()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.GetOccupants"));

	struct
	{
		TArray<class AProjectXCharacter*> ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXVehicle.GetMaxBoost
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AProjectXVehicle::GetMaxBoost()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.GetMaxBoost"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXVehicle.GetKillCamWidgetPlacementPivot
// (FUNC_Event, FUNC_Public, FUNC_HasDefaults, FUNC_BlueprintEvent, FUNC_Const)
// Parameters:
// struct FVector                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FVector AProjectXVehicle::GetKillCamWidgetPlacementPivot()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.GetKillCamWidgetPlacementPivot"));

	struct
	{
		struct FVector                 ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXVehicle.GetIsDisplayOnly
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXVehicle::GetIsDisplayOnly()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.GetIsDisplayOnly"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXVehicle.GetExitTime
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AProjectXVehicle::GetExitTime()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.GetExitTime"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXVehicle.GetDriverSeat
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UVehicleSeatComponent*   ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UVehicleSeatComponent* AProjectXVehicle::GetDriverSeat()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.GetDriverSeat"));

	struct
	{
		class UVehicleSeatComponent*   ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXVehicle.GetDriver
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AProjectXCharacter*      ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class AProjectXCharacter* AProjectXVehicle::GetDriver()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.GetDriver"));

	struct
	{
		class AProjectXCharacter*      ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXVehicle.GetCurrentBoost
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AProjectXVehicle::GetCurrentBoost()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.GetCurrentBoost"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXVehicle.GetClosestEntryLocation
// (FUNC_Native, FUNC_Protected, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AProjectXCharacter*      Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FVector                 Location                       (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UVehicleSeatComponent*   ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UVehicleSeatComponent* AProjectXVehicle::GetClosestEntryLocation(class AProjectXCharacter* Character, struct FVector* Location)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.GetClosestEntryLocation"));

	struct
	{
		class AProjectXCharacter*      Character;
		struct FVector                 Location;
		class UVehicleSeatComponent*   ReturnValue;
	} params = {};

	params.Character = Character;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	if (Location != nullptr)
		*Location = params.Location;

	return params.ReturnValue;
}


// Function ProjectX.ProjectXVehicle.GetClampedAimRotationToVehicleForward
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FRotator                ForwardRotation                (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
// struct FVector                 ForwardLocation                (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FRotator                ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

struct FRotator AProjectXVehicle::GetClampedAimRotationToVehicleForward(const struct FRotator& ForwardRotation, const struct FVector& ForwardLocation)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.GetClampedAimRotationToVehicleForward"));

	struct
	{
		struct FRotator                ForwardRotation;
		struct FVector                 ForwardLocation;
		struct FRotator                ReturnValue;
	} params = {};

	params.ForwardRotation = ForwardRotation;
	params.ForwardLocation = ForwardLocation;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXVehicle.GetBoostRegenRate
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AProjectXVehicle::GetBoostRegenRate()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.GetBoostRegenRate"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXVehicle.GetBoostMultiplier
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AProjectXVehicle::GetBoostMultiplier()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.GetBoostMultiplier"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXVehicle.GetBestAvailableSeat
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AProjectXCharacter*      Character                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UVehicleSeatComponent*   ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UVehicleSeatComponent* AProjectXVehicle::GetBestAvailableSeat(class AProjectXCharacter* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.GetBestAvailableSeat"));

	struct
	{
		class AProjectXCharacter*      Character;
		class UVehicleSeatComponent*   ReturnValue;
	} params = {};

	params.Character = Character;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXVehicle.GetAimTargetPoint
// (FUNC_Native, FUNC_Public, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FVector                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FVector AProjectXVehicle::GetAimTargetPoint()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.GetAimTargetPoint"));

	struct
	{
		struct FVector                 ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXVehicle.GetAimStartPoint
// (FUNC_Event, FUNC_Public, FUNC_HasDefaults, FUNC_BlueprintEvent, FUNC_Const)
// Parameters:
// struct FVector                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FVector AProjectXVehicle::GetAimStartPoint()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.GetAimStartPoint"));

	struct
	{
		struct FVector                 ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXVehicle.FindExitDestination
// (FUNC_Native, FUNC_Protected, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AProjectXCharacter*      Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FTransform              Transform                      (CPF_Parm, CPF_OutParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXVehicle::FindExitDestination(class AProjectXCharacter* Character, struct FTransform* Transform)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.FindExitDestination"));

	struct
	{
		class AProjectXCharacter*      Character;
		struct FTransform              Transform;
		bool                           ReturnValue;
	} params = {};

	params.Character = Character;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	if (Transform != nullptr)
		*Transform = params.Transform;

	return params.ReturnValue;
}


// Function ProjectX.ProjectXVehicle.ExitPersonalVehicle
// (FUNC_Native, FUNC_Protected)

void AProjectXVehicle::ExitPersonalVehicle()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.ExitPersonalVehicle"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXVehicle.EnterVehicle
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class AProjectXCharacter*      Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UVehicleSeatComponent*   PreferredSeat                  (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXVehicle::EnterVehicle(class AProjectXCharacter* Character, class UVehicleSeatComponent* PreferredSeat)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.EnterVehicle"));

	struct
	{
		class AProjectXCharacter*      Character;
		class UVehicleSeatComponent*   PreferredSeat;
		bool                           ReturnValue;
	} params = {};

	params.Character = Character;
	params.PreferredSeat = PreferredSeat;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXVehicle.DriverChangedEvent
// (FUNC_Event, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintEvent)
// Parameters:
// class AProjectXCharacter*      PreviousDriver                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AProjectXCharacter*      NewDriver                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXVehicle::DriverChangedEvent(class AProjectXCharacter* PreviousDriver, class AProjectXCharacter* NewDriver)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.DriverChangedEvent"));

	struct
	{
		class AProjectXCharacter*      PreviousDriver;
		class AProjectXCharacter*      NewDriver;
	} params = {};

	params.PreviousDriver = PreviousDriver;
	params.NewDriver = NewDriver;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXVehicle.DoesVehicleMoveRelativeToSelf
// (FUNC_Final, FUNC_Native, FUNC_Protected, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXVehicle::DoesVehicleMoveRelativeToSelf()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.DoesVehicleMoveRelativeToSelf"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXVehicle.Client_StopJumping
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetClient)

void AProjectXVehicle::Client_StopJumping()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.Client_StopJumping"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXVehicle.CanExitVehicle
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXVehicle::CanExitVehicle()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.CanExitVehicle"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXVehicle.CanEnterVehicle
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AProjectXCharacter*      Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXVehicle::CanEnterVehicle(class AProjectXCharacter* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.CanEnterVehicle"));

	struct
	{
		class AProjectXCharacter*      Character;
		bool                           ReturnValue;
	} params = {};

	params.Character = Character;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXVehicle.AttemptToBecomeDriver
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class AProjectXCharacter*      Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AProjectXVehicle::AttemptToBecomeDriver(class AProjectXCharacter* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.AttemptToBecomeDriver"));

	struct
	{
		class AProjectXCharacter*      Character;
		bool                           ReturnValue;
	} params = {};

	params.Character = Character;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXVehicle.AddComponentForCollisionComputations
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*     PrimitiveComponent             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AProjectXVehicle::AddComponentForCollisionComputations(class UPrimitiveComponent* PrimitiveComponent)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicle.AddComponentForCollisionComputations"));

	struct
	{
		class UPrimitiveComponent*     PrimitiveComponent;
	} params = {};

	params.PrimitiveComponent = PrimitiveComponent;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.PXProjectileMovementComponent.UseExtentTrace
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UPXProjectileMovementComponent::UseExtentTrace()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.PXProjectileMovementComponent.UseExtentTrace"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.PXProjectileMovementComponent.SetMaxSpeed
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          InMaxSpeed                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UPXProjectileMovementComponent::SetMaxSpeed(float InMaxSpeed)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.PXProjectileMovementComponent.SetMaxSpeed"));

	struct
	{
		float                          InMaxSpeed;
	} params = {};

	params.InMaxSpeed = InMaxSpeed;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.PXProjectileMovementComponent.SetHomingTarget
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class USceneComponent*         Target                         (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UPXProjectileMovementComponent::SetHomingTarget(class USceneComponent* Target)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.PXProjectileMovementComponent.SetHomingTarget"));

	struct
	{
		class USceneComponent*         Target;
	} params = {};

	params.Target = Target;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.PXProjectileMovementComponent.SetAimTarget
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class USceneComponent*         Target                         (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          Falloff                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UPXProjectileMovementComponent::SetAimTarget(class USceneComponent* Target, float Falloff)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.PXProjectileMovementComponent.SetAimTarget"));

	struct
	{
		class USceneComponent*         Target;
		float                          Falloff;
	} params = {};

	params.Target = Target;
	params.Falloff = Falloff;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.PXProjectileMovementComponent.IsHomingProjectile
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UPXProjectileMovementComponent::IsHomingProjectile()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.PXProjectileMovementComponent.IsHomingProjectile"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.PXProjectileMovementComponent.IsDebug
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UPXProjectileMovementComponent::IsDebug()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.PXProjectileMovementComponent.IsDebug"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.PXProjectileMovementComponent.GetSpeed
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UPXProjectileMovementComponent::GetSpeed()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.PXProjectileMovementComponent.GetSpeed"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.PXProjectileMovementComponent.GetQualityMode
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// EQualityMode                   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

EQualityMode UPXProjectileMovementComponent::GetQualityMode()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.PXProjectileMovementComponent.GetQualityMode"));

	struct
	{
		EQualityMode                   ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.PXProjectileMovementComponent.CanBounce
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UPXProjectileMovementComponent::CanBounce()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.PXProjectileMovementComponent.CanBounce"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.QuickChatButtonWidget.ShouldSetVisible
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UQuickChatButtonWidget::ShouldSetVisible()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.QuickChatButtonWidget.ShouldSetVisible"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.QuickChatButtonWidget.SetButtonColorAndOpacity
// (FUNC_Event, FUNC_Public, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintEvent)
// Parameters:
// struct FLinearColor            NewColor                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UQuickChatButtonWidget::SetButtonColorAndOpacity(const struct FLinearColor& NewColor)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.QuickChatButtonWidget.SetButtonColorAndOpacity"));

	struct
	{
		struct FLinearColor            NewColor;
	} params = {};

	params.NewColor = NewColor;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.QuickChatButtonWidget.SendButtonMessage
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void UQuickChatButtonWidget::SendButtonMessage()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.QuickChatButtonWidget.SendButtonMessage"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.QuickChatButtonWidget.InitQuickChatButton
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// struct FQuickChatData          InQuickChatData                (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// class AActor*                  InSquadOrderActor              (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UQuickChatButtonWidget::InitQuickChatButton(const struct FQuickChatData& InQuickChatData, class AActor* InSquadOrderActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.QuickChatButtonWidget.InitQuickChatButton"));

	struct
	{
		struct FQuickChatData          InQuickChatData;
		class AActor*                  InSquadOrderActor;
	} params = {};

	params.InQuickChatData = InQuickChatData;
	params.InSquadOrderActor = InSquadOrderActor;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.QuickChatWidget.ShowAllWidgetOptions
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)

void UQuickChatWidget::ShowAllWidgetOptions()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.QuickChatWidget.ShowAllWidgetOptions"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.QuickChatWidget.HideAllWidgetOptions
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)

void UQuickChatWidget::HideAllWidgetOptions()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.QuickChatWidget.HideAllWidgetOptions"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.QuickChatWidget.CloseWidget
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void UQuickChatWidget::CloseWidget()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.QuickChatWidget.CloseWidget"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.RadarIconWidget.UpdateVisibility
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void URadarIconWidget::UpdateVisibility()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.RadarIconWidget.UpdateVisibility"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.RadarIconWidget.UpdateIconBasedOnTeam
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void URadarIconWidget::UpdateIconBasedOnTeam()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.RadarIconWidget.UpdateIconBasedOnTeam"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.RadarIconWidget.UpdateIconBasedOnSquad
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void URadarIconWidget::UpdateIconBasedOnSquad()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.RadarIconWidget.UpdateIconBasedOnSquad"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.RadarIconWidget.RemoveIcon
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void URadarIconWidget::RemoveIcon()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.RadarIconWidget.RemoveIcon"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.RadarIconWidget.OnActorStopTracking
// (FUNC_Final, FUNC_Native, FUNC_Public)
// Parameters:
// class AActor*                  Actor                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void URadarIconWidget::OnActorStopTracking(class AActor* Actor)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.RadarIconWidget.OnActorStopTracking"));

	struct
	{
		class AActor*                  Actor;
	} params = {};

	params.Actor = Actor;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.RadarIconWidget.Init
// (FUNC_Native, FUNC_Event, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintEvent)

void URadarIconWidget::Init()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.RadarIconWidget.Init"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.RadarIconWidget.GetReferenceActor
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AActor*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class AActor* URadarIconWidget::GetReferenceActor()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.RadarIconWidget.GetReferenceActor"));

	struct
	{
		class AActor*                  ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.RadarIconWidget.EvaluateVisibilityAsSelfOrEnemy
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class AProjectXCharacter*      TrackedCharacter               (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void URadarIconWidget::EvaluateVisibilityAsSelfOrEnemy(class AProjectXCharacter* TrackedCharacter)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.RadarIconWidget.EvaluateVisibilityAsSelfOrEnemy"));

	struct
	{
		class AProjectXCharacter*      TrackedCharacter;
	} params = {};

	params.TrackedCharacter = TrackedCharacter;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.RadarWidget.RemoveTrackedActor
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)
// Parameters:
// class AActor*                  Actor                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void URadarWidget::RemoveTrackedActor(class AActor* Actor)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.RadarWidget.RemoveTrackedActor"));

	struct
	{
		class AActor*                  Actor;
	} params = {};

	params.Actor = Actor;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.RadarWidget.GetRadarSize
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FVector2D               ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FVector2D URadarWidget::GetRadarSize()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.RadarWidget.GetRadarSize"));

	struct
	{
		struct FVector2D               ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.RadarWidget.GetRadarRadius
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float URadarWidget::GetRadarRadius()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.RadarWidget.GetRadarRadius"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ReactsToActorPruner.OnActorEnabled
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)

void UReactsToActorPruner::OnActorEnabled()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ReactsToActorPruner.OnActorEnabled"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ReactsToActorPruner.OnActorDisabled
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)

void UReactsToActorPruner::OnActorDisabled()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ReactsToActorPruner.OnActorDisabled"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ReactsToActorPruner.ActorEnabled
// (FUNC_Native, FUNC_Public)

void UReactsToActorPruner::ActorEnabled()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ReactsToActorPruner.ActorEnabled"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ReactsToActorPruner.ActorDisabled
// (FUNC_Native, FUNC_Public)

void UReactsToActorPruner::ActorDisabled()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ReactsToActorPruner.ActorDisabled"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ReactsToGameplayVolumes.WasInside
// (FUNC_Native, FUNC_Event, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UReactsToGameplayVolumes::WasInside()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ReactsToGameplayVolumes.WasInside"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ReactsToGameplayVolumes.SetOutsideVolume
// (FUNC_Native, FUNC_Public)

void UReactsToGameplayVolumes::SetOutsideVolume()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ReactsToGameplayVolumes.SetOutsideVolume"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ReactsToGameplayVolumes.SetInsideVolume
// (FUNC_Native, FUNC_Public)

void UReactsToGameplayVolumes::SetInsideVolume()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ReactsToGameplayVolumes.SetInsideVolume"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ReactsToGameplayVolumes.OnOutside
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)

void UReactsToGameplayVolumes::OnOutside()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ReactsToGameplayVolumes.OnOutside"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ReactsToGameplayVolumes.OnInside
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)

void UReactsToGameplayVolumes::OnInside()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ReactsToGameplayVolumes.OnInside"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ReactsToGameplayVolumes.IsInside
// (FUNC_Native, FUNC_Event, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UReactsToGameplayVolumes::IsInside()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ReactsToGameplayVolumes.IsInside"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ReactsToGameplayVolumes.GetOnSoftBoundaryEnterEvent
// (FUNC_Native, FUNC_Public)
// Parameters:
// struct FMulticastScriptDelegate ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_NativeAccessSpecifierPublic)

struct FMulticastScriptDelegate UReactsToGameplayVolumes::GetOnSoftBoundaryEnterEvent()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ReactsToGameplayVolumes.GetOnSoftBoundaryEnterEvent"));

	struct
	{
		struct FMulticastScriptDelegate ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ReactsToMatchEvents.OnMatchStarted
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)

void UReactsToMatchEvents::OnMatchStarted()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ReactsToMatchEvents.OnMatchStarted"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ReactsToMatchEvents.OnMatchEnded
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)

void UReactsToMatchEvents::OnMatchEnded()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ReactsToMatchEvents.OnMatchEnded"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ReactsToMatchEvents.MatchStarted
// (FUNC_Native, FUNC_Public)

void UReactsToMatchEvents::MatchStarted()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ReactsToMatchEvents.MatchStarted"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ReactsToMatchEvents.MatchEnded
// (FUNC_Native, FUNC_Public)

void UReactsToMatchEvents::MatchEnded()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ReactsToMatchEvents.MatchEnded"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ReactsToObjectiveInterface.OnObjectiveStateUpdated
// (FUNC_Event, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintEvent)
// Parameters:
// class AProjectXSpawnerObjective* ObjectiveManager               (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FObjectiveStatus        State                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

void UReactsToObjectiveInterface::OnObjectiveStateUpdated(class AProjectXSpawnerObjective* ObjectiveManager, const struct FObjectiveStatus& State)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ReactsToObjectiveInterface.OnObjectiveStateUpdated"));

	struct
	{
		class AProjectXSpawnerObjective* ObjectiveManager;
		struct FObjectiveStatus        State;
	} params = {};

	params.ObjectiveManager = ObjectiveManager;
	params.State = State;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ReactsToObjectiveInterface.OnIntializeObjectiveOwnedObject
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)
// Parameters:
// class AProjectXSpawnerObjective* ObjectiveManager               (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UReactsToObjectiveInterface::OnIntializeObjectiveOwnedObject(class AProjectXSpawnerObjective* ObjectiveManager)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ReactsToObjectiveInterface.OnIntializeObjectiveOwnedObject"));

	struct
	{
		class AProjectXSpawnerObjective* ObjectiveManager;
	} params = {};

	params.ObjectiveManager = ObjectiveManager;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ReactsToObjectiveInterface.ObjectiveStateUpdated
// (FUNC_Native, FUNC_Public, FUNC_HasOutParms)
// Parameters:
// class AProjectXSpawnerObjective* ObjectiveController            (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FObjectiveStatus        State                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

void UReactsToObjectiveInterface::ObjectiveStateUpdated(class AProjectXSpawnerObjective* ObjectiveController, const struct FObjectiveStatus& State)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ReactsToObjectiveInterface.ObjectiveStateUpdated"));

	struct
	{
		class AProjectXSpawnerObjective* ObjectiveController;
		struct FObjectiveStatus        State;
	} params = {};

	params.ObjectiveController = ObjectiveController;
	params.State = State;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ReactsToObjectiveInterface.IntializeObjectiveOwnedObject
// (FUNC_Native, FUNC_Public)
// Parameters:
// class AProjectXSpawnerObjective* ObjectiveController            (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UReactsToObjectiveInterface::IntializeObjectiveOwnedObject(class AProjectXSpawnerObjective* ObjectiveController)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ReactsToObjectiveInterface.IntializeObjectiveOwnedObject"));

	struct
	{
		class AProjectXSpawnerObjective* ObjectiveController;
	} params = {};

	params.ObjectiveController = ObjectiveController;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ReactsToWorldEvents.OnWorldOriginShifted
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)

void UReactsToWorldEvents::OnWorldOriginShifted()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ReactsToWorldEvents.OnWorldOriginShifted"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.RemoteConsole.Login
// (FUNC_Native, FUNC_Protected)
// Parameters:
// class UObject*                 ConnectionUObject              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void URemoteConsole::Login(class UObject* ConnectionUObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.RemoteConsole.Login"));

	struct
	{
		class UObject*                 ConnectionUObject;
	} params = {};

	params.ConnectionUObject = ConnectionUObject;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.RemoteConsole.GetServerInfo
// (FUNC_Native, FUNC_Protected)
// Parameters:
// class UObject*                 ConnectionUObject              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void URemoteConsole::GetServerInfo(class UObject* ConnectionUObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.RemoteConsole.GetServerInfo"));

	struct
	{
		class UObject*                 ConnectionUObject;
	} params = {};

	params.ConnectionUObject = ConnectionUObject;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.RemoteConsole.ExecuteAdminCommand
// (FUNC_Native, FUNC_Protected)
// Parameters:
// class UObject*                 ConnectionUObject              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void URemoteConsole::ExecuteAdminCommand(class UObject* ConnectionUObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.RemoteConsole.ExecuteAdminCommand"));

	struct
	{
		class UObject*                 ConnectionUObject;
	} params = {};

	params.ConnectionUObject = ConnectionUObject;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ReticleWidget.OnTightAimToggled
// (FUNC_Native, FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)
// Parameters:
// bool                           bToggle                        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UReticleWidget::OnTightAimToggled(bool bToggle)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ReticleWidget.OnTightAimToggled"));

	struct
	{
		bool                           bToggle;
	} params = {};

	params.bToggle = bToggle;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ReticleWidget.MenuToggled
// (FUNC_Native, FUNC_Public)
// Parameters:
// class UAdvancedUserWidget*     Widget                         (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bToggle                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UReticleWidget::MenuToggled(class UAdvancedUserWidget* Widget, bool bToggle)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ReticleWidget.MenuToggled"));

	struct
	{
		class UAdvancedUserWidget*     Widget;
		bool                           bToggle;
	} params = {};

	params.Widget = Widget;
	params.bToggle = bToggle;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.ShouldIncrementSavedInputVersion
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool USaveManager::ShouldIncrementSavedInputVersion()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.ShouldIncrementSavedInputVersion"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.SetVOIPVolume
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          Volume                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USaveManager::SetVOIPVolume(float Volume)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.SetVOIPVolume"));

	struct
	{
		float                          Volume;
	} params = {};

	params.Volume = Volume;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.SetVisualHitmarkersEnabled
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bNewVisualHitmarkerstEnabled   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USaveManager::SetVisualHitmarkersEnabled(bool bNewVisualHitmarkerstEnabled)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.SetVisualHitmarkersEnabled"));

	struct
	{
		bool                           bNewVisualHitmarkerstEnabled;
	} params = {};

	params.bNewVisualHitmarkerstEnabled = bNewVisualHitmarkerstEnabled;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.SetUninspectedNewItemsShortCodes
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// TArray<struct FString>         NewUninspectedNewItemsShortCodes (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)

void USaveManager::SetUninspectedNewItemsShortCodes(TArray<struct FString> NewUninspectedNewItemsShortCodes)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.SetUninspectedNewItemsShortCodes"));

	struct
	{
		TArray<struct FString>         NewUninspectedNewItemsShortCodes;
	} params = {};

	params.NewUninspectedNewItemsShortCodes = NewUninspectedNewItemsShortCodes;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.SetSubtitles
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bInSubtitles                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USaveManager::SetSubtitles(bool bInSubtitles)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.SetSubtitles"));

	struct
	{
		bool                           bInSubtitles;
	} params = {};

	params.bInSubtitles = bInSubtitles;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.SetSpawnInPersonalVehicle
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bNewSpawnInPV                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USaveManager::SetSpawnInPersonalVehicle(bool bNewSpawnInPV)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.SetSpawnInPersonalVehicle"));

	struct
	{
		bool                           bNewSpawnInPV;
	} params = {};

	params.bNewSpawnInPV = bNewSpawnInPV;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.SetSortParameter
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// ESortParameter                 SortParameter                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USaveManager::SetSortParameter(ESortParameter SortParameter)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.SetSortParameter"));

	struct
	{
		ESortParameter                 SortParameter;
	} params = {};

	params.SortParameter = SortParameter;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.SetSavedInputVersion
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// int                            NewSavedInputVersion           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USaveManager::SetSavedInputVersion(int NewSavedInputVersion)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.SetSavedInputVersion"));

	struct
	{
		int                            NewSavedInputVersion;
	} params = {};

	params.NewSavedInputVersion = NewSavedInputVersion;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.SetRegionFilter
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// struct FString                 RegionFilter                   (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USaveManager::SetRegionFilter(const struct FString& RegionFilter)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.SetRegionFilter"));

	struct
	{
		struct FString                 RegionFilter;
	} params = {};

	params.RegionFilter = RegionFilter;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.SetPVCameraSmoothing
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bInPVCameraSmoothing           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USaveManager::SetPVCameraSmoothing(bool bInPVCameraSmoothing)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.SetPVCameraSmoothing"));

	struct
	{
		bool                           bInPVCameraSmoothing;
	} params = {};

	params.bInPVCameraSmoothing = bInPVCameraSmoothing;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.SetPushToTalk
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bInPushToTalk                  (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USaveManager::SetPushToTalk(bool bInPushToTalk)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.SetPushToTalk"));

	struct
	{
		bool                           bInPushToTalk;
	} params = {};

	params.bInPushToTalk = bInPushToTalk;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.SetMuteListText
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// TArray<struct FString>         MutelistText                   (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)

void USaveManager::SetMuteListText(TArray<struct FString> MutelistText)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.SetMuteListText"));

	struct
	{
		TArray<struct FString>         MutelistText;
	} params = {};

	params.MutelistText = MutelistText;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.SetMusicVolume
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          Volume                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USaveManager::SetMusicVolume(float Volume)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.SetMusicVolume"));

	struct
	{
		float                          Volume;
	} params = {};

	params.Volume = Volume;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.SetMouseSmoothing
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bInEnableMouseSmoothing        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USaveManager::SetMouseSmoothing(bool bInEnableMouseSmoothing)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.SetMouseSmoothing"));

	struct
	{
		bool                           bInEnableMouseSmoothing;
	} params = {};

	params.bInEnableMouseSmoothing = bInEnableMouseSmoothing;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.SetMotionBlurEnabled
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bEnabled                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USaveManager::SetMotionBlurEnabled(bool bEnabled)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.SetMotionBlurEnabled"));

	struct
	{
		bool                           bEnabled;
	} params = {};

	params.bEnabled = bEnabled;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.SetMaturityFilter
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bInMaturityFilter              (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USaveManager::SetMaturityFilter(bool bInMaturityFilter)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.SetMaturityFilter"));

	struct
	{
		bool                           bInMaturityFilter;
	} params = {};

	params.bInMaturityFilter = bInMaturityFilter;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.SetMasterVolume
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          Volume                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USaveManager::SetMasterVolume(float Volume)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.SetMasterVolume"));

	struct
	{
		float                          Volume;
	} params = {};

	params.Volume = Volume;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.SetIsFirstRun
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bFirstRun                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USaveManager::SetIsFirstRun(bool bFirstRun)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.SetIsFirstRun"));

	struct
	{
		bool                           bFirstRun;
	} params = {};

	params.bFirstRun = bFirstRun;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.SetInterfaceVolume
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          Volume                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USaveManager::SetInterfaceVolume(float Volume)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.SetInterfaceVolume"));

	struct
	{
		float                          Volume;
	} params = {};

	params.Volume = Volume;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.SetInputVerticalScale
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          InputVerticalScale             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USaveManager::SetInputVerticalScale(float InputVerticalScale)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.SetInputVerticalScale"));

	struct
	{
		float                          InputVerticalScale;
	} params = {};

	params.InputVerticalScale = InputVerticalScale;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.SetInputLookInversion
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bInputLookInversion            (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USaveManager::SetInputLookInversion(bool bInputLookInversion)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.SetInputLookInversion"));

	struct
	{
		bool                           bInputLookInversion;
	} params = {};

	params.bInputLookInversion = bInputLookInversion;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.SetInputHorizontalScale
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          InputHorizontalScale           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USaveManager::SetInputHorizontalScale(float InputHorizontalScale)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.SetInputHorizontalScale"));

	struct
	{
		float                          InputHorizontalScale;
	} params = {};

	params.InputHorizontalScale = InputHorizontalScale;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.SetInputADSVerticalScale
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          InputADSVerticalScale          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USaveManager::SetInputADSVerticalScale(float InputADSVerticalScale)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.SetInputADSVerticalScale"));

	struct
	{
		float                          InputADSVerticalScale;
	} params = {};

	params.InputADSVerticalScale = InputADSVerticalScale;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.SetInputADSHorizontalScale
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          InputADSHorizontalScale        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USaveManager::SetInputADSHorizontalScale(float InputADSHorizontalScale)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.SetInputADSHorizontalScale"));

	struct
	{
		float                          InputADSHorizontalScale;
	} params = {};

	params.InputADSHorizontalScale = InputADSHorizontalScale;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.SetIncomingDamageIndicatorIs3D
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bNewIncomingDamageIndicatorIs3D (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USaveManager::SetIncomingDamageIndicatorIs3D(bool bNewIncomingDamageIndicatorIs3D)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.SetIncomingDamageIndicatorIs3D"));

	struct
	{
		bool                           bNewIncomingDamageIndicatorIs3D;
	} params = {};

	params.bNewIncomingDamageIndicatorIs3D = bNewIncomingDamageIndicatorIs3D;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.SetHoldToSpawnVehicle
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bHoldToSpawnVehicle            (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USaveManager::SetHoldToSpawnVehicle(bool bHoldToSpawnVehicle)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.SetHoldToSpawnVehicle"));

	struct
	{
		bool                           bHoldToSpawnVehicle;
	} params = {};

	params.bHoldToSpawnVehicle = bHoldToSpawnVehicle;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.SetHideVersionMismatch
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bHideVersionMismatchServers    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USaveManager::SetHideVersionMismatch(bool bHideVersionMismatchServers)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.SetHideVersionMismatch"));

	struct
	{
		bool                           bHideVersionMismatchServers;
	} params = {};

	params.bHideVersionMismatchServers = bHideVersionMismatchServers;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.SetHidePasswordProtectedServer
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bHidePasswordProtectedServer   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USaveManager::SetHidePasswordProtectedServer(bool bHidePasswordProtectedServer)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.SetHidePasswordProtectedServer"));

	struct
	{
		bool                           bHidePasswordProtectedServer;
	} params = {};

	params.bHidePasswordProtectedServer = bHidePasswordProtectedServer;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.SetHideOfficialServer
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bHideOfficialServers           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USaveManager::SetHideOfficialServer(bool bHideOfficialServers)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.SetHideOfficialServer"));

	struct
	{
		bool                           bHideOfficialServers;
	} params = {};

	params.bHideOfficialServers = bHideOfficialServers;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.SetHideModServer
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bHideModeServer                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USaveManager::SetHideModServer(bool bHideModeServer)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.SetHideModServer"));

	struct
	{
		bool                           bHideModeServer;
	} params = {};

	params.bHideModeServer = bHideModeServer;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.SetHideFullServer
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bHideFullServers               (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USaveManager::SetHideFullServer(bool bHideFullServers)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.SetHideFullServer"));

	struct
	{
		bool                           bHideFullServers;
	} params = {};

	params.bHideFullServers = bHideFullServers;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.SetHideEmptyServer
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bHideEmptyServers              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USaveManager::SetHideEmptyServer(bool bHideEmptyServers)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.SetHideEmptyServer"));

	struct
	{
		bool                           bHideEmptyServers;
	} params = {};

	params.bHideEmptyServers = bHideEmptyServers;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.SetHideCustomServer
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bHideCustomServers             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USaveManager::SetHideCustomServer(bool bHideCustomServers)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.SetHideCustomServer"));

	struct
	{
		bool                           bHideCustomServers;
	} params = {};

	params.bHideCustomServers = bHideCustomServers;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.SetHideAntiCheat
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bHideAntiCheat                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USaveManager::SetHideAntiCheat(bool bHideAntiCheat)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.SetHideAntiCheat"));

	struct
	{
		bool                           bHideAntiCheat;
	} params = {};

	params.bHideAntiCheat = bHideAntiCheat;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.SetGamma
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          Gamma                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USaveManager::SetGamma(float Gamma)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.SetGamma"));

	struct
	{
		float                          Gamma;
	} params = {};

	params.Gamma = Gamma;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.SetGameSettingsToDefaults
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)

void USaveManager::SetGameSettingsToDefaults()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.SetGameSettingsToDefaults"));

	struct
	{
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.SetFOVScaling
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bInEnableFOVScaling            (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USaveManager::SetFOVScaling(bool bInEnableFOVScaling)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.SetFOVScaling"));

	struct
	{
		bool                           bInEnableFOVScaling;
	} params = {};

	params.bInEnableFOVScaling = bInEnableFOVScaling;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.SetFOV
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          DesiredFOV                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USaveManager::SetFOV(float DesiredFOV)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.SetFOV"));

	struct
	{
		float                          DesiredFOV;
	} params = {};

	params.DesiredFOV = DesiredFOV;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.SetEffectsVolume
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          Volume                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USaveManager::SetEffectsVolume(float Volume)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.SetEffectsVolume"));

	struct
	{
		float                          Volume;
	} params = {};

	params.Volume = Volume;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.SetDLSS
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          DLSS                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USaveManager::SetDLSS(float DLSS)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.SetDLSS"));

	struct
	{
		float                          DLSS;
	} params = {};

	params.DLSS = DLSS;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.SetDescendingSort
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bDescending                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USaveManager::SetDescendingSort(bool bDescending)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.SetDescendingSort"));

	struct
	{
		bool                           bDescending;
	} params = {};

	params.bDescending = bDescending;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.SetDamageTextEnabled
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bNewDamageTextEnabled          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USaveManager::SetDamageTextEnabled(bool bNewDamageTextEnabled)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.SetDamageTextEnabled"));

	struct
	{
		bool                           bNewDamageTextEnabled;
	} params = {};

	params.bNewDamageTextEnabled = bNewDamageTextEnabled;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.SetCultureIndex
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// int                            CultureIndex                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USaveManager::SetCultureIndex(int CultureIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.SetCultureIndex"));

	struct
	{
		int                            CultureIndex;
	} params = {};

	params.CultureIndex = CultureIndex;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.SetCameraMotionEffects
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bInCameraMotionEffects         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USaveManager::SetCameraMotionEffects(bool bInCameraMotionEffects)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.SetCameraMotionEffects"));

	struct
	{
		bool                           bInCameraMotionEffects;
	} params = {};

	params.bInCameraMotionEffects = bInCameraMotionEffects;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.SetCameraAnimationToggleState
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bToggle                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USaveManager::SetCameraAnimationToggleState(bool bToggle)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.SetCameraAnimationToggleState"));

	struct
	{
		bool                           bToggle;
	} params = {};

	params.bToggle = bToggle;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.SetBloom
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bInEnableBloom                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USaveManager::SetBloom(bool bInEnableBloom)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.SetBloom"));

	struct
	{
		bool                           bInEnableBloom;
	} params = {};

	params.bInEnableBloom = bInEnableBloom;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.SetAnnouncerVolume
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          Volume                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USaveManager::SetAnnouncerVolume(float Volume)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.SetAnnouncerVolume"));

	struct
	{
		float                          Volume;
	} params = {};

	params.Volume = Volume;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.SetAmbientVolume
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          Volume                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USaveManager::SetAmbientVolume(float Volume)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.SetAmbientVolume"));

	struct
	{
		float                          Volume;
	} params = {};

	params.Volume = Volume;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.SetADSMultiplier
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          ADSMultiplier                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USaveManager::SetADSMultiplier(float ADSMultiplier)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.SetADSMultiplier"));

	struct
	{
		float                          ADSMultiplier;
	} params = {};

	params.ADSMultiplier = ADSMultiplier;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.RemoveUninspectedNewItem
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// struct FString                 ItemShortCode                  (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USaveManager::RemoveUninspectedNewItem(const struct FString& ItemShortCode, class UObject* WorldContextObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.RemoveUninspectedNewItem"));

	struct
	{
		struct FString                 ItemShortCode;
		class UObject*                 WorldContextObject;
	} params = {};

	params.ItemShortCode = ItemShortCode;
	params.WorldContextObject = WorldContextObject;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.ReadAllUninspectedNewItemsShortCodes
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)

void USaveManager::ReadAllUninspectedNewItemsShortCodes()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.ReadAllUninspectedNewItemsShortCodes"));

	struct
	{
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.IsItemUninspected
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// struct FString                 ItemShortCode                  (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool USaveManager::IsItemUninspected(const struct FString& ItemShortCode)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.IsItemUninspected"));

	struct
	{
		struct FString                 ItemShortCode;
		bool                           ReturnValue;
	} params = {};

	params.ItemShortCode = ItemShortCode;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.IsFirstRun
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool USaveManager::IsFirstRun()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.IsFirstRun"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetVOIPVolume
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float USaveManager::GetVOIPVolume()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetVOIPVolume"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetVisualHitmarkersEnabled
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool USaveManager::GetVisualHitmarkersEnabled()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetVisualHitmarkersEnabled"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetUninspectedNewItemsShortCodes
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// TArray<struct FString>         OutArray                       (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_NativeAccessSpecifierPublic)

void USaveManager::GetUninspectedNewItemsShortCodes(TArray<struct FString>* OutArray)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetUninspectedNewItemsShortCodes"));

	struct
	{
		TArray<struct FString>         OutArray;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	if (OutArray != nullptr)
		*OutArray = params.OutArray;
}


// Function ProjectX.SaveManager.GetSubtitles
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool USaveManager::GetSubtitles()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetSubtitles"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetSteamToNakamaIDMap
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// TMap<struct FString, struct FString> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_NativeAccessSpecifierPublic)

TMap<struct FString, struct FString> USaveManager::GetSteamToNakamaIDMap()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetSteamToNakamaIDMap"));

	struct
	{
		TMap<struct FString, struct FString> ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetSpawnInPersonalVehicle
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool USaveManager::GetSpawnInPersonalVehicle()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetSpawnInPersonalVehicle"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetSortParameter
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// ESortParameter                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

ESortParameter USaveManager::GetSortParameter()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetSortParameter"));

	struct
	{
		ESortParameter                 ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetSavedInputVersion
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int USaveManager::GetSavedInputVersion()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetSavedInputVersion"));

	struct
	{
		int                            ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetSaveData
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UProjectXSaveGame*       ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UProjectXSaveGame* USaveManager::GetSaveData()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetSaveData"));

	struct
	{
		class UProjectXSaveGame*       ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetRegionFilter
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// struct FString                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FString USaveManager::GetRegionFilter()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetRegionFilter"));

	struct
	{
		struct FString                 ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetPVCameraSmoothing
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool USaveManager::GetPVCameraSmoothing()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetPVCameraSmoothing"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetPushToTalk
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool USaveManager::GetPushToTalk()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetPushToTalk"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetProjectXGameUserSettings
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class USaveManager*            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class USaveManager* USaveManager::GetProjectXGameUserSettings()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetProjectXGameUserSettings"));

	struct
	{
		class USaveManager*            ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetNakamaIDFromSteamID
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// struct FString                 SteamID                        (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FString                 FoundNakamaID                  (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool USaveManager::GetNakamaIDFromSteamID(const struct FString& SteamID, struct FString* FoundNakamaID)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetNakamaIDFromSteamID"));

	struct
	{
		struct FString                 SteamID;
		struct FString                 FoundNakamaID;
		bool                           ReturnValue;
	} params = {};

	params.SteamID = SteamID;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	if (FoundNakamaID != nullptr)
		*FoundNakamaID = params.FoundNakamaID;

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetMuteListText
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// TArray<struct FString>         OutArray                       (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_NativeAccessSpecifierPublic)

void USaveManager::GetMuteListText(TArray<struct FString>* OutArray)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetMuteListText"));

	struct
	{
		TArray<struct FString>         OutArray;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	if (OutArray != nullptr)
		*OutArray = params.OutArray;
}


// Function ProjectX.SaveManager.GetMusicVolume
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float USaveManager::GetMusicVolume()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetMusicVolume"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetMouseSmoothing
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool USaveManager::GetMouseSmoothing()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetMouseSmoothing"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetMotionBlurEnabled
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool USaveManager::GetMotionBlurEnabled()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetMotionBlurEnabled"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetMinMaxInputScale
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// struct FVector2D               ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FVector2D USaveManager::GetMinMaxInputScale()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetMinMaxInputScale"));

	struct
	{
		struct FVector2D               ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetMinMaxGamma
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// struct FVector2D               ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FVector2D USaveManager::GetMinMaxGamma()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetMinMaxGamma"));

	struct
	{
		struct FVector2D               ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetMinMaxFOV
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// struct FVector2D               ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FVector2D USaveManager::GetMinMaxFOV()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetMinMaxFOV"));

	struct
	{
		struct FVector2D               ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetMaturityFilter
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool USaveManager::GetMaturityFilter()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetMaturityFilter"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetMasterVolume
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float USaveManager::GetMasterVolume()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetMasterVolume"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetInterfaceVolume
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float USaveManager::GetInterfaceVolume()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetInterfaceVolume"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetInputVerticalScale
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float USaveManager::GetInputVerticalScale()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetInputVerticalScale"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetInputLookInversion
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool USaveManager::GetInputLookInversion()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetInputLookInversion"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetInputHorizontalScale
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float USaveManager::GetInputHorizontalScale()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetInputHorizontalScale"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetInputADSVerticalScale
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float USaveManager::GetInputADSVerticalScale()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetInputADSVerticalScale"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetInputADSHorizontalScale
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float USaveManager::GetInputADSHorizontalScale()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetInputADSHorizontalScale"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetIncomingDamageIndicatorIs3D
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool USaveManager::GetIncomingDamageIndicatorIs3D()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetIncomingDamageIndicatorIs3D"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetHoldToSpawnVehicle
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool USaveManager::GetHoldToSpawnVehicle()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetHoldToSpawnVehicle"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetHideVersionMismatch
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool USaveManager::GetHideVersionMismatch()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetHideVersionMismatch"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetHidePasswordProtectedServer
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool USaveManager::GetHidePasswordProtectedServer()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetHidePasswordProtectedServer"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetHideOfficialServer
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool USaveManager::GetHideOfficialServer()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetHideOfficialServer"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetHideModeServer
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool USaveManager::GetHideModeServer()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetHideModeServer"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetHideFullServer
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool USaveManager::GetHideFullServer()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetHideFullServer"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetHideEmptyServer
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool USaveManager::GetHideEmptyServer()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetHideEmptyServer"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetHideCustomServer
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool USaveManager::GetHideCustomServer()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetHideCustomServer"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetHideAntiCheat
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool USaveManager::GetHideAntiCheat()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetHideAntiCheat"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetGamma
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float USaveManager::GetGamma()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetGamma"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetFOVScaling
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool USaveManager::GetFOVScaling()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetFOVScaling"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetFOV
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float USaveManager::GetFOV()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetFOV"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetEffectsVolume
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float USaveManager::GetEffectsVolume()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetEffectsVolume"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetDLSS
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float USaveManager::GetDLSS()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetDLSS"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetDescendingSort
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool USaveManager::GetDescendingSort()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetDescendingSort"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetDefaultInputScale
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// struct FVector2D               ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FVector2D USaveManager::GetDefaultInputScale()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetDefaultInputScale"));

	struct
	{
		struct FVector2D               ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetDefaultGamma
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float USaveManager::GetDefaultGamma()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetDefaultGamma"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetDamageTextEnabled
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool USaveManager::GetDamageTextEnabled()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetDamageTextEnabled"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetCultureIndex
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int USaveManager::GetCultureIndex()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetCultureIndex"));

	struct
	{
		int                            ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetCameraMotionEffects
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool USaveManager::GetCameraMotionEffects()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetCameraMotionEffects"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetCameraAnimationToggleState
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool USaveManager::GetCameraAnimationToggleState()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetCameraAnimationToggleState"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetBloom
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool USaveManager::GetBloom()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetBloom"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetAnnouncerVolume
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float USaveManager::GetAnnouncerVolume()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetAnnouncerVolume"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetAmbientVolume
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float USaveManager::GetAmbientVolume()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetAmbientVolume"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.GetADSMultiplier
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float USaveManager::GetADSMultiplier()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.GetADSMultiplier"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SaveManager.ApplyGammaSetting
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USaveManager::ApplyGammaSetting(class UObject* WorldContextObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.ApplyGammaSetting"));

	struct
	{
		class UObject*                 WorldContextObject;
	} params = {};

	params.WorldContextObject = WorldContextObject;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.ApplyGameSettings
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bCheckForCommandLineOverrides  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bCalledFromSettingsMenu        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USaveManager::ApplyGameSettings(bool bCheckForCommandLineOverrides, class UObject* WorldContextObject, bool bCalledFromSettingsMenu)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.ApplyGameSettings"));

	struct
	{
		bool                           bCheckForCommandLineOverrides;
		class UObject*                 WorldContextObject;
		bool                           bCalledFromSettingsMenu;
	} params = {};

	params.bCheckForCommandLineOverrides = bCheckForCommandLineOverrides;
	params.WorldContextObject = WorldContextObject;
	params.bCalledFromSettingsMenu = bCalledFromSettingsMenu;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.ApplyDLSS
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USaveManager::ApplyDLSS(class UObject* WorldContextObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.ApplyDLSS"));

	struct
	{
		class UObject*                 WorldContextObject;
	} params = {};

	params.WorldContextObject = WorldContextObject;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.ApplyCultureSetting
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bReload                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USaveManager::ApplyCultureSetting(class UObject* WorldContextObject, bool bReload)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.ApplyCultureSetting"));

	struct
	{
		class UObject*                 WorldContextObject;
		bool                           bReload;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.bReload = bReload;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SaveManager.AddNewSteamToNakamaID
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// struct FString                 SteamID                        (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FString                 NakamaID                       (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USaveManager::AddNewSteamToNakamaID(const struct FString& SteamID, const struct FString& NakamaID)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SaveManager.AddNewSteamToNakamaID"));

	struct
	{
		struct FString                 SteamID;
		struct FString                 NakamaID;
	} params = {};

	params.SteamID = SteamID;
	params.NakamaID = NakamaID;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ScoreboardWidget.UpdateScoreboard
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bSort                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bCleanUp                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UScoreboardWidget::UpdateScoreboard(bool bSort, bool bCleanUp)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ScoreboardWidget.UpdateScoreboard"));

	struct
	{
		bool                           bSort;
		bool                           bCleanUp;
	} params = {};

	params.bSort = bSort;
	params.bCleanUp = bCleanUp;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ScoreboardWidget.UpdatePlayerStateLists
// (FUNC_Native, FUNC_Public)

void UScoreboardWidget::UpdatePlayerStateLists()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ScoreboardWidget.UpdatePlayerStateLists"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ScoreboardWidget.SortScoreboardLists
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bForce                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UScoreboardWidget::SortScoreboardLists(bool bForce)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ScoreboardWidget.SortScoreboardLists"));

	struct
	{
		bool                           bForce;
	} params = {};

	params.bForce = bForce;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ScoreboardWidget.PlayerStateRemoved
// (FUNC_Native, FUNC_Protected)
// Parameters:
// class APlayerState*            PlayerState                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UScoreboardWidget::PlayerStateRemoved(class APlayerState* PlayerState)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ScoreboardWidget.PlayerStateRemoved"));

	struct
	{
		class APlayerState*            PlayerState;
	} params = {};

	params.PlayerState = PlayerState;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ScoreboardWidget.PlayerStateAdded
// (FUNC_Native, FUNC_Protected)
// Parameters:
// class APlayerState*            PlayerState                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UScoreboardWidget::PlayerStateAdded(class APlayerState* PlayerState)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ScoreboardWidget.PlayerStateAdded"));

	struct
	{
		class APlayerState*            PlayerState;
	} params = {};

	params.PlayerState = PlayerState;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ScoreboardWidget.GetTeamEntryContainer
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)
// Parameters:
// unsigned char                  Team                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UAdvancedVerticalBox*    ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UAdvancedVerticalBox* UScoreboardWidget::GetTeamEntryContainer(unsigned char Team)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ScoreboardWidget.GetTeamEntryContainer"));

	struct
	{
		unsigned char                  Team;
		class UAdvancedVerticalBox*    ReturnValue;
	} params = {};

	params.Team = Team;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ScoreboardWidget.AddScoreboardEntry
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)
// Parameters:
// class AProjectXPlayerState*    PlayerState                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UUserWidget*             ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UUserWidget* UScoreboardWidget::AddScoreboardEntry(class AProjectXPlayerState* PlayerState)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ScoreboardWidget.AddScoreboardEntry"));

	struct
	{
		class AProjectXPlayerState*    PlayerState;
		class UUserWidget*             ReturnValue;
	} params = {};

	params.PlayerState = PlayerState;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ShieldGenerator.OnShieldPartTakeDamage
// (FUNC_Native, FUNC_Protected, FUNC_HasOutParms)
// Parameters:
// class ADestroyableObjective*   Objective                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          Damage                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FDamageEvent            DamageEvent                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// class AController*             EventInstigator                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class APlayerState*            InstigatorPlayerState          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AShieldGenerator::OnShieldPartTakeDamage(class ADestroyableObjective* Objective, float Damage, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser, class APlayerState* InstigatorPlayerState)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ShieldGenerator.OnShieldPartTakeDamage"));

	struct
	{
		class ADestroyableObjective*   Objective;
		float                          Damage;
		struct FDamageEvent            DamageEvent;
		class AController*             EventInstigator;
		class AActor*                  DamageCauser;
		class APlayerState*            InstigatorPlayerState;
	} params = {};

	params.Objective = Objective;
	params.Damage = Damage;
	params.DamageEvent = DamageEvent;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;
	params.InstigatorPlayerState = InstigatorPlayerState;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ShieldGenerator.OnShieldPartDestroyed
// (FUNC_Native, FUNC_Protected, FUNC_HasOutParms)
// Parameters:
// class ADestroyableObjective*   Objective                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          Damage                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FDamageEvent            DamageEvent                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// class AController*             EventInstigator                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class APlayerState*            InstigatorPlayerState          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AShieldGenerator::OnShieldPartDestroyed(class ADestroyableObjective* Objective, float Damage, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser, class APlayerState* InstigatorPlayerState)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ShieldGenerator.OnShieldPartDestroyed"));

	struct
	{
		class ADestroyableObjective*   Objective;
		float                          Damage;
		struct FDamageEvent            DamageEvent;
		class AController*             EventInstigator;
		class AActor*                  DamageCauser;
		class APlayerState*            InstigatorPlayerState;
	} params = {};

	params.Objective = Objective;
	params.Damage = Damage;
	params.DamageEvent = DamageEvent;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;
	params.InstigatorPlayerState = InstigatorPlayerState;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ShieldGenerator.OnShieldGeneratorInitialized
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)

void AShieldGenerator::OnShieldGeneratorInitialized()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ShieldGenerator.OnShieldGeneratorInitialized"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ShieldGenerator.OnShieldGeneratorHealthChanged
// (FUNC_Native, FUNC_Protected)
// Parameters:
// float                          Delta                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AShieldGenerator::OnShieldGeneratorHealthChanged(float Delta)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ShieldGenerator.OnShieldGeneratorHealthChanged"));

	struct
	{
		float                          Delta;
	} params = {};

	params.Delta = Delta;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ShieldGenerator.IsDead
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AShieldGenerator::IsDead()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ShieldGenerator.IsDead"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ShieldGenerator.GetTurnsIntoCapturePoint
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AShieldGenerator::GetTurnsIntoCapturePoint()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ShieldGenerator.GetTurnsIntoCapturePoint"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ShieldGenerator.GetShieldTeam
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int AShieldGenerator::GetShieldTeam()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ShieldGenerator.GetShieldTeam"));

	struct
	{
		int                            ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ShieldGenerator.CheckForInitialization
// (FUNC_Native, FUNC_Protected)

void AShieldGenerator::CheckForInitialization()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ShieldGenerator.CheckForInitialization"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SkeletalMeshGhostActor.K2_SetupSkeletalMeshGhost
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*  ReferenceMesh                  (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ASkeletalMeshGhostActor::K2_SetupSkeletalMeshGhost(class USkeletalMeshComponent* ReferenceMesh)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SkeletalMeshGhostActor.K2_SetupSkeletalMeshGhost"));

	struct
	{
		class USkeletalMeshComponent*  ReferenceMesh;
	} params = {};

	params.ReferenceMesh = ReferenceMesh;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SoftBoundaryVolume.ToggleVolume
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bToggle                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ASoftBoundaryVolume::ToggleVolume(bool bToggle)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SoftBoundaryVolume.ToggleVolume"));

	struct
	{
		bool                           bToggle;
	} params = {};

	params.bToggle = bToggle;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SoftBoundaryVolume.OnRep_TeamOwner
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void ASoftBoundaryVolume::OnRep_TeamOwner()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SoftBoundaryVolume.OnRep_TeamOwner"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SoftBoundaryVolume.OnRep_IsBoundaryActive
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void ASoftBoundaryVolume::OnRep_IsBoundaryActive()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SoftBoundaryVolume.OnRep_IsBoundaryActive"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SoftBoundaryVolume.OnActivationToggledForActor
// (FUNC_Final, FUNC_Native, FUNC_Protected)
// Parameters:
// class AActor*                  TargetActor                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bIsActivated                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ASoftBoundaryVolume::OnActivationToggledForActor(class AActor* TargetActor, bool bIsActivated)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SoftBoundaryVolume.OnActivationToggledForActor"));

	struct
	{
		class AActor*                  TargetActor;
		bool                           bIsActivated;
	} params = {};

	params.TargetActor = TargetActor;
	params.bIsActivated = bIsActivated;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SoftBoundaryVolume.GetVolumeActiveState
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool ASoftBoundaryVolume::GetVolumeActiveState()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SoftBoundaryVolume.GetVolumeActiveState"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SoftBoundaryVolume.GetSoftBoundaryRadius
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float ASoftBoundaryVolume::GetSoftBoundaryRadius()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SoftBoundaryVolume.GetSoftBoundaryRadius"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SpawnedEventActor.SpawnActor
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void ASpawnedEventActor::SpawnActor()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SpawnedEventActor.SpawnActor"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SpawnedEventActor.OnSpawnStarted
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)
// Parameters:
// float                          SpawnStartTime                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ASpawnedEventActor::OnSpawnStarted(float SpawnStartTime)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SpawnedEventActor.OnSpawnStarted"));

	struct
	{
		float                          SpawnStartTime;
	} params = {};

	params.SpawnStartTime = SpawnStartTime;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SpawnedEventActor.OnSpawnedActorDestroyed
// (FUNC_Final, FUNC_Native, FUNC_Protected)
// Parameters:
// class AActor*                  DestroyedActor                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ASpawnedEventActor::OnSpawnedActorDestroyed(class AActor* DestroyedActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SpawnedEventActor.OnSpawnedActorDestroyed"));

	struct
	{
		class AActor*                  DestroyedActor;
	} params = {};

	params.DestroyedActor = DestroyedActor;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SpawnedEventActor.OnRep_SpawnTime
// (FUNC_Final, FUNC_Native, FUNC_Protected)

void ASpawnedEventActor::OnRep_SpawnTime()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SpawnedEventActor.OnRep_SpawnTime"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SpawnedEventActor.OnDriverChanged
// (FUNC_Final, FUNC_Native, FUNC_Protected)
// Parameters:
// class AProjectXVehicle*        Vehicle                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AProjectXCharacter*      OldDriver                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ASpawnedEventActor::OnDriverChanged(class AProjectXVehicle* Vehicle, class AProjectXCharacter* OldDriver)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SpawnedEventActor.OnDriverChanged"));

	struct
	{
		class AProjectXVehicle*        Vehicle;
		class AProjectXCharacter*      OldDriver;
	} params = {};

	params.Vehicle = Vehicle;
	params.OldDriver = OldDriver;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SpawnedEventActor.GetSpawnDelayDuration
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float ASpawnedEventActor::GetSpawnDelayDuration()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SpawnedEventActor.GetSpawnDelayDuration"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SpawnInterface.StopSpawning
// (FUNC_Native, FUNC_Event, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintEvent)

void USpawnInterface::StopSpawning()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SpawnInterface.StopSpawning"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SpawnInterface.K2_BeginSpawning
// (FUNC_Native, FUNC_Event, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintEvent)
// Parameters:
// TArray<class UClass* /*AActor*/> SpawnOverrideList              (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_UObjectWrapper, CPF_NativeAccessSpecifierPublic)

void USpawnInterface::K2_BeginSpawning(TArray<class UClass* /*AActor*/> SpawnOverrideList)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SpawnInterface.K2_BeginSpawning"));

	struct
	{
		TArray<class UClass* /*AActor*/> SpawnOverrideList;
	} params = {};

	params.SpawnOverrideList = SpawnOverrideList;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SpawnInterface.GetSpawnChildren
// (FUNC_Native, FUNC_Event, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintEvent)
// Parameters:
// TArray<TScriptInterface<class USpawnInterface>> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_UObjectWrapper, CPF_NativeAccessSpecifierPublic)

TArray<TScriptInterface<class USpawnInterface>> USpawnInterface::GetSpawnChildren()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SpawnInterface.GetSpawnChildren"));

	struct
	{
		TArray<TScriptInterface<class USpawnInterface>> ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SpawnInterface.BeginSpawning
// (FUNC_Native, FUNC_Event, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintEvent)

void USpawnInterface::BeginSpawning()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SpawnInterface.BeginSpawning"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SpawnTargetInterface.GetSpawnScoreForInstigator
// (FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AActor*                  QueryInstigator                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FVector                 TargetLocation                 (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bUseDistanceToTargetLocation   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float USpawnTargetInterface::GetSpawnScoreForInstigator(class AActor* QueryInstigator, bool bUseDistanceToTargetLocation, struct FVector* TargetLocation)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SpawnTargetInterface.GetSpawnScoreForInstigator"));

	struct
	{
		class AActor*                  QueryInstigator;
		struct FVector                 TargetLocation;
		bool                           bUseDistanceToTargetLocation;
		float                          ReturnValue;
	} params = {};

	params.QueryInstigator = QueryInstigator;
	params.bUseDistanceToTargetLocation = bUseDistanceToTargetLocation;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	if (TargetLocation != nullptr)
		*TargetLocation = params.TargetLocation;

	return params.ReturnValue;
}


// Function ProjectX.SpawnTargetInterface.GetSpawnLocation
// (FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AProjectXPlayerState*    Instigator                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FTransform              Transform                      (CPF_Parm, CPF_OutParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool USpawnTargetInterface::GetSpawnLocation(class AProjectXPlayerState* Instigator, struct FTransform* Transform)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SpawnTargetInterface.GetSpawnLocation"));

	struct
	{
		class AProjectXPlayerState*    Instigator;
		struct FTransform              Transform;
		bool                           ReturnValue;
	} params = {};

	params.Instigator = Instigator;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	if (Transform != nullptr)
		*Transform = params.Transform;

	return params.ReturnValue;
}


// Function ProjectX.SpawnTargetInterface.GetCanSpawnOnCombatTarget
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool USpawnTargetInterface::GetCanSpawnOnCombatTarget()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SpawnTargetInterface.GetCanSpawnOnCombatTarget"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SpawnTargetInterface.CanSpawnPlayer
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AProjectXPlayerState*    Instigator                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool USpawnTargetInterface::CanSpawnPlayer(class AProjectXPlayerState* Instigator)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SpawnTargetInterface.CanSpawnPlayer"));

	struct
	{
		class AProjectXPlayerState*    Instigator;
		bool                           ReturnValue;
	} params = {};

	params.Instigator = Instigator;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SpottableInterface.UnBindToSpottedEvent
// (FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// struct FScriptDelegate         Event                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

void USpottableInterface::UnBindToSpottedEvent(const struct FScriptDelegate& Event)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SpottableInterface.UnBindToSpottedEvent"));

	struct
	{
		struct FScriptDelegate         Event;
	} params = {};

	params.Event = Event;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SpottableInterface.UnBindToSpottedEndEvent
// (FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// struct FScriptDelegate         Event                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

void USpottableInterface::UnBindToSpottedEndEvent(const struct FScriptDelegate& Event)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SpottableInterface.UnBindToSpottedEndEvent"));

	struct
	{
		struct FScriptDelegate         Event;
	} params = {};

	params.Event = Event;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SpottableInterface.GetSpottingTraceOffset
// (FUNC_Native, FUNC_Public, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FVector                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FVector USpottableInterface::GetSpottingTraceOffset()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SpottableInterface.GetSpottingTraceOffset"));

	struct
	{
		struct FVector                 ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SpottableInterface.GetSpottedStopEvent
// (FUNC_Native, FUNC_Public)
// Parameters:
// struct FMulticastScriptDelegate ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_NativeAccessSpecifierPublic)

struct FMulticastScriptDelegate USpottableInterface::GetSpottedStopEvent()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SpottableInterface.GetSpottedStopEvent"));

	struct
	{
		struct FMulticastScriptDelegate ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SpottableInterface.GetSpottedStartEvent
// (FUNC_Native, FUNC_Public)
// Parameters:
// struct FMulticastScriptDelegate ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_NativeAccessSpecifierPublic)

struct FMulticastScriptDelegate USpottableInterface::GetSpottedStartEvent()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SpottableInterface.GetSpottedStartEvent"));

	struct
	{
		struct FMulticastScriptDelegate ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SpottableInterface.ClearAllSpottedEvents
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void USpottableInterface::ClearAllSpottedEvents()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SpottableInterface.ClearAllSpottedEvents"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SpottableInterface.ClearAllSpottedEndEvents
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void USpottableInterface::ClearAllSpottedEndEvents()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SpottableInterface.ClearAllSpottedEndEvents"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SpottableInterface.CanBeSpotted
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AActor*                  SpotInstigator                 (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// ESpotType                      SpotType                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// ESpotReply                     ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

ESpotReply USpottableInterface::CanBeSpotted(class AActor* SpotInstigator, ESpotType SpotType)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SpottableInterface.CanBeSpotted"));

	struct
	{
		class AActor*                  SpotInstigator;
		ESpotType                      SpotType;
		ESpotReply                     ReturnValue;
	} params = {};

	params.SpotInstigator = SpotInstigator;
	params.SpotType = SpotType;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SpottableInterface.BroadcastSpottedEvent
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void USpottableInterface::BroadcastSpottedEvent()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SpottableInterface.BroadcastSpottedEvent"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SpottableInterface.BroadcastSpottedEndEvent
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void USpottableInterface::BroadcastSpottedEndEvent()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SpottableInterface.BroadcastSpottedEndEvent"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SpottableInterface.BindToSpottedEvent
// (FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// struct FScriptDelegate         Event                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

void USpottableInterface::BindToSpottedEvent(const struct FScriptDelegate& Event)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SpottableInterface.BindToSpottedEvent"));

	struct
	{
		struct FScriptDelegate         Event;
	} params = {};

	params.Event = Event;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SpottableInterface.BindToSpottedEndEvent
// (FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// struct FScriptDelegate         Event                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

void USpottableInterface::BindToSpottedEndEvent(const struct FScriptDelegate& Event)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SpottableInterface.BindToSpottedEndEvent"));

	struct
	{
		struct FScriptDelegate         Event;
	} params = {};

	params.Event = Event;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SpottingComponent.UpdateUseDotProductCheck
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bNewCheckDotProduct            (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USpottingComponent::UpdateUseDotProductCheck(bool bNewCheckDotProduct)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SpottingComponent.UpdateUseDotProductCheck"));

	struct
	{
		bool                           bNewCheckDotProduct;
	} params = {};

	params.bNewCheckDotProduct = bNewCheckDotProduct;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SpottingComponent.UpdateSpottingRange
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          NewRange                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USpottingComponent::UpdateSpottingRange(float NewRange)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SpottingComponent.UpdateSpottingRange"));

	struct
	{
		float                          NewRange;
	} params = {};

	params.NewRange = NewRange;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SpottingComponent.SetOwningCharacter
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class ACharacter*              InOwningCharacter              (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USpottingComponent::SetOwningCharacter(class ACharacter* InOwningCharacter)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SpottingComponent.SetOwningCharacter"));

	struct
	{
		class ACharacter*              InOwningCharacter;
	} params = {};

	params.InOwningCharacter = InOwningCharacter;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SpottingComponent.SetDotMultiplier
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          NewMultipler                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USpottingComponent::SetDotMultiplier(float NewMultipler)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SpottingComponent.SetDotMultiplier"));

	struct
	{
		float                          NewMultipler;
	} params = {};

	params.NewMultipler = NewMultipler;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SpottingComponent.Server_SpotTarget
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetServer, FUNC_NetValidate)
// Parameters:
// class AActor*                  SpottedActor                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USpottingComponent::Server_SpotTarget(class AActor* SpottedActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SpottingComponent.Server_SpotTarget"));

	struct
	{
		class AActor*                  SpottedActor;
	} params = {};

	params.SpottedActor = SpottedActor;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SpottingComponent.PerformRadialScan
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          ScanRange                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bIgnoreObstacles               (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bRevealStealthTargets          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USpottingComponent::PerformRadialScan(float ScanRange, bool bIgnoreObstacles, bool bRevealStealthTargets)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SpottingComponent.PerformRadialScan"));

	struct
	{
		float                          ScanRange;
		bool                           bIgnoreObstacles;
		bool                           bRevealStealthTargets;
	} params = {};

	params.ScanRange = ScanRange;
	params.bIgnoreObstacles = bIgnoreObstacles;
	params.bRevealStealthTargets = bRevealStealthTargets;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SpottingComponent.GetSpottingViewPoint
// (FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_BlueprintEvent, FUNC_Const)
// Parameters:
// struct FVector                 OutLocation                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FRotator                OutRotation                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

void USpottingComponent::GetSpottingViewPoint(struct FVector* OutLocation, struct FRotator* OutRotation)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SpottingComponent.GetSpottingViewPoint"));

	struct
	{
		struct FVector                 OutLocation;
		struct FRotator                OutRotation;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	if (OutLocation != nullptr)
		*OutLocation = params.OutLocation;
	if (OutRotation != nullptr)
		*OutRotation = params.OutRotation;
}


// Function ProjectX.SpottingComponent.GetOwningController
// (FUNC_Final, FUNC_Native, FUNC_Protected, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AController*             ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class AController* USpottingComponent::GetOwningController()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SpottingComponent.GetOwningController"));

	struct
	{
		class AController*             ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SpottingComponent.GetOwningCharacter
// (FUNC_Native, FUNC_Protected, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class ACharacter*              ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class ACharacter* USpottingComponent::GetOwningCharacter()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SpottingComponent.GetOwningCharacter"));

	struct
	{
		class ACharacter*              ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SquadComponent.PlayerJoinGame
// (FUNC_Native, FUNC_Protected)
// Parameters:
// class AProjectXPlayerState*    Player                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FString                 JoinTarget                     (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USquadComponent::PlayerJoinGame(class AProjectXPlayerState* Player, const struct FString& JoinTarget)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SquadComponent.PlayerJoinGame"));

	struct
	{
		class AProjectXPlayerState*    Player;
		struct FString                 JoinTarget;
	} params = {};

	params.Player = Player;
	params.JoinTarget = JoinTarget;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SquadComponent.OnRep_SquadList
// (FUNC_Native, FUNC_Protected)

void USquadComponent::OnRep_SquadList()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SquadComponent.OnRep_SquadList"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SquadComponent.OnPlayerStateRemoved
// (FUNC_Native, FUNC_Protected)
// Parameters:
// class APlayerState*            PlayerState                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USquadComponent::OnPlayerStateRemoved(class APlayerState* PlayerState)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SquadComponent.OnPlayerStateRemoved"));

	struct
	{
		class APlayerState*            PlayerState;
	} params = {};

	params.PlayerState = PlayerState;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SquadComponent.K2_GetSquadByPlayer
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class AProjectXPlayerState*    Player                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FSquadInstance          Squad                          (CPF_Parm, CPF_OutParm, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool USquadComponent::K2_GetSquadByPlayer(class AProjectXPlayerState* Player, struct FSquadInstance* Squad)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SquadComponent.K2_GetSquadByPlayer"));

	struct
	{
		class AProjectXPlayerState*    Player;
		struct FSquadInstance          Squad;
		bool                           ReturnValue;
	} params = {};

	params.Player = Player;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	if (Squad != nullptr)
		*Squad = params.Squad;

	return params.ReturnValue;
}


// Function ProjectX.SquadComponent.K2_GetSquadByID
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// int                            SquadID                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FSquadInstance          Squad                          (CPF_Parm, CPF_OutParm, CPF_NativeAccessSpecifierPublic)

void USquadComponent::K2_GetSquadByID(int SquadID, struct FSquadInstance* Squad)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SquadComponent.K2_GetSquadByID"));

	struct
	{
		int                            SquadID;
		struct FSquadInstance          Squad;
	} params = {};

	params.SquadID = SquadID;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	if (Squad != nullptr)
		*Squad = params.Squad;
}


// Function ProjectX.SquadComponent.K2_CanJoinSquad
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class AProjectXPlayerState*    Player                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            SquadID                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool USquadComponent::K2_CanJoinSquad(class AProjectXPlayerState* Player, int SquadID)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SquadComponent.K2_CanJoinSquad"));

	struct
	{
		class AProjectXPlayerState*    Player;
		int                            SquadID;
		bool                           ReturnValue;
	} params = {};

	params.Player = Player;
	params.SquadID = SquadID;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SquadComponent.JoinSquad
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class AProjectXPlayerState*    Player                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            SquadID                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool USquadComponent::JoinSquad(class AProjectXPlayerState* Player, int SquadID)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SquadComponent.JoinSquad"));

	struct
	{
		class AProjectXPlayerState*    Player;
		int                            SquadID;
		bool                           ReturnValue;
	} params = {};

	params.Player = Player;
	params.SquadID = SquadID;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SquadComponent.IsInSameSquad
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class AProjectXPlayerState*    PlayerStateA                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AProjectXPlayerState*    PlayerStateB                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool USquadComponent::IsInSameSquad(class AProjectXPlayerState* PlayerStateA, class AProjectXPlayerState* PlayerStateB)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SquadComponent.IsInSameSquad"));

	struct
	{
		class AProjectXPlayerState*    PlayerStateA;
		class AProjectXPlayerState*    PlayerStateB;
		bool                           ReturnValue;
	} params = {};

	params.PlayerStateA = PlayerStateA;
	params.PlayerStateB = PlayerStateB;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SquadComponent.GetSquadListForTeam
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// TArray<struct FSquadInstance>  OutSquadList                   (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_NativeAccessSpecifierPublic)
// unsigned char                  Team                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USquadComponent::GetSquadListForTeam(unsigned char Team, TArray<struct FSquadInstance>* OutSquadList)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SquadComponent.GetSquadListForTeam"));

	struct
	{
		TArray<struct FSquadInstance>  OutSquadList;
		unsigned char                  Team;
	} params = {};

	params.Team = Team;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	if (OutSquadList != nullptr)
		*OutSquadList = params.OutSquadList;
}


// Function ProjectX.SquadComponent.GetSquadList
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// TArray<struct FSquadInstance>  OutSquadList                   (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_NativeAccessSpecifierPublic)

void USquadComponent::GetSquadList(TArray<struct FSquadInstance>* OutSquadList)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SquadComponent.GetSquadList"));

	struct
	{
		TArray<struct FSquadInstance>  OutSquadList;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	if (OutSquadList != nullptr)
		*OutSquadList = params.OutSquadList;
}


// Function ProjectX.SquadComponent.GetSquadLeaderByID
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// int                            SquadID                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AProjectXPlayerState*    ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class AProjectXPlayerState* USquadComponent::GetSquadLeaderByID(int SquadID)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SquadComponent.GetSquadLeaderByID"));

	struct
	{
		int                            SquadID;
		class AProjectXPlayerState*    ReturnValue;
	} params = {};

	params.SquadID = SquadID;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SquadComponent.GetSquadInfo
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// struct FSquadInstance          Squad                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// unsigned char                  Team                           (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            ID                             (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TArray<class AProjectXPlayerState*> PlayerList                     (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool USquadComponent::GetSquadInfo(const struct FSquadInstance& Squad, unsigned char* Team, int* ID, TArray<class AProjectXPlayerState*>* PlayerList)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SquadComponent.GetSquadInfo"));

	struct
	{
		struct FSquadInstance          Squad;
		unsigned char                  Team;
		int                            ID;
		TArray<class AProjectXPlayerState*> PlayerList;
		bool                           ReturnValue;
	} params = {};

	params.Squad = Squad;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	if (Team != nullptr)
		*Team = params.Team;
	if (ID != nullptr)
		*ID = params.ID;
	if (PlayerList != nullptr)
		*PlayerList = params.PlayerList;

	return params.ReturnValue;
}


// Function ProjectX.SquadComponent.GetSquadCount
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int USquadComponent::GetSquadCount()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SquadComponent.GetSquadCount"));

	struct
	{
		int                            ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SquadComponent.GetSquadComponent
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class USquadComponent*         ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class USquadComponent* USquadComponent::GetSquadComponent(class UObject* WorldContextObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SquadComponent.GetSquadComponent"));

	struct
	{
		class UObject*                 WorldContextObject;
		class USquadComponent*         ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SquadComponent.GetMaxSquadSize
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int USquadComponent::GetMaxSquadSize()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SquadComponent.GetMaxSquadSize"));

	struct
	{
		int                            ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SquadComponent.AreSquadsEqual
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// struct FSquadInstance          OldSquad                       (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// struct FSquadInstance          NewSquad                       (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool USquadComponent::AreSquadsEqual(const struct FSquadInstance& OldSquad, const struct FSquadInstance& NewSquad)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SquadComponent.AreSquadsEqual"));

	struct
	{
		struct FSquadInstance          OldSquad;
		struct FSquadInstance          NewSquad;
		bool                           ReturnValue;
	} params = {};

	params.OldSquad = OldSquad;
	params.NewSquad = NewSquad;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.StatsTrackingManager.SaveInstance
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// struct FString                 PlayerID                       (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bChallengesOnly                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UStatsTrackingManager::SaveInstance(const struct FString& PlayerID, bool bChallengesOnly)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.StatsTrackingManager.SaveInstance"));

	struct
	{
		struct FString                 PlayerID;
		bool                           bChallengesOnly;
	} params = {};

	params.PlayerID = PlayerID;
	params.bChallengesOnly = bChallengesOnly;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.StatsTrackingManager.SaveAllInstances
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void UStatsTrackingManager::SaveAllInstances()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.StatsTrackingManager.SaveAllInstances"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.StatsTrackingManager.RerollChallenge
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// struct FString                 ChallengeID                    (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UStatsTrackingManager::RerollChallenge(const struct FString& ChallengeID)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.StatsTrackingManager.RerollChallenge"));

	struct
	{
		struct FString                 ChallengeID;
	} params = {};

	params.ChallengeID = ChallengeID;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.StatsTrackingManager.OnPurchaseEvent
// (FUNC_Final, FUNC_Native, FUNC_Public)
// Parameters:
// bool                           bPurchaseSucess                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FString                 ItemId                         (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UStatsTrackingManager::OnPurchaseEvent(bool bPurchaseSucess, const struct FString& ItemId)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.StatsTrackingManager.OnPurchaseEvent"));

	struct
	{
		bool                           bPurchaseSucess;
		struct FString                 ItemId;
	} params = {};

	params.bPurchaseSucess = bPurchaseSucess;
	params.ItemId = ItemId;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.StatsTrackingManager.OnNakamaConnected
// (FUNC_Final, FUNC_Native, FUNC_Public)

void UStatsTrackingManager::OnNakamaConnected()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.StatsTrackingManager.OnNakamaConnected"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.StatsTrackingManager.MarkStatSaveForReload
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// struct FString                 PlayerID                       (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bAuthorityOnly                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UStatsTrackingManager::MarkStatSaveForReload(const struct FString& PlayerID, bool bAuthorityOnly)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.StatsTrackingManager.MarkStatSaveForReload"));

	struct
	{
		struct FString                 PlayerID;
		bool                           bAuthorityOnly;
	} params = {};

	params.PlayerID = PlayerID;
	params.bAuthorityOnly = bAuthorityOnly;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.StatsTrackingManager.LoadStatInstance
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// struct FString                 PlayerID                       (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UStatTrackingSave*       ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UStatTrackingSave* UStatsTrackingManager::LoadStatInstance(const struct FString& PlayerID)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.StatsTrackingManager.LoadStatInstance"));

	struct
	{
		struct FString                 PlayerID;
		class UStatTrackingSave*       ReturnValue;
	} params = {};

	params.PlayerID = PlayerID;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.StatsTrackingManager.LoadRequestedPlayerStats
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// struct FString                 PlayerID                       (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TArray<struct FString>         StatNames                      (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// bool                           bForceReload                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UStatsTrackingManager::LoadRequestedPlayerStats(const struct FString& PlayerID, TArray<struct FString> StatNames, bool bForceReload)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.StatsTrackingManager.LoadRequestedPlayerStats"));

	struct
	{
		struct FString                 PlayerID;
		TArray<struct FString>         StatNames;
		bool                           bForceReload;
	} params = {};

	params.PlayerID = PlayerID;
	params.StatNames = StatNames;
	params.bForceReload = bForceReload;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.StatsTrackingManager.LoadLeaderBoardForStat
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// EStatNames                     Name                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// EStatClassifier                Type                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FString                 Class                          (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            NumberOfEntries                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            PageNumber                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bFriendsOnly                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UStatsTrackingManager::LoadLeaderBoardForStat(EStatNames Name, EStatClassifier Type, const struct FString& Class, int NumberOfEntries, int PageNumber, bool bFriendsOnly)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.StatsTrackingManager.LoadLeaderBoardForStat"));

	struct
	{
		EStatNames                     Name;
		EStatClassifier                Type;
		struct FString                 Class;
		int                            NumberOfEntries;
		int                            PageNumber;
		bool                           bFriendsOnly;
	} params = {};

	params.Name = Name;
	params.Type = Type;
	params.Class = Class;
	params.NumberOfEntries = NumberOfEntries;
	params.PageNumber = PageNumber;
	params.bFriendsOnly = bFriendsOnly;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.StatsTrackingManager.LoadChallenges
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// struct FString                 PlayerID                       (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UStatsTrackingManager::LoadChallenges(const struct FString& PlayerID)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.StatsTrackingManager.LoadChallenges"));

	struct
	{
		struct FString                 PlayerID;
	} params = {};

	params.PlayerID = PlayerID;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.StatsTrackingManager.IsValidStatCheck
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// EStatClassifier                Class                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// EStatNames                     Name                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UStatsTrackingManager::IsValidStatCheck(EStatClassifier Class, EStatNames Name)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.StatsTrackingManager.IsValidStatCheck"));

	struct
	{
		EStatClassifier                Class;
		EStatNames                     Name;
		bool                           ReturnValue;
	} params = {};

	params.Class = Class;
	params.Name = Name;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.StatsTrackingManager.IsValidLeaderboardPage
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// int                            PageNumber                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            Entries                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UStatsTrackingManager::IsValidLeaderboardPage(int PageNumber, int Entries)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.StatsTrackingManager.IsValidLeaderboardPage"));

	struct
	{
		int                            PageNumber;
		int                            Entries;
		bool                           ReturnValue;
	} params = {};

	params.PageNumber = PageNumber;
	params.Entries = Entries;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.StatsTrackingManager.HasChallengeReroll
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UStatsTrackingManager::HasChallengeReroll()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.StatsTrackingManager.HasChallengeReroll"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.StatsTrackingManager.GetStatTrackingManager
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UStatsTrackingManager*   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UStatsTrackingManager* UStatsTrackingManager::GetStatTrackingManager(class UObject* WorldContextObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.StatsTrackingManager.GetStatTrackingManager"));

	struct
	{
		class UObject*                 WorldContextObject;
		class UStatsTrackingManager*   ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.StatsTrackingManager.GetStatInstance
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// struct FString                 PlayerID                       (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UStatTrackingSave*       ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UStatTrackingSave* UStatsTrackingManager::GetStatInstance(const struct FString& PlayerID)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.StatsTrackingManager.GetStatInstance"));

	struct
	{
		struct FString                 PlayerID;
		class UStatTrackingSave*       ReturnValue;
	} params = {};

	params.PlayerID = PlayerID;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.StatsTrackingManager.GetStatDelta
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// struct FString                 PlayerID                       (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// EStatClassifier                StatType                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// EStatNames                     StatName                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FString                 StatClassName                  (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int UStatsTrackingManager::GetStatDelta(const struct FString& PlayerID, EStatClassifier StatType, EStatNames StatName, const struct FString& StatClassName)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.StatsTrackingManager.GetStatDelta"));

	struct
	{
		struct FString                 PlayerID;
		EStatClassifier                StatType;
		EStatNames                     StatName;
		struct FString                 StatClassName;
		int                            ReturnValue;
	} params = {};

	params.PlayerID = PlayerID;
	params.StatType = StatType;
	params.StatName = StatName;
	params.StatClassName = StatClassName;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.StatsTrackingManager.GetStat
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// struct FString                 PlayerID                       (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// EStatClassifier                StatType                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// EStatNames                     StatName                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FString                 StatClassName                  (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int UStatsTrackingManager::GetStat(const struct FString& PlayerID, EStatClassifier StatType, EStatNames StatName, const struct FString& StatClassName)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.StatsTrackingManager.GetStat"));

	struct
	{
		struct FString                 PlayerID;
		EStatClassifier                StatType;
		EStatNames                     StatName;
		struct FString                 StatClassName;
		int                            ReturnValue;
	} params = {};

	params.PlayerID = PlayerID;
	params.StatType = StatType;
	params.StatName = StatName;
	params.StatClassName = StatClassName;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.StatsTrackingManager.GetPlayerLevelFromPlayerID
// (FUNC_Final, FUNC_Native, FUNC_Protected, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// struct FString                 PlayerID                       (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int UStatsTrackingManager::GetPlayerLevelFromPlayerID(const struct FString& PlayerID)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.StatsTrackingManager.GetPlayerLevelFromPlayerID"));

	struct
	{
		struct FString                 PlayerID;
		int                            ReturnValue;
	} params = {};

	params.PlayerID = PlayerID;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.StatsTrackingManager.GetNakamaLocalPlayerID
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// struct FString                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FString UStatsTrackingManager::GetNakamaLocalPlayerID()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.StatsTrackingManager.GetNakamaLocalPlayerID"));

	struct
	{
		struct FString                 ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.StatsTrackingManager.GetLocalLeaderboardEntry
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// struct FLeaderBoardLocalEntry  ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_ReferenceParm, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

struct FLeaderBoardLocalEntry UStatsTrackingManager::GetLocalLeaderboardEntry()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.StatsTrackingManager.GetLocalLeaderboardEntry"));

	struct
	{
		struct FLeaderBoardLocalEntry  ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.StatsTrackingManager.GetLeaderboard
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// TMap<int, struct FLeaderBoardEntry> ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)

TMap<int, struct FLeaderBoardEntry> UStatsTrackingManager::GetLeaderboard()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.StatsTrackingManager.GetLeaderboard"));

	struct
	{
		TMap<int, struct FLeaderBoardEntry> ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.StatsTrackingManager.GetChallenges
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// struct FString                 PlayerID                       (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FTimedChallenges        Challenges                     (CPF_Parm, CPF_OutParm, CPF_NativeAccessSpecifierPublic)

void UStatsTrackingManager::GetChallenges(const struct FString& PlayerID, struct FTimedChallenges* Challenges)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.StatsTrackingManager.GetChallenges"));

	struct
	{
		struct FString                 PlayerID;
		struct FTimedChallenges        Challenges;
	} params = {};

	params.PlayerID = PlayerID;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	if (Challenges != nullptr)
		*Challenges = params.Challenges;
}


// Function ProjectX.StatsTrackingManager.ClaimChallenge
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// struct FString                 ChallengeID                    (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UStatsTrackingManager::ClaimChallenge(const struct FString& ChallengeID)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.StatsTrackingManager.ClaimChallenge"));

	struct
	{
		struct FString                 ChallengeID;
	} params = {};

	params.ChallengeID = ChallengeID;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.StatsTrackingManager.BPUpdateStat
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class AProjectXPlayerState*    PlayerState                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// EStatNames                     InStatName                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UStatsTrackingManager::BPUpdateStat(class AProjectXPlayerState* PlayerState, EStatNames InStatName)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.StatsTrackingManager.BPUpdateStat"));

	struct
	{
		class AProjectXPlayerState*    PlayerState;
		EStatNames                     InStatName;
	} params = {};

	params.PlayerState = PlayerState;
	params.InStatName = InStatName;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.StatsTrackingManager.AreStatsSynced
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// struct FString                 PlayerID                       (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UStatsTrackingManager::AreStatsSynced(const struct FString& PlayerID)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.StatsTrackingManager.AreStatsSynced"));

	struct
	{
		struct FString                 PlayerID;
		bool                           ReturnValue;
	} params = {};

	params.PlayerID = PlayerID;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.StatTrackingSave.TrackProjectile
// (FUNC_Final, FUNC_Native, FUNC_Public)
// Parameters:
// uint16_t                       ID                             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UStatTrackingSave::TrackProjectile(uint16_t ID)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.StatTrackingSave.TrackProjectile"));

	struct
	{
		uint16_t                       ID;
		bool                           ReturnValue;
	} params = {};

	params.ID = ID;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.StatTrackingSave.ClearProjectileID
// (FUNC_Final, FUNC_Native, FUNC_Public)
// Parameters:
// uint16_t                       ID                             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UStatTrackingSave::ClearProjectileID(uint16_t ID)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.StatTrackingSave.ClearProjectileID"));

	struct
	{
		uint16_t                       ID;
	} params = {};

	params.ID = ID;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SubMenuWidget.SwitchMenuState
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// struct FName                   Type                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USubMenuWidget::SwitchMenuState(const struct FName& Type)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SubMenuWidget.SwitchMenuState"));

	struct
	{
		struct FName                   Type;
	} params = {};

	params.Type = Type;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.SubMenuWidget.SetSubMenus
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool USubMenuWidget::SetSubMenus()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SubMenuWidget.SetSubMenus"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.SubMenuWidget.AddSubMenu
// (FUNC_Final, FUNC_Native, FUNC_Protected, FUNC_BlueprintCallable)
// Parameters:
// struct FName                   NameId                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UUserWidget*             SubMenu                        (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void USubMenuWidget::AddSubMenu(const struct FName& NameId, class UUserWidget* SubMenu)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.SubMenuWidget.AddSubMenu"));

	struct
	{
		struct FName                   NameId;
		class UUserWidget*             SubMenu;
	} params = {};

	params.NameId = NameId;
	params.SubMenu = SubMenu;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.TeamInterface.SetTeam
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// int                            NewTeam                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int UTeamInterface::SetTeam(int NewTeam)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.TeamInterface.SetTeam"));

	struct
	{
		int                            NewTeam;
		int                            ReturnValue;
	} params = {};

	params.NewTeam = NewTeam;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.TeamInterface.GetTeam
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int UTeamInterface::GetTeam()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.TeamInterface.GetTeam"));

	struct
	{
		int                            ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.TelekenesisActor.SetCollisionComponent
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*     InCollisionComponent           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ATelekenesisActor::SetCollisionComponent(class UPrimitiveComponent* InCollisionComponent)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.TelekenesisActor.SetCollisionComponent"));

	struct
	{
		class UPrimitiveComponent*     InCollisionComponent;
	} params = {};

	params.InCollisionComponent = InCollisionComponent;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.TelekenesisActor.OnImpact
// (FUNC_Native, FUNC_Public, FUNC_HasOutParms)
// Parameters:
// struct FHitResult              Hit                            (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

void ATelekenesisActor::OnImpact(const struct FHitResult& Hit)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.TelekenesisActor.OnImpact"));

	struct
	{
		struct FHitResult              Hit;
	} params = {};

	params.Hit = Hit;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.TelekenesisActor.K2_OnImpact
// (FUNC_Event, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintEvent)
// Parameters:
// struct FHitResult              Hit                            (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

void ATelekenesisActor::K2_OnImpact(const struct FHitResult& Hit)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.TelekenesisActor.K2_OnImpact"));

	struct
	{
		struct FHitResult              Hit;
	} params = {};

	params.Hit = Hit;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.TelekenesisActor.K2_OnFollowProjectile
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)
// Parameters:
// class AProjectile*             Actor                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ATelekenesisActor::K2_OnFollowProjectile(class AProjectile* Actor)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.TelekenesisActor.K2_OnFollowProjectile"));

	struct
	{
		class AProjectile*             Actor;
	} params = {};

	params.Actor = Actor;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.TelekenesisActor.K2_OnActorContextInfo
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)
// Parameters:
// class AActor*                  Actor                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     Component                      (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            InstanceId                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void ATelekenesisActor::K2_OnActorContextInfo(class AActor* Actor, class UPrimitiveComponent* Component, int InstanceId)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.TelekenesisActor.K2_OnActorContextInfo"));

	struct
	{
		class AActor*                  Actor;
		class UPrimitiveComponent*     Component;
		int                            InstanceId;
	} params = {};

	params.Actor = Actor;
	params.Component = Component;
	params.InstanceId = InstanceId;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.TelekenesisActor.K2_Die
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)

void ATelekenesisActor::K2_Die()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.TelekenesisActor.K2_Die"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.TelekenesisActor.HasTarget
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool ATelekenesisActor::HasTarget()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.TelekenesisActor.HasTarget"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.TelekenesisComponent.TakeDamage
// (FUNC_Native, FUNC_Public, FUNC_HasOutParms)
// Parameters:
// float                          Damage                         (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FDamageEvent            DamageEvent                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// class AController*             EventInstigator                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UTelekenesisComponent::TakeDamage(const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser, float* Damage)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.TelekenesisComponent.TakeDamage"));

	struct
	{
		float                          Damage;
		struct FDamageEvent            DamageEvent;
		class AController*             EventInstigator;
		class AActor*                  DamageCauser;
	} params = {};

	params.DamageEvent = DamageEvent;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	if (Damage != nullptr)
		*Damage = params.Damage;
}


// Function ProjectX.TelekenesisComponent.Server_Release
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetServer)
// Parameters:
// bool                           bForce                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UTelekenesisComponent::Server_Release(bool bForce)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.TelekenesisComponent.Server_Release"));

	struct
	{
		bool                           bForce;
	} params = {};

	params.bForce = bForce;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.TelekenesisComponent.Server_Pull
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetServer)
// Parameters:
// struct FHitResult              HitResult                      (CPF_ConstParm, CPF_Parm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

void UTelekenesisComponent::Server_Pull(const struct FHitResult& HitResult)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.TelekenesisComponent.Server_Pull"));

	struct
	{
		struct FHitResult              HitResult;
	} params = {};

	params.HitResult = HitResult;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.TelekenesisComponent.Multicast_TakeDamage
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_NetMulticast, FUNC_Protected)
// Parameters:
// float                          Damage                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UTelekenesisComponent::Multicast_TakeDamage(float Damage)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.TelekenesisComponent.Multicast_TakeDamage"));

	struct
	{
		float                          Damage;
	} params = {};

	params.Damage = Damage;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.TelekenesisComponent.Multicast_Release
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_NetMulticast, FUNC_Protected)
// Parameters:
// bool                           bForce                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UTelekenesisComponent::Multicast_Release(bool bForce)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.TelekenesisComponent.Multicast_Release"));

	struct
	{
		bool                           bForce;
	} params = {};

	params.bForce = bForce;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.TelekenesisComponent.Multicast_Pull
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_NetMulticast, FUNC_Protected)
// Parameters:
// struct FHitResult              HitResult                      (CPF_ConstParm, CPF_Parm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

void UTelekenesisComponent::Multicast_Pull(const struct FHitResult& HitResult)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.TelekenesisComponent.Multicast_Pull"));

	struct
	{
		struct FHitResult              HitResult;
	} params = {};

	params.HitResult = HitResult;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.TelekenesisComponent.Multicast_Die
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_NetMulticast, FUNC_Protected)
// Parameters:
// float                          Damage                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UTelekenesisComponent::Multicast_Die(float Damage)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.TelekenesisComponent.Multicast_Die"));

	struct
	{
		float                          Damage;
	} params = {};

	params.Damage = Damage;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.TrackableInterface.SetRadarIconOpacity
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          Opacity                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UTrackableInterface::SetRadarIconOpacity(float Opacity)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.TrackableInterface.SetRadarIconOpacity"));

	struct
	{
		float                          Opacity;
	} params = {};

	params.Opacity = Opacity;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.TrackableInterface.RegisterOnStart
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UTrackableInterface::RegisterOnStart()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.TrackableInterface.RegisterOnStart"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.TrackableInterface.IsCloaked
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UTrackableInterface::IsCloaked()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.TrackableInterface.IsCloaked"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.TrackableInterface.GetTrackableInterfaceActor
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class AActor*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class AActor* UTrackableInterface::GetTrackableInterfaceActor()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.TrackableInterface.GetTrackableInterfaceActor"));

	struct
	{
		class AActor*                  ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.TrackableInterface.GetRadarLabel
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FText                   ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)

struct FText UTrackableInterface::GetRadarLabel()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.TrackableInterface.GetRadarLabel"));

	struct
	{
		struct FText                   ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.TrackableInterface.GetRadarIconSize
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UTrackableInterface::GetRadarIconSize()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.TrackableInterface.GetRadarIconSize"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.TrackableInterface.GetRadarIconOpacity
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UTrackableInterface::GetRadarIconOpacity()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.TrackableInterface.GetRadarIconOpacity"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.TrackableInterface.GetRadarIconEnemyOpacity
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UTrackableInterface::GetRadarIconEnemyOpacity()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.TrackableInterface.GetRadarIconEnemyOpacity"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.TrackableInterface.GetRadarIconCompensantesRotation
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UTrackableInterface::GetRadarIconCompensantesRotation()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.TrackableInterface.GetRadarIconCompensantesRotation"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.TrackableInterface.GetRadarIcon
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// TSoftObjectPtr<class UTexture2D> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

TSoftObjectPtr<class UTexture2D> UTrackableInterface::GetRadarIcon()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.TrackableInterface.GetRadarIcon"));

	struct
	{
		TSoftObjectPtr<class UTexture2D> ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.TrackableInterface.GetMapIcon
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// TSoftObjectPtr<class UTexture2D> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

TSoftObjectPtr<class UTexture2D> UTrackableInterface::GetMapIcon()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.TrackableInterface.GetMapIcon"));

	struct
	{
		TSoftObjectPtr<class UTexture2D> ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.TrackableInterface.GetHudIcon
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// TSoftObjectPtr<class UTexture2D> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

TSoftObjectPtr<class UTexture2D> UTrackableInterface::GetHudIcon()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.TrackableInterface.GetHudIcon"));

	struct
	{
		TSoftObjectPtr<class UTexture2D> ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.TrackableInterface.GetAllyVisibilityResponse
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UTrackableInterface::GetAllyVisibilityResponse()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.TrackableInterface.GetAllyVisibilityResponse"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.TurretComponent.Multicast_OnFired
// (FUNC_Net, FUNC_Native, FUNC_Event, FUNC_NetMulticast, FUNC_Protected)

void UTurretComponent::Multicast_OnFired()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.TurretComponent.Multicast_OnFired"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.TurretComponent.GetTargetingRotation
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FRotator                ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

struct FRotator UTurretComponent::GetTargetingRotation()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.TurretComponent.GetTargetingRotation"));

	struct
	{
		struct FRotator                ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.TurretComponent.GetTarget
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AActor*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class AActor* UTurretComponent::GetTarget()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.TurretComponent.GetTarget"));

	struct
	{
		class AActor*                  ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.TurretComponent.GetProjectileTransform
// (FUNC_Final, FUNC_Native, FUNC_Protected, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FTransform              ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

struct FTransform UTurretComponent::GetProjectileTransform()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.TurretComponent.GetProjectileTransform"));

	struct
	{
		struct FTransform              ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.TurretComponent.FireProjectile
// (FUNC_BlueprintAuthorityOnly, FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_BlueprintCallable)
// Parameters:
// struct FTransform              TransformStart                 (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
// bool                           bRequiresValidTarget           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UTurretComponent::FireProjectile(const struct FTransform& TransformStart, bool bRequiresValidTarget)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.TurretComponent.FireProjectile"));

	struct
	{
		struct FTransform              TransformStart;
		bool                           bRequiresValidTarget;
	} params = {};

	params.TransformStart = TransformStart;
	params.bRequiresValidTarget = bRequiresValidTarget;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.TurretOverlayWidget.OnTargetAcquired
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)
// Parameters:
// class AActor*                  Target                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UTurretOverlayWidget::OnTargetAcquired(class AActor* Target)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.TurretOverlayWidget.OnTargetAcquired"));

	struct
	{
		class AActor*                  Target;
	} params = {};

	params.Target = Target;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.TurretOverlayWidget.OnFire
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent)
// Parameters:
// float                          CoolDown                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UTurretOverlayWidget::OnFire(float CoolDown)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.TurretOverlayWidget.OnFire"));

	struct
	{
		float                          CoolDown;
	} params = {};

	params.CoolDown = CoolDown;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.ProjectXVehicleMovementComponent.IsGroundedInFlyingMode
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UProjectXVehicleMovementComponent::IsGroundedInFlyingMode()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicleMovementComponent.IsGroundedInFlyingMode"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXVehicleMovementComponent.GetPackedAcceleration
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// unsigned char                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

unsigned char UProjectXVehicleMovementComponent::GetPackedAcceleration()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicleMovementComponent.GetPackedAcceleration"));

	struct
	{
		unsigned char                  ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.ProjectXVehicleMovementComponent.GetFlySpeedCache
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UProjectXVehicleMovementComponent::GetFlySpeedCache()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.ProjectXVehicleMovementComponent.GetFlySpeedCache"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.VehicleSeatComponent.ToggleSeatAttachment
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// bool                           bNewToggle                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UVehicleSeatComponent::ToggleSeatAttachment(bool bNewToggle)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.VehicleSeatComponent.ToggleSeatAttachment"));

	struct
	{
		bool                           bNewToggle;
	} params = {};

	params.bNewToggle = bNewToggle;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.VehicleSeatComponent.TickWeapon
// (FUNC_Native, FUNC_Public)
// Parameters:
// float                          DeltaTime                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UVehicleSeatComponent::TickWeapon(float DeltaTime)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.VehicleSeatComponent.TickWeapon"));

	struct
	{
		float                          DeltaTime;
	} params = {};

	params.DeltaTime = DeltaTime;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.VehicleSeatComponent.TickOccupant
// (FUNC_Native, FUNC_Public)
// Parameters:
// float                          DeltaTime                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UVehicleSeatComponent::TickOccupant(float DeltaTime)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.VehicleSeatComponent.TickOccupant"));

	struct
	{
		float                          DeltaTime;
	} params = {};

	params.DeltaTime = DeltaTime;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.VehicleSeatComponent.ShouldOccupantBeHidden
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UVehicleSeatComponent::ShouldOccupantBeHidden()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.VehicleSeatComponent.ShouldOccupantBeHidden"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.VehicleSeatComponent.SetManualSeatOffset
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasDefaults, FUNC_BlueprintCallable)
// Parameters:
// struct FVector                 NewOffset                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UVehicleSeatComponent::SetManualSeatOffset(const struct FVector& NewOffset)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.VehicleSeatComponent.SetManualSeatOffset"));

	struct
	{
		struct FVector                 NewOffset;
	} params = {};

	params.NewOffset = NewOffset;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.VehicleSeatComponent.ResetSeatOffset
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void UVehicleSeatComponent::ResetSeatOffset()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.VehicleSeatComponent.ResetSeatOffset"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.VehicleSeatComponent.OnRep_Occupant
// (FUNC_Native, FUNC_Protected)

void UVehicleSeatComponent::OnRep_Occupant()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.VehicleSeatComponent.OnRep_Occupant"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.VehicleSeatComponent.LeaveSeat
// (FUNC_Native, FUNC_Public)
// Parameters:
// bool                           bForced                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bEject                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UVehicleSeatComponent::LeaveSeat(bool bForced, bool bEject)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.VehicleSeatComponent.LeaveSeat"));

	struct
	{
		bool                           bForced;
		bool                           bEject;
		bool                           ReturnValue;
	} params = {};

	params.bForced = bForced;
	params.bEject = bEject;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.VehicleSeatComponent.IsDriverSeat
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UVehicleSeatComponent::IsDriverSeat()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.VehicleSeatComponent.IsDriverSeat"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.VehicleSeatComponent.HasOccupant
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UVehicleSeatComponent::HasOccupant()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.VehicleSeatComponent.HasOccupant"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.VehicleSeatComponent.GetWeaponComponent
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UWeaponComponent*        ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UWeaponComponent* UVehicleSeatComponent::GetWeaponComponent()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.VehicleSeatComponent.GetWeaponComponent"));

	struct
	{
		class UWeaponComponent*        ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.VehicleSeatComponent.GetVehicle
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AProjectXVehicle*        ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class AProjectXVehicle* UVehicleSeatComponent::GetVehicle()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.VehicleSeatComponent.GetVehicle"));

	struct
	{
		class AProjectXVehicle*        ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.VehicleSeatComponent.GetUseCharacterBoundsWhenVisible
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UVehicleSeatComponent::GetUseCharacterBoundsWhenVisible()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.VehicleSeatComponent.GetUseCharacterBoundsWhenVisible"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.VehicleSeatComponent.GetSeatTransform
// (FUNC_Native, FUNC_Public, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FTransform              ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

struct FTransform UVehicleSeatComponent::GetSeatTransform()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.VehicleSeatComponent.GetSeatTransform"));

	struct
	{
		struct FTransform              ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.VehicleSeatComponent.GetSeatRotation
// (FUNC_Native, FUNC_Public, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FRotator                ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

struct FRotator UVehicleSeatComponent::GetSeatRotation()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.VehicleSeatComponent.GetSeatRotation"));

	struct
	{
		struct FRotator                ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.VehicleSeatComponent.GetSeatName
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FName                   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FName UVehicleSeatComponent::GetSeatName()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.VehicleSeatComponent.GetSeatName"));

	struct
	{
		struct FName                   ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.VehicleSeatComponent.GetSeatLocation
// (FUNC_Native, FUNC_Public, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FVector                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FVector UVehicleSeatComponent::GetSeatLocation()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.VehicleSeatComponent.GetSeatLocation"));

	struct
	{
		struct FVector                 ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.VehicleSeatComponent.GetOccupant
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AProjectXCharacter*      ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class AProjectXCharacter* UVehicleSeatComponent::GetOccupant()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.VehicleSeatComponent.GetOccupant"));

	struct
	{
		class AProjectXCharacter*      ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.VehicleSeatComponent.GetLookDirection
// (FUNC_Native, FUNC_Public, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FRotator                ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

struct FRotator UVehicleSeatComponent::GetLookDirection()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.VehicleSeatComponent.GetLookDirection"));

	struct
	{
		struct FRotator                ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.VehicleSeatComponent.GetExitTransform
// (FUNC_Native, FUNC_Public, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FTransform              ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

struct FTransform UVehicleSeatComponent::GetExitTransform()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.VehicleSeatComponent.GetExitTransform"));

	struct
	{
		struct FTransform              ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.VehicleSeatComponent.GetDistanceFromPlayer
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AProjectXCharacter*      Character                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UVehicleSeatComponent::GetDistanceFromPlayer(class AProjectXCharacter* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.VehicleSeatComponent.GetDistanceFromPlayer"));

	struct
	{
		class AProjectXCharacter*      Character;
		float                          ReturnValue;
	} params = {};

	params.Character = Character;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.VehicleSeatComponent.EnterSeat
// (FUNC_Native, FUNC_Public)
// Parameters:
// class AProjectXCharacter*      Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UVehicleSeatComponent::EnterSeat(class AProjectXCharacter* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.VehicleSeatComponent.EnterSeat"));

	struct
	{
		class AProjectXCharacter*      Character;
		bool                           ReturnValue;
	} params = {};

	params.Character = Character;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.VehicleSeatComponent.CanEnterSeat
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AProjectXCharacter*      Character                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UVehicleSeatComponent::CanEnterSeat(class AProjectXCharacter* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.VehicleSeatComponent.CanEnterSeat"));

	struct
	{
		class AProjectXCharacter*      Character;
		bool                           ReturnValue;
	} params = {};

	params.Character = Character;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.VirtualCursorFunctionLibrary.SetVirtualCursorSensitivity
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// float                          Multiplier                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UVirtualCursorFunctionLibrary::SetVirtualCursorSensitivity(float Multiplier)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.VirtualCursorFunctionLibrary.SetVirtualCursorSensitivity"));

	struct
	{
		float                          Multiplier;
	} params = {};

	params.Multiplier = Multiplier;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.VirtualCursorFunctionLibrary.IsVirtualCursorActive
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UVirtualCursorFunctionLibrary::IsVirtualCursorActive()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.VirtualCursorFunctionLibrary.IsVirtualCursorActive"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.VirtualCursorFunctionLibrary.IsCursorOverInteractableWidget
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UVirtualCursorFunctionLibrary::IsCursorOverInteractableWidget()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.VirtualCursorFunctionLibrary.IsCursorOverInteractableWidget"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.VirtualCursorFunctionLibrary.EnableVirtualCursor
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class APlayerController*       PC                             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UVirtualCursorFunctionLibrary::EnableVirtualCursor(class APlayerController* PC)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.VirtualCursorFunctionLibrary.EnableVirtualCursor"));

	struct
	{
		class APlayerController*       PC;
	} params = {};

	params.PC = PC;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.VirtualCursorFunctionLibrary.DisableVirtualCursor
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class APlayerController*       PC                             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UVirtualCursorFunctionLibrary::DisableVirtualCursor(class APlayerController* PC)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.VirtualCursorFunctionLibrary.DisableVirtualCursor"));

	struct
	{
		class APlayerController*       PC;
	} params = {};

	params.PC = PC;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}
}


// Function ProjectX.VivoxPlayerComponent.IsUsingPushToTalk
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UVivoxPlayerComponent::IsUsingPushToTalk()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.VivoxPlayerComponent.IsUsingPushToTalk"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.VivoxPlayerComponent.Client_Login
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetClient)

void UVivoxPlayerComponent::Client_Login()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.VivoxPlayerComponent.Client_Login"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.VivoxPlayerComponent.Client_JoinSquadVoiceChannel
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetClient)
// Parameters:
// struct FString                 SessionName                    (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            SquadID                        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bForceLeaveChannels            (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UVivoxPlayerComponent::Client_JoinSquadVoiceChannel(const struct FString& SessionName, int SquadID, bool bForceLeaveChannels)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.VivoxPlayerComponent.Client_JoinSquadVoiceChannel"));

	struct
	{
		struct FString                 SessionName;
		int                            SquadID;
		bool                           bForceLeaveChannels;
	} params = {};

	params.SessionName = SessionName;
	params.SquadID = SquadID;
	params.bForceLeaveChannels = bForceLeaveChannels;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.VivoxSteamBeaconClient.Client_Reliable_SendVoiceSessionID
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetClient, FUNC_NetValidate)
// Parameters:
// struct FString                 VoiceSessionID                 (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AVivoxSteamBeaconClient::Client_Reliable_SendVoiceSessionID(const struct FString& VoiceSessionID)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.VivoxSteamBeaconClient.Client_Reliable_SendVoiceSessionID"));

	struct
	{
		struct FString                 VoiceSessionID;
	} params = {};

	params.VoiceSessionID = VoiceSessionID;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.VoteInstanceKick.OnRep_KickTargetID
// (FUNC_Native, FUNC_Protected)

void UVoteInstanceKick::OnRep_KickTargetID()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.VoteInstanceKick.OnRep_KickTargetID"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.VoteInstanceKick.GetKickTargetID
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FName                   ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FName UVoteInstanceKick::GetKickTargetID()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.VoteInstanceKick.GetKickTargetID"));

	struct
	{
		struct FName                   ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.VoteInstanceKick.GetKickTarget
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class APlayerState*            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class APlayerState* UVoteInstanceKick::GetKickTarget()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.VoteInstanceKick.GetKickTarget"));

	struct
	{
		class APlayerState*            ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.VoteInstanceMap.GetMapList
// (FUNC_Native, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// TArray<struct FString>         OutMapList                     (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_NativeAccessSpecifierPublic)

void UVoteInstanceMap::GetMapList(TArray<struct FString>* OutMapList)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.VoteInstanceMap.GetMapList"));

	struct
	{
		TArray<struct FString>         OutMapList;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	if (OutMapList != nullptr)
		*OutMapList = params.OutMapList;
}


// Function ProjectX.WaveSpawner.SpawnWave
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void AWaveSpawner::SpawnWave()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WaveSpawner.SpawnWave"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WaveSpawner.RespawnerFinsished
// (FUNC_Final, FUNC_Native, FUNC_Public)
// Parameters:
// class AActor*                  Actor                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TEnumAsByte<EEndPlayReason>    EndPlayReason                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AWaveSpawner::RespawnerFinsished(class AActor* Actor, TEnumAsByte<EEndPlayReason> EndPlayReason)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WaveSpawner.RespawnerFinsished"));

	struct
	{
		class AActor*                  Actor;
		TEnumAsByte<EEndPlayReason>    EndPlayReason;
	} params = {};

	params.Actor = Actor;
	params.EndPlayReason = EndPlayReason;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WaveSpawner.OnSpawnerCompleted
// (FUNC_Final, FUNC_Native, FUNC_Public)
// Parameters:
// class UObject*                 Spawner                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AWaveSpawner::OnSpawnerCompleted(class UObject* Spawner)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WaveSpawner.OnSpawnerCompleted"));

	struct
	{
		class UObject*                 Spawner;
	} params = {};

	params.Spawner = Spawner;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WaveSpawner.OnMobSpawned
// (FUNC_Final, FUNC_Native, FUNC_Public)
// Parameters:
// class AProjectXCharacter*      SpawnedPlayerState             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AWaveSpawner::OnMobSpawned(class AProjectXCharacter* SpawnedPlayerState)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WaveSpawner.OnMobSpawned"));

	struct
	{
		class AProjectXCharacter*      SpawnedPlayerState;
	} params = {};

	params.SpawnedPlayerState = SpawnedPlayerState;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WaveSpawner.OnMobDestroyed
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasDefaults)
// Parameters:
// class AProjectXCharacter*      SpawnedPlayerState             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FVector                 SpawnLocation                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AWaveSpawner::OnMobDestroyed(class AProjectXCharacter* SpawnedPlayerState, const struct FVector& SpawnLocation)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WaveSpawner.OnMobDestroyed"));

	struct
	{
		class AProjectXCharacter*      SpawnedPlayerState;
		struct FVector                 SpawnLocation;
	} params = {};

	params.SpawnedPlayerState = SpawnedPlayerState;
	params.SpawnLocation = SpawnLocation;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WaveSpawner.IsADefeatEnemyWave
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// int                            Wave                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool AWaveSpawner::IsADefeatEnemyWave(int Wave)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WaveSpawner.IsADefeatEnemyWave"));

	struct
	{
		int                            Wave;
		bool                           ReturnValue;
	} params = {};

	params.Wave = Wave;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WaveSpawner.GetWaveSpawnerStateFromPackedInt
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable, FUNC_BlueprintPure)
// Parameters:
// int                            Data                           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            Wave                           (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// EWaveSpawnerState              State                          (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AWaveSpawner::GetWaveSpawnerStateFromPackedInt(int Data, int* Wave, EWaveSpawnerState* State)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WaveSpawner.GetWaveSpawnerStateFromPackedInt"));

	struct
	{
		int                            Data;
		int                            Wave;
		EWaveSpawnerState              State;
	} params = {};

	params.Data = Data;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	if (Wave != nullptr)
		*Wave = params.Wave;
	if (State != nullptr)
		*State = params.State;
}


// Function ProjectX.WaveSpawner.GetWaveSpawnerState
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// EWaveSpawnerState              ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

EWaveSpawnerState AWaveSpawner::GetWaveSpawnerState()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WaveSpawner.GetWaveSpawnerState"));

	struct
	{
		EWaveSpawnerState              ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WaveSpawner.GetWaveProgress
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float AWaveSpawner::GetWaveProgress()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WaveSpawner.GetWaveProgress"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WaveSpawner.GetTotalWaves
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int AWaveSpawner::GetTotalWaves()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WaveSpawner.GetTotalWaves"));

	struct
	{
		int                            ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WaveSpawner.GetTotalKills
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int AWaveSpawner::GetTotalKills()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WaveSpawner.GetTotalKills"));

	struct
	{
		int                            ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WaveSpawner.GetNumberOfEnemiesNeededToProgress
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// int                            Wave                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int AWaveSpawner::GetNumberOfEnemiesNeededToProgress(int Wave)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WaveSpawner.GetNumberOfEnemiesNeededToProgress"));

	struct
	{
		int                            Wave;
		int                            ReturnValue;
	} params = {};

	params.Wave = Wave;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WaveSpawner.GetCurrentWave
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int AWaveSpawner::GetCurrentWave()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WaveSpawner.GetCurrentWave"));

	struct
	{
		int                            ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WaveSpawner.EventComplete
// (FUNC_Final, FUNC_Native, FUNC_Public)
// Parameters:
// bool                           bSuccess                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void AWaveSpawner::EventComplete(bool bSuccess)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WaveSpawner.EventComplete"));

	struct
	{
		bool                           bSuccess;
	} params = {};

	params.bSuccess = bSuccess;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WaveSpawner.EndWave
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void AWaveSpawner::EndWave()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WaveSpawner.EndWave"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponComponent.WeaponAutoFire
// (FUNC_Final, FUNC_Native, FUNC_Public)

void UWeaponComponent::WeaponAutoFire()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponComponent.WeaponAutoFire"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponComponent.UseVehicleAbility
// (FUNC_Native, FUNC_Public)

void UWeaponComponent::UseVehicleAbility()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponComponent.UseVehicleAbility"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponComponent.UsesAmmo
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponComponent::UsesAmmo()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponComponent.UsesAmmo"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponComponent.UnEquipComplete
// (FUNC_Native, FUNC_Public)

void UWeaponComponent::UnEquipComplete()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponComponent.UnEquipComplete"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponComponent.StopVehicleAbility
// (FUNC_Native, FUNC_Public)

void UWeaponComponent::StopVehicleAbility()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponComponent.StopVehicleAbility"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponComponent.StartVehicleAbility
// (FUNC_Native, FUNC_Public)

void UWeaponComponent::StartVehicleAbility()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponComponent.StartVehicleAbility"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponComponent.Server_Reliable_SetPendingWeapon
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetServer, FUNC_NetValidate)
// Parameters:
// class UWeaponInstance*         Weapon                         (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponComponent::Server_Reliable_SetPendingWeapon(class UWeaponInstance* Weapon)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponComponent.Server_Reliable_SetPendingWeapon"));

	struct
	{
		class UWeaponInstance*         Weapon;
	} params = {};

	params.Weapon = Weapon;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponComponent.Server_Reliable_EquipWeapon
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetServer, FUNC_NetValidate)
// Parameters:
// class UWeaponInstance*         Weapon                         (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bCanUnequipExclusive           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponComponent::Server_Reliable_EquipWeapon(class UWeaponInstance* Weapon, bool bCanUnequipExclusive)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponComponent.Server_Reliable_EquipWeapon"));

	struct
	{
		class UWeaponInstance*         Weapon;
		bool                           bCanUnequipExclusive;
	} params = {};

	params.Weapon = Weapon;
	params.bCanUnequipExclusive = bCanUnequipExclusive;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponComponent.QuickWeaponSwitchPrevious
// (FUNC_Native, FUNC_Public)

void UWeaponComponent::QuickWeaponSwitchPrevious()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponComponent.QuickWeaponSwitchPrevious"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponComponent.QuickWeaponSwitch
// (FUNC_Native, FUNC_Public)

void UWeaponComponent::QuickWeaponSwitch()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponComponent.QuickWeaponSwitch"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponComponent.OwnerDied
// (FUNC_Native, FUNC_Public)

void UWeaponComponent::OwnerDied()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponComponent.OwnerDied"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponComponent.OnRep_WeaponInventory
// (FUNC_Native, FUNC_Public)

void UWeaponComponent::OnRep_WeaponInventory()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponComponent.OnRep_WeaponInventory"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponComponent.OnRep_EquippedWeapon
// (FUNC_Native, FUNC_Public)

void UWeaponComponent::OnRep_EquippedWeapon()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponComponent.OnRep_EquippedWeapon"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponComponent.OnFOVSettingChanged
// (FUNC_Native, FUNC_Public)
// Parameters:
// float                          Delta                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponComponent::OnFOVSettingChanged(float Delta)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponComponent.OnFOVSettingChanged"));

	struct
	{
		float                          Delta;
	} params = {};

	params.Delta = Delta;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponComponent.IsSwitchingWeapons
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponComponent::IsSwitchingWeapons()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponComponent.IsSwitchingWeapons"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponComponent.IsLocallyControlled
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponComponent::IsLocallyControlled()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponComponent.IsLocallyControlled"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponComponent.IsHoldingFire
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponComponent::IsHoldingFire()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponComponent.IsHoldingFire"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponComponent.IsHoldingAltFire
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponComponent::IsHoldingAltFire()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponComponent.IsHoldingAltFire"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponComponent.IsCurrentWeaponByClass
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UClass* /*UWeaponInstance*/ Weapon                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponComponent::IsCurrentWeaponByClass(class UClass* /*UWeaponInstance*/ Weapon)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponComponent.IsCurrentWeaponByClass"));

	struct
	{
		class UClass* /*UWeaponInstance*/ Weapon;
		bool                           ReturnValue;
	} params = {};

	params.Weapon = Weapon;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponComponent.IsCurrentWeapon
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UWeaponInstance*         Weapon                         (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponComponent::IsCurrentWeapon(class UWeaponInstance* Weapon)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponComponent.IsCurrentWeapon"));

	struct
	{
		class UWeaponInstance*         Weapon;
		bool                           ReturnValue;
	} params = {};

	params.Weapon = Weapon;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponComponent.GetWeaponSpread
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UWeaponComponent::GetWeaponSpread()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponComponent.GetWeaponSpread"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponComponent.GetWeaponMesh3P
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class USkeletalMeshComponent*  ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class USkeletalMeshComponent* UWeaponComponent::GetWeaponMesh3P()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponComponent.GetWeaponMesh3P"));

	struct
	{
		class USkeletalMeshComponent*  ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponComponent.GetWeaponMesh1P
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class USkeletalMeshComponent*  ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class USkeletalMeshComponent* UWeaponComponent::GetWeaponMesh1P()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponComponent.GetWeaponMesh1P"));

	struct
	{
		class USkeletalMeshComponent*  ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponComponent.GetWeaponInventory
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// TArray<class UWeaponInstance*> ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

TArray<class UWeaponInstance*> UWeaponComponent::GetWeaponInventory()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponComponent.GetWeaponInventory"));

	struct
	{
		TArray<class UWeaponInstance*> ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponComponent.GetWeaponIndex
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UWeaponInstance*         Weapon                         (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int UWeaponComponent::GetWeaponIndex(class UWeaponInstance* Weapon)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponComponent.GetWeaponIndex"));

	struct
	{
		class UWeaponInstance*         Weapon;
		int                            ReturnValue;
	} params = {};

	params.Weapon = Weapon;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponComponent.GetWeaponFromSlot
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// EEquipSlot                     Slot                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UWeaponInstance*         ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UWeaponInstance* UWeaponComponent::GetWeaponFromSlot(EEquipSlot Slot)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponComponent.GetWeaponFromSlot"));

	struct
	{
		EEquipSlot                     Slot;
		class UWeaponInstance*         ReturnValue;
	} params = {};

	params.Slot = Slot;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponComponent.GetWeaponFromIndex
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// int                            Index                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UWeaponInstance*         ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UWeaponInstance* UWeaponComponent::GetWeaponFromIndex(int Index)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponComponent.GetWeaponFromIndex"));

	struct
	{
		int                            Index;
		class UWeaponInstance*         ReturnValue;
	} params = {};

	params.Index = Index;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponComponent.GetWeaponFromClass
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UClass* /*UWeaponInstance*/ WeaponClass                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UWeaponInstance*         ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UWeaponInstance* UWeaponComponent::GetWeaponFromClass(class UClass* /*UWeaponInstance*/ WeaponClass)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponComponent.GetWeaponFromClass"));

	struct
	{
		class UClass* /*UWeaponInstance*/ WeaponClass;
		class UWeaponInstance*         ReturnValue;
	} params = {};

	params.WeaponClass = WeaponClass;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponComponent.GetSlotFromWeapon
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UWeaponInstance*         Weapon                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// EEquipSlot                     ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

EEquipSlot UWeaponComponent::GetSlotFromWeapon(class UWeaponInstance* Weapon)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponComponent.GetSlotFromWeapon"));

	struct
	{
		class UWeaponInstance*         Weapon;
		EEquipSlot                     ReturnValue;
	} params = {};

	params.Weapon = Weapon;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponComponent.GetReticleSpreadMultiplier
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UWeaponComponent::GetReticleSpreadMultiplier()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponComponent.GetReticleSpreadMultiplier"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponComponent.GetReserveAmmo
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UWeaponComponent::GetReserveAmmo()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponComponent.GetReserveAmmo"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponComponent.GetMesh3P
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class USkeletalMeshComponent*  ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class USkeletalMeshComponent* UWeaponComponent::GetMesh3P()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponComponent.GetMesh3P"));

	struct
	{
		class USkeletalMeshComponent*  ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponComponent.GetMesh1P
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class USkeletalMeshComponent*  ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class USkeletalMeshComponent* UWeaponComponent::GetMesh1P()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponComponent.GetMesh1P"));

	struct
	{
		class USkeletalMeshComponent*  ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponComponent.GetMagAmmo
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UWeaponComponent::GetMagAmmo()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponComponent.GetMagAmmo"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponComponent.GetFirstPersonCamera
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UCameraComponent*        ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UCameraComponent* UWeaponComponent::GetFirstPersonCamera()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponComponent.GetFirstPersonCamera"));

	struct
	{
		class UCameraComponent*        ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponComponent.GetDamageModifier
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UWeaponComponent::GetDamageModifier()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponComponent.GetDamageModifier"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponComponent.GetCurrentWeapon
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UWeaponInstance*         ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UWeaponInstance* UWeaponComponent::GetCurrentWeapon()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponComponent.GetCurrentWeapon"));

	struct
	{
		class UWeaponInstance*         ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponComponent.GetAmmoPickupMultiplier
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UWeaponComponent::GetAmmoPickupMultiplier()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponComponent.GetAmmoPickupMultiplier"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponComponent.EquipWeapon
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UWeaponInstance*         Weapon                         (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bCanUnequipExclusive           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bForce                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponComponent::EquipWeapon(class UWeaponInstance* Weapon, bool bCanUnequipExclusive, bool bForce)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponComponent.EquipWeapon"));

	struct
	{
		class UWeaponInstance*         Weapon;
		bool                           bCanUnequipExclusive;
		bool                           bForce;
	} params = {};

	params.Weapon = Weapon;
	params.bCanUnequipExclusive = bCanUnequipExclusive;
	params.bForce = bForce;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponComponent.EquipPreviousWeapon
// (FUNC_Native, FUNC_Public)
// Parameters:
// bool                           bCanUnequipExclusive           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponComponent::EquipPreviousWeapon(bool bCanUnequipExclusive)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponComponent.EquipPreviousWeapon"));

	struct
	{
		bool                           bCanUnequipExclusive;
	} params = {};

	params.bCanUnequipExclusive = bCanUnequipExclusive;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponComponent.CycleWeapon
// (FUNC_Native, FUNC_Public)
// Parameters:
// bool                           bReverse                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponComponent::CycleWeapon(bool bReverse)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponComponent.CycleWeapon"));

	struct
	{
		bool                           bReverse;
	} params = {};

	params.bReverse = bReverse;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponComponent.CosmeticPrimaryFire
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_Const)

void UWeaponComponent::CosmeticPrimaryFire()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponComponent.CosmeticPrimaryFire"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponComponent.CancelWeaponActions
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void UWeaponComponent::CancelWeaponActions()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponComponent.CancelWeaponActions"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponComponent.CancelInputConstrainedWeaponActions
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)

void UWeaponComponent::CancelInputConstrainedWeaponActions()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponComponent.CancelInputConstrainedWeaponActions"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponComponent.AddWeapon
// (FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UClass* /*UWeaponInstance*/ WeaponClass                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// EEquipSlot                     Slot                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           bIsPartOfBatch                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UWeaponInstance*         ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UWeaponInstance* UWeaponComponent::AddWeapon(class UClass* /*UWeaponInstance*/ WeaponClass, EEquipSlot Slot, bool bIsPartOfBatch)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponComponent.AddWeapon"));

	struct
	{
		class UClass* /*UWeaponInstance*/ WeaponClass;
		EEquipSlot                     Slot;
		bool                           bIsPartOfBatch;
		class UWeaponInstance*         ReturnValue;
	} params = {};

	params.WeaponClass = WeaponClass;
	params.Slot = Slot;
	params.bIsPartOfBatch = bIsPartOfBatch;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstanceBeam.Server_BeamToTargetStop
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetServer, FUNC_NetValidate)
// Parameters:
// unsigned char                  Mode                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponInstanceBeam::Server_BeamToTargetStop(unsigned char Mode)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceBeam.Server_BeamToTargetStop"));

	struct
	{
		unsigned char                  Mode;
	} params = {};

	params.Mode = Mode;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceBeam.Server_BeamToTargetStart
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetServer, FUNC_NetValidate)
// Parameters:
// unsigned char                  Mode                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  Target                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FHitResult              TargetHitResult                (CPF_Parm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

void UWeaponInstanceBeam::Server_BeamToTargetStart(unsigned char Mode, class AActor* Target, const struct FHitResult& TargetHitResult)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceBeam.Server_BeamToTargetStart"));

	struct
	{
		unsigned char                  Mode;
		class AActor*                  Target;
		struct FHitResult              TargetHitResult;
	} params = {};

	params.Mode = Mode;
	params.Target = Target;
	params.TargetHitResult = TargetHitResult;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceBeam.OnRep_IsBeaming
// (FUNC_Native, FUNC_Protected)

void UWeaponInstanceBeam::OnRep_IsBeaming()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceBeam.OnRep_IsBeaming"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceBeam.OnRep_BeamTargetActor
// (FUNC_Native, FUNC_Protected)

void UWeaponInstanceBeam::OnRep_BeamTargetActor()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceBeam.OnRep_BeamTargetActor"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceBeam.K2_SearchingForTarget
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)

void UWeaponInstanceBeam::K2_SearchingForTarget()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceBeam.K2_SearchingForTarget"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceBeam.FindBeamHoveringActor
// (FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)
// Parameters:
// class AActor*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class AActor* UWeaponInstanceBeam::FindBeamHoveringActor()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceBeam.FindBeamHoveringActor"));

	struct
	{
		class AActor*                  ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstanceSpawnable.ValidateDeploy
// (FUNC_Native, FUNC_Protected, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_Const)
// Parameters:
// struct FTransform              Transform                      (CPF_Parm, CPF_OutParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstanceSpawnable::ValidateDeploy(struct FTransform* Transform)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceSpawnable.ValidateDeploy"));

	struct
	{
		struct FTransform              Transform;
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	if (Transform != nullptr)
		*Transform = params.Transform;

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstanceSpawnable.Server_SpawnActor
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetServer, FUNC_HasDefaults, FUNC_NetValidate)
// Parameters:
// struct FTransform              DeployTransform                (CPF_ConstParm, CPF_Parm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

void UWeaponInstanceSpawnable::Server_SpawnActor(const struct FTransform& DeployTransform)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceSpawnable.Server_SpawnActor"));

	struct
	{
		struct FTransform              DeployTransform;
	} params = {};

	params.DeployTransform = DeployTransform;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceSpawnable.OnDeployableSpawned
// (FUNC_Native, FUNC_Public)
// Parameters:
// class ADeployable*             DeployedActor                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponInstanceSpawnable::OnDeployableSpawned(class ADeployable* DeployedActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceSpawnable.OnDeployableSpawned"));

	struct
	{
		class ADeployable*             DeployedActor;
	} params = {};

	params.DeployedActor = DeployedActor;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceSpawnable.OnDeployableDestroyed
// (FUNC_Native, FUNC_Public)
// Parameters:
// class ADeployable*             DeployedActor                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponInstanceSpawnable::OnDeployableDestroyed(class ADeployable* DeployedActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceSpawnable.OnDeployableDestroyed"));

	struct
	{
		class ADeployable*             DeployedActor;
	} params = {};

	params.DeployedActor = DeployedActor;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceSpawnable.GetSpawnTransform
// (FUNC_Native, FUNC_Event, FUNC_Public, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_BlueprintEvent)
// Parameters:
// struct FTransform              SpawnTransform                 (CPF_Parm, CPF_OutParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

void UWeaponInstanceSpawnable::GetSpawnTransform(struct FTransform* SpawnTransform)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceSpawnable.GetSpawnTransform"));

	struct
	{
		struct FTransform              SpawnTransform;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	if (SpawnTransform != nullptr)
		*SpawnTransform = params.SpawnTransform;
}


// Function ProjectX.WeaponInstanceSpawnable.GetDeployableClass
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UClass* /*ADeployable*/  ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UClass* /*ADeployable*/ UWeaponInstanceSpawnable::GetDeployableClass()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceSpawnable.GetDeployableClass"));

	struct
	{
		class UClass* /*ADeployable*/  ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstanceSpawnable.DestroyOldestDeployable
// (FUNC_Native, FUNC_Public)

void UWeaponInstanceSpawnable::DestroyOldestDeployable()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceSpawnable.DestroyOldestDeployable"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceSpawnable.CanInteractWithActiveDeployables
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstanceSpawnable::CanInteractWithActiveDeployables()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceSpawnable.CanInteractWithActiveDeployables"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstanceControlled.OnDeployableDeploymentComplete
// (FUNC_Final, FUNC_Native, FUNC_Protected)
// Parameters:
// class ADeployable*             Deployable                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponInstanceControlled::OnDeployableDeploymentComplete(class ADeployable* Deployable)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceControlled.OnDeployableDeploymentComplete"));

	struct
	{
		class ADeployable*             Deployable;
	} params = {};

	params.Deployable = Deployable;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceControlled.K2_OnDeployableControlStopFinished
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)

void UWeaponInstanceControlled::K2_OnDeployableControlStopFinished()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceControlled.K2_OnDeployableControlStopFinished"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceControlled.K2_OnDeployableControlStop
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)

void UWeaponInstanceControlled::K2_OnDeployableControlStop()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceControlled.K2_OnDeployableControlStop"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceControlled.K2_OnDeployableControlStarted
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)
// Parameters:
// class ADeployable*             Deployable                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponInstanceControlled::K2_OnDeployableControlStarted(class ADeployable* Deployable)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceControlled.K2_OnDeployableControlStarted"));

	struct
	{
		class ADeployable*             Deployable;
	} params = {};

	params.Deployable = Deployable;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceControlled.IsWaitingForControlStop
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstanceControlled::IsWaitingForControlStop()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceControlled.IsWaitingForControlStop"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstanceControlled.IsControllingDeployable
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstanceControlled::IsControllingDeployable()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceControlled.IsControllingDeployable"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstanceControlled.GetDeployableOverlayWidget
// (FUNC_Final, FUNC_Native, FUNC_Protected, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UUserWidget*             ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UUserWidget* UWeaponInstanceControlled::GetDeployableOverlayWidget()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceControlled.GetDeployableOverlayWidget"));

	struct
	{
		class UUserWidget*             ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstanceControlled.GetCurrentlyControlledDeployable
// (FUNC_Final, FUNC_Native, FUNC_Protected, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class ADeployableControllable* ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class ADeployableControllable* UWeaponInstanceControlled::GetCurrentlyControlledDeployable()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceControlled.GetCurrentlyControlledDeployable"));

	struct
	{
		class ADeployableControllable* ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstanceControlled.FinishDeathAnimation
// (FUNC_Native, FUNC_Protected, FUNC_BlueprintCallable)

void UWeaponInstanceControlled::FinishDeathAnimation()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceControlled.FinishDeathAnimation"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceDesignator.Server_Unreliable_UpdateDesignation
// (FUNC_Net, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetServer, FUNC_HasDefaults, FUNC_NetValidate)
// Parameters:
// struct FVector                 NewDesignatorLocation          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponInstanceDesignator::Server_Unreliable_UpdateDesignation(const struct FVector& NewDesignatorLocation)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceDesignator.Server_Unreliable_UpdateDesignation"));

	struct
	{
		struct FVector                 NewDesignatorLocation;
	} params = {};

	params.NewDesignatorLocation = NewDesignatorLocation;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceDesignator.Server_Reliable_StartDesignation
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetServer, FUNC_HasDefaults, FUNC_NetValidate)
// Parameters:
// struct FVector                 InitialDesignatorLocation      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponInstanceDesignator::Server_Reliable_StartDesignation(const struct FVector& InitialDesignatorLocation)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceDesignator.Server_Reliable_StartDesignation"));

	struct
	{
		struct FVector                 InitialDesignatorLocation;
	} params = {};

	params.InitialDesignatorLocation = InitialDesignatorLocation;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceDesignator.Multicast_Unreliable_UpdateDesignation
// (FUNC_Net, FUNC_Native, FUNC_Event, FUNC_NetMulticast, FUNC_Protected, FUNC_HasDefaults)
// Parameters:
// struct FVector                 NewDesignatorLocation          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponInstanceDesignator::Multicast_Unreliable_UpdateDesignation(const struct FVector& NewDesignatorLocation)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceDesignator.Multicast_Unreliable_UpdateDesignation"));

	struct
	{
		struct FVector                 NewDesignatorLocation;
	} params = {};

	params.NewDesignatorLocation = NewDesignatorLocation;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceDesignator.K2_OnDesignatorMarkerToggled
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)

void UWeaponInstanceDesignator::K2_OnDesignatorMarkerToggled()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceDesignator.K2_OnDesignatorMarkerToggled"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceDesignator.IsValidDesignator
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstanceDesignator::IsValidDesignator()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceDesignator.IsValidDesignator"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstanceDesignator.GetTraceParticleSystem
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UParticleSystemComponent* ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UParticleSystemComponent* UWeaponInstanceDesignator::GetTraceParticleSystem()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceDesignator.GetTraceParticleSystem"));

	struct
	{
		class UParticleSystemComponent* ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstanceDesignator.GetDesignatorProgress
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UWeaponInstanceDesignator::GetDesignatorProgress()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceDesignator.GetDesignatorProgress"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstanceDesignatorGuided.Server_Reliable_UpdateTargetLocation
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetServer, FUNC_HasDefaults, FUNC_NetValidate)
// Parameters:
// struct FVector                 NewTargetLocation              (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponInstanceDesignatorGuided::Server_Reliable_UpdateTargetLocation(const struct FVector& NewTargetLocation)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceDesignatorGuided.Server_Reliable_UpdateTargetLocation"));

	struct
	{
		struct FVector                 NewTargetLocation;
	} params = {};

	params.NewTargetLocation = NewTargetLocation;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceDesignatorGuided.GuidedActorDestroyed
// (FUNC_Native, FUNC_Protected)
// Parameters:
// class AActor*                  Actor                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponInstanceDesignatorGuided::GuidedActorDestroyed(class AActor* Actor)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceDesignatorGuided.GuidedActorDestroyed"));

	struct
	{
		class AActor*                  Actor;
	} params = {};

	params.Actor = Actor;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceDesignatorGuided.Client_Reliable_NotifyGuidedActorDestroyed
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetClient)
// Parameters:
// class AActor*                  Actor                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponInstanceDesignatorGuided::Client_Reliable_NotifyGuidedActorDestroyed(class AActor* Actor)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceDesignatorGuided.Client_Reliable_NotifyGuidedActorDestroyed"));

	struct
	{
		class AActor*                  Actor;
	} params = {};

	params.Actor = Actor;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceToggleable.ToggleWeapon
// (FUNC_Native, FUNC_Protected, FUNC_BlueprintCallable)
// Parameters:
// bool                           bEnable                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponInstanceToggleable::ToggleWeapon(bool bEnable)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceToggleable.ToggleWeapon"));

	struct
	{
		bool                           bEnable;
	} params = {};

	params.bEnable = bEnable;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceToggleable.Server_Reliable_ForceToggle
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetServer)
// Parameters:
// bool                           bEnable                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponInstanceToggleable::Server_Reliable_ForceToggle(bool bEnable)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceToggleable.Server_Reliable_ForceToggle"));

	struct
	{
		bool                           bEnable;
	} params = {};

	params.bEnable = bEnable;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceToggleable.OnWeaponFire
// (FUNC_Native, FUNC_Protected)
// Parameters:
// unsigned char                  Mode                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponInstanceToggleable::OnWeaponFire(unsigned char Mode)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceToggleable.OnWeaponFire"));

	struct
	{
		unsigned char                  Mode;
	} params = {};

	params.Mode = Mode;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceToggleable.OnRep_Enabled
// (FUNC_Native, FUNC_Protected)

void UWeaponInstanceToggleable::OnRep_Enabled()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceToggleable.OnRep_Enabled"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceToggleable.OnHoldInteraction
// (FUNC_Native, FUNC_Protected)
// Parameters:
// class UInteractableComponent*  Interactable                   (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     Component                      (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          HoldTime                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class APlayerController*       Sender                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponInstanceToggleable::OnHoldInteraction(class UInteractableComponent* Interactable, class UPrimitiveComponent* Component, float HoldTime, class APlayerController* Sender)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceToggleable.OnHoldInteraction"));

	struct
	{
		class UInteractableComponent*  Interactable;
		class UPrimitiveComponent*     Component;
		float                          HoldTime;
		class APlayerController*       Sender;
	} params = {};

	params.Interactable = Interactable;
	params.Component = Component;
	params.HoldTime = HoldTime;
	params.Sender = Sender;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceToggleable.OnEnabledAfflictionEnded
// (FUNC_Native, FUNC_Protected)

void UWeaponInstanceToggleable::OnEnabledAfflictionEnded()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceToggleable.OnEnabledAfflictionEnded"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceToggleable.K2_ToggleOn
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)

void UWeaponInstanceToggleable::K2_ToggleOn()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceToggleable.K2_ToggleOn"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceToggleable.K2_ToggleOff
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)

void UWeaponInstanceToggleable::K2_ToggleOff()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceToggleable.K2_ToggleOff"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceToggleable.Client_Reliable_ToggleOff
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetClient)
// Parameters:
// float                          FailWorldTime                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponInstanceToggleable::Client_Reliable_ToggleOff(float FailWorldTime)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceToggleable.Client_Reliable_ToggleOff"));

	struct
	{
		float                          FailWorldTime;
	} params = {};

	params.FailWorldTime = FailWorldTime;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceToggleable.Client_Reliable_OnEnabledAfflictionEnded
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetClient)

void UWeaponInstanceToggleable::Client_Reliable_OnEnabledAfflictionEnded()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceToggleable.Client_Reliable_OnEnabledAfflictionEnded"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceMelee.Server_Reliable_NotifyHitActors
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetServer, FUNC_NetValidate)
// Parameters:
// TArray<struct FHitResult>      HitList                        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

void UWeaponInstanceMelee::Server_Reliable_NotifyHitActors(TArray<struct FHitResult> HitList)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceMelee.Server_Reliable_NotifyHitActors"));

	struct
	{
		TArray<struct FHitResult>      HitList;
	} params = {};

	params.HitList = HitList;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceMelee.Multicast_Unreliable_SpawnImpactEffect
// (FUNC_Net, FUNC_Native, FUNC_Event, FUNC_NetMulticast, FUNC_Protected)
// Parameters:
// struct FHitResult              Hit                            (CPF_ConstParm, CPF_Parm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

void UWeaponInstanceMelee::Multicast_Unreliable_SpawnImpactEffect(const struct FHitResult& Hit)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceMelee.Multicast_Unreliable_SpawnImpactEffect"));

	struct
	{
		struct FHitResult              Hit;
	} params = {};

	params.Hit = Hit;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceMelee.Client_Unreliable_UpdateMagazineAmmo
// (FUNC_Net, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetClient)
// Parameters:
// float                          MagAmmo                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponInstanceMelee::Client_Unreliable_UpdateMagazineAmmo(float MagAmmo)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceMelee.Client_Unreliable_UpdateMagazineAmmo"));

	struct
	{
		float                          MagAmmo;
	} params = {};

	params.MagAmmo = MagAmmo;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceGroundPound.OnLandedGround
// (FUNC_Event, FUNC_Protected, FUNC_HasOutParms, FUNC_BlueprintEvent)
// Parameters:
// struct FHitResult              Hit                            (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

void UWeaponInstanceGroundPound::OnLandedGround(const struct FHitResult& Hit)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceGroundPound.OnLandedGround"));

	struct
	{
		struct FHitResult              Hit;
	} params = {};

	params.Hit = Hit;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceGroundPound.Multicast_PlayLandingEffects
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_NetMulticast, FUNC_Protected)
// Parameters:
// struct FHitResult              Hit                            (CPF_ConstParm, CPF_Parm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

void UWeaponInstanceGroundPound::Multicast_PlayLandingEffects(const struct FHitResult& Hit)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceGroundPound.Multicast_PlayLandingEffects"));

	struct
	{
		struct FHitResult              Hit;
	} params = {};

	params.Hit = Hit;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceGroundPound.Multicast_PlayAttackEffect
// (FUNC_Net, FUNC_Native, FUNC_Event, FUNC_NetMulticast, FUNC_Protected)

void UWeaponInstanceGroundPound::Multicast_PlayAttackEffect()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceGroundPound.Multicast_PlayAttackEffect"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceGroundPound.LandedOnGround
// (FUNC_Native, FUNC_Protected, FUNC_HasOutParms, FUNC_HasDefaults)
// Parameters:
// class UPrimitiveComponent*     HitComponent                   (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FVector                 NormalImpulse                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FHitResult              Hit                            (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

void UWeaponInstanceGroundPound::LandedOnGround(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceGroundPound.LandedOnGround"));

	struct
	{
		class UPrimitiveComponent*     HitComponent;
		class AActor*                  OtherActor;
		class UPrimitiveComponent*     OtherComp;
		struct FVector                 NormalImpulse;
		struct FHitResult              Hit;
	} params = {};

	params.HitComponent = HitComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceGroundPound.IsMinimumHeightReached
// (FUNC_Final, FUNC_Native, FUNC_Protected, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstanceGroundPound::IsMinimumHeightReached()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceGroundPound.IsMinimumHeightReached"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstanceGroundPound.GetCurrentHeight
// (FUNC_Final, FUNC_Native, FUNC_Protected, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UWeaponInstanceGroundPound::GetCurrentHeight()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceGroundPound.GetCurrentHeight"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstanceGroundPound.Client_LandedOnGround
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetClient)
// Parameters:
// struct FHitResult              Hit                            (CPF_ConstParm, CPF_Parm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

void UWeaponInstanceGroundPound::Client_LandedOnGround(const struct FHitResult& Hit)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceGroundPound.Client_LandedOnGround"));

	struct
	{
		struct FHitResult              Hit;
	} params = {};

	params.Hit = Hit;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceMeleeDash.OnRep_AltFireCounter
// (FUNC_Native, FUNC_Protected)

void UWeaponInstanceMeleeDash::OnRep_AltFireCounter()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceMeleeDash.OnRep_AltFireCounter"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceMeleeDash.OnHitDuringWeaponMovement
// (FUNC_Native, FUNC_Protected, FUNC_HasOutParms, FUNC_HasDefaults)
// Parameters:
// class UPrimitiveComponent*     HitComponent                   (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FVector                 NormalImpulse                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FHitResult              Hit                            (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

void UWeaponInstanceMeleeDash::OnHitDuringWeaponMovement(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceMeleeDash.OnHitDuringWeaponMovement"));

	struct
	{
		class UPrimitiveComponent*     HitComponent;
		class AActor*                  OtherActor;
		class UPrimitiveComponent*     OtherComp;
		struct FVector                 NormalImpulse;
		struct FHitResult              Hit;
	} params = {};

	params.HitComponent = HitComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstancePowerSword.Server_ToggleReflection
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetServer)
// Parameters:
// bool                           bToggle                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponInstancePowerSword::Server_ToggleReflection(bool bToggle)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstancePowerSword.Server_ToggleReflection"));

	struct
	{
		bool                           bToggle;
	} params = {};

	params.bToggle = bToggle;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstancePowerSword.OnRep_ReflectionActive
// (FUNC_Final, FUNC_Native, FUNC_Private)

void UWeaponInstancePowerSword::OnRep_ReflectionActive()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstancePowerSword.OnRep_ReflectionActive"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstancePowerSword.Multicast_BlockEffect
// (FUNC_Net, FUNC_Native, FUNC_Event, FUNC_NetMulticast, FUNC_Protected)

void UWeaponInstancePowerSword::Multicast_BlockEffect()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstancePowerSword.Multicast_BlockEffect"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstancePowerSword.GetAnimState
// (FUNC_Event, FUNC_Public, FUNC_BlueprintEvent, FUNC_Const)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

int UWeaponInstancePowerSword::GetAnimState()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstancePowerSword.GetAnimState"));

	struct
	{
		int                            ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstanceRadar.GetRange
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

float UWeaponInstanceRadar::GetRange()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceRadar.GetRange"));

	struct
	{
		float                          ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstanceSpawnableVehicle.VehicleDestroyed
// (FUNC_Event, FUNC_Protected, FUNC_BlueprintEvent)

void UWeaponInstanceSpawnableVehicle::VehicleDestroyed()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceSpawnableVehicle.VehicleDestroyed"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceSpawnableVehicle.Server_Toggle_SpawnActor
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Public, FUNC_NetServer, FUNC_HasDefaults, FUNC_NetValidate)
// Parameters:
// struct FTransform              DeployTransform                (CPF_ConstParm, CPF_Parm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
// bool                           OverrideValidation             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponInstanceSpawnableVehicle::Server_Toggle_SpawnActor(const struct FTransform& DeployTransform, bool OverrideValidation)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceSpawnableVehicle.Server_Toggle_SpawnActor"));

	struct
	{
		struct FTransform              DeployTransform;
		bool                           OverrideValidation;
	} params = {};

	params.DeployTransform = DeployTransform;
	params.OverrideValidation = OverrideValidation;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceSpawnableVehicle.OnVehicleDestroyed
// (FUNC_Native, FUNC_Protected)

void UWeaponInstanceSpawnableVehicle::OnVehicleDestroyed()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceSpawnableVehicle.OnVehicleDestroyed"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceSpawnableVehicle.OnRep_Vehicle
// (FUNC_Native, FUNC_Protected)

void UWeaponInstanceSpawnableVehicle::OnRep_Vehicle()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceSpawnableVehicle.OnRep_Vehicle"));

	struct
	{
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceSpawnableVehicle.OnExitedVehicle
// (FUNC_Final, FUNC_Native, FUNC_Protected)
// Parameters:
// class AProjectXVehicle*        PreviousVehicle                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AProjectXCharacter*      OldDriver                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponInstanceSpawnableVehicle::OnExitedVehicle(class AProjectXVehicle* PreviousVehicle, class AProjectXCharacter* OldDriver)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceSpawnableVehicle.OnExitedVehicle"));

	struct
	{
		class AProjectXVehicle*        PreviousVehicle;
		class AProjectXCharacter*      OldDriver;
	} params = {};

	params.PreviousVehicle = PreviousVehicle;
	params.OldDriver = OldDriver;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceSpawnableVehicle.OnDriverDied
// (FUNC_Final, FUNC_Native, FUNC_Protected, FUNC_HasOutParms)
// Parameters:
// class AActor*                  Victim                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          Damage                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FDamageEvent            DamageEvent                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// class AController*             EventInstigator                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class APlayerState*            InstigatorPlayerState          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponInstanceSpawnableVehicle::OnDriverDied(class AActor* Victim, float Damage, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser, class APlayerState* InstigatorPlayerState)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceSpawnableVehicle.OnDriverDied"));

	struct
	{
		class AActor*                  Victim;
		float                          Damage;
		struct FDamageEvent            DamageEvent;
		class AController*             EventInstigator;
		class AActor*                  DamageCauser;
		class APlayerState*            InstigatorPlayerState;
	} params = {};

	params.Victim = Victim;
	params.Damage = Damage;
	params.DamageEvent = DamageEvent;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;
	params.InstigatorPlayerState = InstigatorPlayerState;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceSpawnableVehicle.LeaveVehicle
// (FUNC_Final, FUNC_Native, FUNC_Protected)
// Parameters:
// bool                           bHold                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          Duration                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponInstanceSpawnableVehicle::LeaveVehicle(bool bHold, float Duration)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceSpawnableVehicle.LeaveVehicle"));

	struct
	{
		bool                           bHold;
		float                          Duration;
	} params = {};

	params.bHold = bHold;
	params.Duration = Duration;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceSpawnableVehicle.GetVehicleClass
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UClass* /*AProjectXVehicle*/ ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UClass* /*AProjectXVehicle*/ UWeaponInstanceSpawnableVehicle::GetVehicleClass()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceSpawnableVehicle.GetVehicleClass"));

	struct
	{
		class UClass* /*AProjectXVehicle*/ ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstanceSpawnableVehicle.GetVehicle
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AProjectXVehicle*        ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class AProjectXVehicle* UWeaponInstanceSpawnableVehicle::GetVehicle()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceSpawnableVehicle.GetVehicle"));

	struct
	{
		class AProjectXVehicle*        ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstanceSpawnableVehicle.GetSpawnTransform
// (FUNC_Native, FUNC_Event, FUNC_Public, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_BlueprintEvent)
// Parameters:
// struct FTransform              SpawnTransform                 (CPF_Parm, CPF_OutParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

void UWeaponInstanceSpawnableVehicle::GetSpawnTransform(struct FTransform* SpawnTransform)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceSpawnableVehicle.GetSpawnTransform"));

	struct
	{
		struct FTransform              SpawnTransform;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	if (SpawnTransform != nullptr)
		*SpawnTransform = params.SpawnTransform;
}


// Function ProjectX.WeaponInstanceSpawnableVehicle.GetDisplayScale
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_HasDefaults, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// struct FVector                 ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FVector UWeaponInstanceSpawnableVehicle::GetDisplayScale()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceSpawnableVehicle.GetDisplayScale"));

	struct
	{
		struct FVector                 ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstanceSpawnableVehicle.DestroyVehicle
// (FUNC_Final, FUNC_Native, FUNC_Protected)
// Parameters:
// class AProjectXVehicle*        PreviousVehicle                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

void UWeaponInstanceSpawnableVehicle::DestroyVehicle(class AProjectXVehicle* PreviousVehicle)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceSpawnableVehicle.DestroyVehicle"));

	struct
	{
		class AProjectXVehicle*        PreviousVehicle;
	} params = {};

	params.PreviousVehicle = PreviousVehicle;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceStatics.GetDirectionAroundCone
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_BlueprintCallable)
// Parameters:
// struct FVector                 Direction                      (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          HorizontalConeHalfAngleRad     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          VerticalConeHalfAngleRad       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          Degrees                        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FVector                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

struct FVector UWeaponInstanceStatics::GetDirectionAroundCone(const struct FVector& Direction, float HorizontalConeHalfAngleRad, float VerticalConeHalfAngleRad, float Degrees)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceStatics.GetDirectionAroundCone"));

	struct
	{
		struct FVector                 Direction;
		float                          HorizontalConeHalfAngleRad;
		float                          VerticalConeHalfAngleRad;
		float                          Degrees;
		struct FVector                 ReturnValue;
	} params = {};

	params.Direction = Direction;
	params.HorizontalConeHalfAngleRad = HorizontalConeHalfAngleRad;
	params.VerticalConeHalfAngleRad = VerticalConeHalfAngleRad;
	params.Degrees = Degrees;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstanceStatics.GetClosestTargetInCone
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_BlueprintCallable)
// Parameters:
// class AActor*                  Owner                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FTransform              ViewTransform                  (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
// struct FTransform              Origin                         (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
// float                          Angle                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// float                          Range                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes                    (CPF_Parm, CPF_ZeroConstructor, CPF_NativeAccessSpecifierPublic)
// class AActor*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class AActor* UWeaponInstanceStatics::GetClosestTargetInCone(class AActor* Owner, const struct FTransform& ViewTransform, const struct FTransform& Origin, float Angle, float Range, TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceStatics.GetClosestTargetInCone"));

	struct
	{
		class AActor*                  Owner;
		struct FTransform              ViewTransform;
		struct FTransform              Origin;
		float                          Angle;
		float                          Range;
		TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes;
		class AActor*                  ReturnValue;
	} params = {};

	params.Owner = Owner;
	params.ViewTransform = ViewTransform;
	params.Origin = Origin;
	params.Angle = Angle;
	params.Range = Range;
	params.ObjectTypes = ObjectTypes;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstanceStatics.GetClosestTarget
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_BlueprintCallable)
// Parameters:
// class AActor*                  Owner                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FTransform              Origin                         (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
// float                          Range                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes                    (CPF_Parm, CPF_ZeroConstructor, CPF_NativeAccessSpecifierPublic)
// class AActor*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class AActor* UWeaponInstanceStatics::GetClosestTarget(class AActor* Owner, const struct FTransform& Origin, float Range, TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceStatics.GetClosestTarget"));

	struct
	{
		class AActor*                  Owner;
		struct FTransform              Origin;
		float                          Range;
		TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes;
		class AActor*                  ReturnValue;
	} params = {};

	params.Owner = Owner;
	params.Origin = Origin;
	params.Range = Range;
	params.ObjectTypes = ObjectTypes;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstanceStatics.CreateTightAimBillboard
// (FUNC_Final, FUNC_Native, FUNC_Static, FUNC_Public, FUNC_HasOutParms, FUNC_BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UClass* /*UTightAimWeaponBillboard*/ TightAimBillboardClass         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UWeaponInstance*         Weapon                         (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// TArray<struct FMaterialSpriteElement> NewElements                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_NativeAccessSpecifierPublic)
// struct FName                   Socket                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// class UTightAimWeaponBillboard* ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UTightAimWeaponBillboard* UWeaponInstanceStatics::CreateTightAimBillboard(class UObject* WorldContextObject, class UClass* /*UTightAimWeaponBillboard*/ TightAimBillboardClass, class UWeaponInstance* Weapon, TArray<struct FMaterialSpriteElement> NewElements, const struct FName& Socket)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceStatics.CreateTightAimBillboard"));

	struct
	{
		class UObject*                 WorldContextObject;
		class UClass* /*UTightAimWeaponBillboard*/ TightAimBillboardClass;
		class UWeaponInstance*         Weapon;
		TArray<struct FMaterialSpriteElement> NewElements;
		struct FName                   Socket;
		class UTightAimWeaponBillboard* ReturnValue;
	} params = {};

	params.WorldContextObject = WorldContextObject;
	params.TightAimBillboardClass = TightAimBillboardClass;
	params.Weapon = Weapon;
	params.NewElements = NewElements;
	params.Socket = Socket;

	if (fn)
	{
		static auto defaultObj = StaticClass()->CreateDefaultObject();
		defaultObj->ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstanceTrace.Server_Reliabe_TraceHit
// (FUNC_Net, FUNC_NetReliable, FUNC_Native, FUNC_Event, FUNC_Protected, FUNC_NetServer, FUNC_NetValidate)
// Parameters:
// TArray<struct FHitResult>      HitResults                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)

void UWeaponInstanceTrace::Server_Reliabe_TraceHit(TArray<struct FHitResult> HitResults)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceTrace.Server_Reliabe_TraceHit"));

	struct
	{
		TArray<struct FHitResult>      HitResults;
	} params = {};

	params.HitResults = HitResults;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}
}


// Function ProjectX.WeaponInstanceVehicle.ShouldProcessViewRotation
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_Const)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponInstanceVehicle::ShouldProcessViewRotation()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceVehicle.ShouldProcessViewRotation"));

	struct
	{
		bool                           ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstanceVehicle.GetVehicle
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class AProjectXVehicle*        ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class AProjectXVehicle* UWeaponInstanceVehicle::GetVehicle()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceVehicle.GetVehicle"));

	struct
	{
		class AProjectXVehicle*        ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponInstanceVehicle.GetSeat
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable, FUNC_BlueprintPure, FUNC_Const)
// Parameters:
// class UVehicleSeatComponent*   ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

class UVehicleSeatComponent* UWeaponInstanceVehicle::GetSeat()
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponInstanceVehicle.GetSeat"));

	struct
	{
		class UVehicleSeatComponent*   ReturnValue;
	} params = {};


	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


// Function ProjectX.WeaponSpreadDataAsset.SaveDataToDisk
// (FUNC_Final, FUNC_Native, FUNC_Public, FUNC_BlueprintCallable)
// Parameters:
// class UObject*                 Outer                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// struct FString                 SaveName                       (CPF_Parm, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

bool UWeaponSpreadDataAsset::SaveDataToDisk(class UObject* Outer, const struct FString& SaveName)
{
	static UFunction* fn = UObject::FindObject<UFunction>(_xor_("Function ProjectX.WeaponSpreadDataAsset.SaveDataToDisk"));

	struct
	{
		class UObject*                 Outer;
		struct FString                 SaveName;
		bool                           ReturnValue;
	} params = {};

	params.Outer = Outer;
	params.SaveName = SaveName;

	if (fn)
	{
		UObject::ProcessEvent(fn, &params);
	}

	return params.ReturnValue;
}


}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
